company_name,dapp_name,Vulnerability,swc_type,granularity,location,vulnerable_link
Blockchain Labs NZ,BitHero,Typo in function name setEarlyParicipantWhitelist,Typographical Error,Line Level,410,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/audit/contracts/CrowdsaleBase.sol#L410
Blockchain Labs NZ,BitHero,Avoid magic number,not_swc,,,
Blockchain Labs NZ,BitHero,Use .transfer instead of .send ,not_swc,,,
Blockchain Labs NZ,BitHero,Use explicit types for variables,not_swc,,,
Blockchain Labs NZ,BitHero,Using require is recommended over throw ,not_swc,,,
Blockchain Labs NZ,BitHero,Confusing logic in isBreakingCap function,not_swc,,,
Blockchain Labs NZ,BitHero,CrowdsaleBase has no Solidity version specified,Floating Pragma,Subcontract Level,1-464,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/CrowdsaleBase.sol
Blockchain Labs NZ,BitHero,Make visibility explicitly declared on functions,Function Default Visibility,Line Level,"137, 148, 159",https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/AllocatedCrowdsaleMixin.sol#L37，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L148，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L159
Blockchain Labs NZ,BitHero,Old versions of Solidity used,Outdated Compiler Version,Line Level,7,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/DefaultFinalizeAgent.sol#L7
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Duplicated Calculations,Code With No Effects,Function Level,456-516,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L456-L516
BlockSec,blocksec_alpaca_v1.0_signed,Considering the Impact of Transaction Ordering Dependency,Transaction Order Dependence,Function Level,"268-324, 214-261","https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L214-L261, https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324"
BlockSec,blocksec_alpaca_v1.0_signed,Potential Precision Loss,Integer Overflow and Underflow,Line Level,"232,408,414",https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L232
BlockSec,blocksec_alpaca_v1.0_signed,Unreturned Values,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Initialization Parameters,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unlimited Withdraw Value,Unprotected Ether Withdrawal,Function Level,268-324,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locking of Native Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Price,Block values as a proxy for time,Line Level,70,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L70
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locked Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Inconsistency Checks in the Worker Contracts,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Access Out Of Bounds in the getBlockByTime Function,DoS with Failed Call,Function Level,118-142,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked Arrays in the claimRewardMany Function,DoS With Block Gas Limit,Line Level,270,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol#L270
BlockSec,blocksec_multichain_vemult_v1.0_signed,Check Zero Address In the ve.ownerOf Function,Delegatecall to Untrusted Callee,Line Level,491,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked ERC-721 Callback Result,Unchecked Call Return Value,Line Level,679,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L679
BlockSec,blocksec_multichain_vemult_v1.0_signed,Improper Check for the Return Values of the transferFrom Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Incorrect Address Used in the _burn Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Burn Logic,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Handling of Epoch Time,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent End Time in the addEpochBatch Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Reward Calculation,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Implement Secure Logic for the transferAdmin Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Avoid Continuous Divisions in the _pendingRewardSingle Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Alleviate the Concern of Potential Centrality,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Follow the Checks-Effects-Interactions Pattern,Reentrancy,Line Level,1095-1098,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L1095-L1098
BlockSec,blocksec_stnd_v1.7_signed,The VaultManager contract does not handle the debt decimals when judging whether it is a valid CDP,Integer Overflow and Underflow,Line Level,162,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/VaultManager.sol#L162
BlockSec,blocksec_stnd_v1.7_signed,Uninitialized CDP vaults may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Incorrect usage to the function isValidCDP may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The local variables collateral and debt shadow the global ones,Shadowing State Variables,Line Level,77-78,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol#L77-L78
BlockSec,blocksec_stnd_v1.7_signed,Fees can not be distributed as expected due to the unreachable branch,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Potential mistakes,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Anyone can withdraw the liquidated collaterals,Unprotected Ether Withdrawal,Line Level,34,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/pools/liquidation/Liquidator.sol
BlockSec,blocksec_stnd_v1.7_signed,The check in the function liquidate can not be passed,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The global variable borrow is not be updated correctly,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Users’ collaterals may be locked in vaults,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The potential reentrancy risk,Reentrancy,Function Level,178-209,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,The minting cap may be bypassed,Reentrancy,Function Level,216-226,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,Price manipulation attacks against FeeRoll contract,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Finish the function mintFromVault,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Add more smart contracts in the audit list,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Make the codes and comments consistent,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],False approval mechanism in AaveDeposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Key should be private to enforce proper use,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Function can be exported to library,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],LendingPoolAddress can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Prevent contract to be initialized multiple times,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],SwapToPositionRatio function can be called by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],UniswapAddressHolder variables can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Access protection is not working in modifier,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Swap is not safe for front-runs,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Logic to find best pool does not find best one,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing liquidity in Aave deposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on external security promises for ticks,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unsafe cast to int24,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Severe over-/underflow risk without SafeMath,Integer Overflow and Underflow,Line Level,131,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/IdleLiquidityModule.sol#L131
Byterocket,Orbit DeFi[05.29.2022],Empty data doesn’t always revert,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong comparison operator,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Misleading or wrong documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not making use of SafeMath where appropriate,Integer Overflow and Underflow,Line Level,"11-74, 53-54","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/helpers/SwapHelper.sol#L11-L74, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/actions/ZapIn.sol#L53-L54"
Byterocket,Orbit DeFi[05.29.2022],Faulty reliance on data to be present,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of 32 bits does not save gas,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of unsafe ERC20 transfers,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Non-standard delete from array pattern,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Undocumented constant value,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Invalid documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong use of allowance,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use underscores for large numerals,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the getStorage function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unnecessary double function exposed,Code With No Effects,Line Level,87,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManagerFactory.sol#L87
Byterocket,Orbit DeFi[05.29.2022],Unnecessary deadline extension,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Insufficient state-modifying function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong type used for Uniswap V3,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the default method for maximum values,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Making use of undocumented side-effect,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Only emit events if the state changed,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on false guarantees,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of transferFrom instead of transfer,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unchangeable global variables should be immutable,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing visibility keyword,State Variable Default Visibility,Line Level,"13-14, 22, 17, 17-18, 18-19","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManager.sol#L13-L14, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AaveModule.sol#L22, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AutoCompoundModule.sol#L17, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/DepositRecipes.sol#L17-L18, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/WithdrawRecipes.sol#L18-L19"
Coinspect,Incognito Audit,Outdated Solidity version,Outdated Compiler Version,Line Level,1,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/incognito_proxy.sol#L1
Coinspect,Incognito Audit,Ambiguous signatures in requestWithdraw and execute,not_swc,,,
Coinspect,Incognito Audit,Function claim in TransparentUpgradableProxy is not transparent,Function Default Visibility,Function Level,298-302,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/transparentUpgraded.sol#L298-L302
Coinspect,Incognito Audit,Integer overflows in functions withdraw and submitBurnProof,Integer Overflow and Underflow,Line Level,"336,408",https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Free parameters in function execute controllable by front-runners,Transaction Order Dependence,Line Level,520,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Uses of require without error string,not_swc,,,
Coinspect,Incognito Audit,Unnecessary payable function,not_swc,,,
Coinspect,Incognito Audit,Invalid signatures accepted as signed by address(0),not_swc,,,
Coinspect,Incognito Audit,Partially arbitrary external calls controllable by users,Unprotected Ether Withdrawal,Function Level,510-545,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol#L510-L545
Coinspect,Incognito Audit,Insufficient checks when swapping committees,not_swc,,,
Coinspect,Incognito Audit,Inconsistencies with committee swapping lead to race condition,not_swc,,,
consensys,0x_Protocol_v2,A malicious maker can empty a taker’s account of all tokens.,not_swc,,,
consensys,0x_Protocol_v2,MixinSignatureValidator: Insecure signature validator SignatureType.Caller,Lack of Proper Signature Verification,Function Level,51-58,https://github.com/0xProject/0x-monorepo/pull/1015/files#diff-303846d1bc6b014a253355f11d5722c2efd585de3aeac064f0d5d170af76b167#L51-L58
consensys,0x_Protocol_v2,Use of outdated multisig wallet,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: timelocked transactions affected by changing wallet parameters,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: removeAuthorizedAddressAtIndex requires multiple confirmations,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,MixinAuthorizable: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Insufficient testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Token: inaccurate isContract function,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: accepts ETH,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner duplicates code for readBytes4 function,not_swc,,,
consensys,0x_Protocol_v2,Outdated compiler version,Outdated Compiler Version,Line Level,19,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxyOwner/AssetProxyOwner.sol
consensys,0x_Protocol_v2,Use of this.balance in WETH9.sol,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Reconsider use of inline assembly,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Unclear comments,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy/ERC721Proxy: LibBytes imported but not used,Code With No Effects,Line Level,21,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxy/ERC20Proxy.sol
consensys,0x_Protocol_v2,LibBytes is imported but never used,Code With No Effects,Line Level,31,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/Exchange/MixinAssetProxyDispatcher.sol
consensys,0x_Protocol_v2,Optimization: refine function visibilities in the Exchange for gas efficiency,not_swc,,,
consensys,0x_Protocol_v2,LibConstants: dynamic constructor initialisation,not_swc,,,
consensys,0x_v3_Staking,Delegated stake weight reduction can be bypassed by using an external contract,Delegatecall to Untrusted Callee,Subcontract Level,1-349,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/staking_pools/MixinStakingPool.sol#L1-L349
consensys,0x_v3_Staking,MixinParams.setParams bypasses safety checks made by standard StakingProxy upgrade path.,not_swc,,,
consensys,0x_v3_Staking,Authorized addresses can indefinitely stall ZrxVaultBackstop catastrophic failure mode,not_swc,,,
consensys,0x_v3_Staking,LibMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Function Level,362-369,https://github.com/0xProject/0x-monorepo/blob/a22ba8647c1bdcb6f992c2b4338a4286d9712e4f/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs,not_swc,,,
consensys,0x_v3_Staking,Pool IDs can just be incrementing integers,not_swc,,,
consensys,0x_v3_Staking,LibProxy.proxyCall() may overwrite important memory,not_swc,,,
consensys,0x_v3_Staking,Use of tx.origin as a part of authorization control,Authorization through tx.origin,Line Level,"147,175",0x-monorepo/MixinCoordinatorApprovalVerifier.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,State variable shadows another state variable,Shadowing State Variables,Line Level,39,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/dev-utils/contracts/src/LibAssetData.sol#L39
consensys,0x_v3_Staking,A control flow decision is made based on a predictable,Block values as a proxy for time,Line Level,70,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/staking/contracts/src/sys/MixinScheduler.sol#L70
consensys,0x_v3_Staking,The binary addition can overflow,Integer Overflow and Underflow,Line Level,304， 339， 388， 418， 478，,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/utils/contracts/src/LibBytes.sol#L304
consensys,0x_v3_Staking,Anyone can withdraw ETH from the contract account.,Unprotected Ether Withdrawal,Line Level,66,0x-monorepo/Refundable.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,LibFixedMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Line Level,359-376,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs Mi,Code With No Effects,Line Level,"61,113",https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/interfaces/IStructs.sol
consensys,0x_v3_Staking,Anyone can remove a maker’s pending pool join status,not_swc,,,
consensys,0x_v3_Staking,Pool 0 can be used to temporarily prevent makers from joining another pool,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Fix weak assertions in MixinStakingPool stemming from use of NIL_POOL_ID,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Remove MixinAbstract and fold MixinStakingPoolRewards into MixinFinalizer and MixinStake,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove confusing access to activePoolsThisEpoch,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove MixinFinalizer._getUnfinalizedPoolRewardsFromState,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove complicating getters from MixinStakingPoolRewards,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove unneeded dependency on MixinStakeBalances,not_swc,,,
consensys,0x_v3_Staking,Misleading MoveStake event when moving stake from UNDELEGATED to UNDELEGATED,not_swc,,,
consensys,0x_v3_Staking,The staking contracts contain several artifacts of a quickly-changing codebase,not_swc,,,
consensys,0x_v3_Staking,Remove unnecessary fallback function in Staking contract,Code With No Effects,Function Level,36-39,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/Staking.sol
consensys,Bounties_Network,Use safe math for arithmetic operations,Integer Overflow and Underflow,Line Level,246,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L246
consensys,Bounties_Network,Approver/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,changeApprover/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,ERC721 can be stolen in many cases,not_swc,,,
consensys,Bounties_Network,Misprint in updateFulfillment,not_swc,,,
consensys,Bounties_Network,NFT with TokenID = 0 cannot be used,not_swc,,,
consensys,Bounties_Network,ETH contributions don't work with meta transactions,not_swc,,,
consensys,Bounties_Network,Add tests for meta transactions functionality,not_swc,,,
consensys,Bounties_Network,Make sure at least one issuer is set,not_swc,,,
consensys,Bounties_Network,Use correct sender when emitting events,not_swc,,,
consensys,Bounties_Network,Incompatible ERC721Basic transferFrom() function,not_swc,,,
consensys,Bounties_Network,Safeguard contribute() against invalid bounty.tokenversion,not_swc,,,
consensys,Bounties_Network,Change public methods to external,State Variable Default Visibility,Subcontract Level,1-722,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Use the same transfer function for consistency,not_swc,,,
consensys,Bounties_Network,Make contribute bail early if amount is zero,not_swc,,,
consensys,Bounties_Network,Require latest Solidity version,Floating Pragma,Line Level,1,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Explicitly declare State Variable Default Visibility,State Variable Default Visibility,Line Level,46，47,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L46-L47
consensys,Bounties_Network,Use token interfaces instead of token implementation,not_swc,,,
consensys,Bounties_Network,"Rework project folder structure to reflect the sourceUnits role, use and purpose",not_swc,,,
consensys,Bounties_Network,Outdated documentation/specification,not_swc,,,
consensys,Bounties_Network,Do not save token address if tokenVersion is 0,not_swc,,,
consensys,Bounties_Network,Anyone can act as a contributor before any tokens of the contribution were sent,State Variable Default Visibility,Function Level,243-262,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L243-L262
consensys,Brickblock,AndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check in ExchangeRateProviderStub,not_swc,,,
consensys,Brickblock,Unnecessary static call to get POA Manager's address in POA proxy,not_swc,,,
consensys,Brickblock,Unnecessary static call to fetch registry's address in POA Proxy,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an anti-separation?of-concerns pattern,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check-in ExchangeRateProviderStub,Code With No Effects,Line Level,53-54,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/ExchangeRateProvider.sol
consensys,Brickblock,buyAndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an antiseparation-of-concerns pattern,not_swc,,,
consensys,Brickblock,Unnecessary complexity in toXLengthString functions in PoaCommon,not_swc,,,
consensys,Brickblock,No plan for how a physical tokenized asset would handle a chain split,not_swc,,,
consensys,Brickblock,Usage of random storage slots in the Proxy adds too much complexity,not_swc,,,
consensys,Brickblock,Unnecessary usage of low-level .call() method,Reentrancy,Line Level,184,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCommon.sol#L184
consensys,Brickblock,Withdraw method does not check if balance is sufficient for the withdrawal,Unprotected Ether Withdrawal,Function Level,87-98,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/BrickblockAccount.sol#L87
consensys,Brickblock,Can lock and unlock 0 BBK in AccessToken,not_swc,,,
consensys,Brickblock,Precision in percent function can overflow,Integer Overflow and Underflow,Line Level,"292,297",https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCrowdsale.sol#L297
consensys,Brickblock,Transaction order dependence issue in ExchangeRates,not_swc,,,
consensys,Brickblock,Non-optimal ordering of instructions in PoaProxy and PoaToken fallback functions,not_swc,,,
consensys,Brickblock,ExchangeRateProvider's callback check for access control is non-optimal,not_swc,,,
consensys,Brickblock,Inaccurate specification comment for setFailed() method in PoaCrowdsale,not_swc,,,
consensys,Brickblock,Unnecessary fallback functions to refuse payments,Code With No Effects,Function Level,300-305,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/AccessToken.sol
consensys,Brickblock,Comment about upgrade path is incorrect,not_swc,,,
consensys,Brickblock,FeeManager open-by-default design might introduce flaws in the token economy,not_swc,,,
consensys,Brickblock,Unnecessary refund action in PoaCrowdsale,not_swc,,,
consensys,Brickblock,this should be explicitly typecast to address,not_swc,,,
consensys,Brickblock,Blocking conditions in buyFiat,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in PoaToken is dangerous,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in AccessToken is dangerous,Integer Overflow and Underflow,Subcontract Level,1-333,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/AccessToken.sol
consensys,Brickblock,Non-optimal stage checking condition in PoaToken,not_swc,,,
consensys,Brickblock,Contradicting comment on POAManager,not_swc,,,
consensys,Brickblock,Inconsistent type used for decimals,not_swc,,,
consensys,Brickblock,Inconsistent event naming,not_swc,,,
consensys,Brickblock,Incorrect name of parameter in BBKUnlockedEvent,not_swc,,,
consensys,DeFi_Saver,Unused code present in the codebase,Code With No Effects,Subcontract Level,1-39,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/utils/ZrxAllowlist.sol
consensys,DeFi_Saver,Return value is not used for TokenUtils.withdrawTokens,not_swc,,,
consensys,DeFi_Saver,Missing access control for DefiSaverLogger.Log,not_swc,,,
consensys,DeFi_Saver,Random task execution,Reentrancy,Function Level,105-136,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/flashloan/FLAaveV2.sol#L105
consensys,DeFi_Saver,Tokens with more than 18 decimal points will cause issues,Integer Overflow and Underflow,Function Level,100-108,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/wrappersV3/KyberWrapperV3.sol#L100
consensys,DeFi_Saver,"Error codes of Compound’s Comptroller.enterMarket, Comptroller.exitMarket are not checked",Unchecked Call Return Value,Function Level,26-37,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/compound/helpers/CompHelper.sol#L26
consensys,DeFi_Saver,Reversed order of parameters in allowance function call,not_swc,,,
consensys,DeFi_Saver,Full test suite is recommended,not_swc,,,
consensys,DeFi_Saver,Kyber getRates code is unclear,not_swc,,,
consensys,DeFi_Saver,Missing check in IOffchainWrapper.takeOrder implementation,Integer Overflow and Underflow,Function Level,42-50,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/offchainWrappersV3/ZeroxWrapper.sol#L42
consensys,ENS_Permanent_Registrar,Memory corruption in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,SimplePriceOracle.price is susceptible to integer overflow,Integer Overflow and Underflow,Function Level,26-28,https://github.com/ensdomains/ethregistrar/pull/17/files/199e43a53b17834fb66d8be055d4e6c7b9ba8bdd#diff-9c3a8554a75c167d610300421bcafac54b1e1d345f258c9c228cc6c5e637fb06
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register is vulnerable to front running,Transaction Order Dependence,Line Level,"46,48,58",https://github.com/ensdomains/ethregistrar/pull/18/files/3f71464ad3ac8d20bd0e9b6e36363e222f868651
consensys,ENS_Permanent_Registrar,SOA record check on the wrong domain Major,not_swc,,,
consensys,ENS_Permanent_Registrar,Consider replacing the Buffer implementation,not_swc,,,
consensys,ENS_Permanent_Registrar,Overzealous resizing in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,Pending auctions in the legacy registrar don’t result in proper ownership in ENS,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer should probably use the live modifier,not_swc,,,
consensys,ENS_Permanent_Registrar,Reconsider use of inline assembly in BytesUtils.sol,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer does not check for invalid names,not_swc,,,
consensys,ENS_Permanent_Registrar,Sanity check around transferPeriodEnds,not_swc,,,
consensys,ENS_Permanent_Registrar,StablePriceOracle.price has an unimportant integer underflow,Integer Overflow and Underflow,Line Level,59,https://github.com/ensdomains/ethregistrar/pull/20/files/69bbf720cd76633fa9e50f34d0822f1b773d4efa
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register should revert rather than silently fail,Unchecked Call Return Value,Function Level,72-75,https://github.com/ensdomains/ethregistrar/pull/22/files/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e
consensys,ENS_Permanent_Registrar,Assert Violation,Assert Violation,Line Level,79,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/BaseRegistrarImplementation.sol#L79
consensys,ENS_Permanent_Registrar,DoS with Failed Call,DoS with Failed Call,Function Level,42-45,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L42-L45
consensys,ENS_Permanent_Registrar,Block values as a proxy for time,Block values as a proxy for time,Line Level,86,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L86
consensys,ENS_Permanent_Registrar,Work towards a trustless model for ENS,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.commit overwrites previously-committed values,not_swc,,,
consensys,Fei_Protocol,Purchasing and committing still possible after launch,not_swc,,,
consensys,Fei_Protocol,BondingCurve allows users to acquire FEI before launch,not_swc,,,
consensys,Fei_Protocol,Timed.isTimeEnded returns true if the timer has not been initialized,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.emergencyExit remains functional after launch,not_swc,,,
consensys,Fei_Protocol,UniswapIncentive overflow on pre-transfer hooks,Integer Overflow and Underflow,Line Level,128-134  173-186,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/token/UniswapIncentive.sol
consensys,Fei_Protocol,Overflow/underflow protection,Integer Overflow and Underflow,Line Level,131,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/genesis/GenesisGroup.sol#L131
consensys,Fei_Protocol,Unchecked return value for IWETH.transfer call,Unchecked Call Return Value,Line Level,122,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pcv/EthUniswapPCVController.sol#L122
consensys,Fei_Protocol,Unchecked return value for transferFrom calls,Unchecked Call Return Value,Line Level,121,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pool/Pool.sol#L121
consensys,Fei_Protocol,Assertions that can fail,Assert Violation,Line Level,21,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/router/UniswapSingleEthRouter.sol#L21
consensys,Gamma,UniProxy.depositSwap - Tokens are not approved before calling Router.exactInput,not_swc,,,
consensys,Gamma,Uniproxy.depositSwap - _router should not be determined by the caller,not_swc,,,
consensys,Gamma,UniProxy.properDepositRatio - Proper ratio will not prevent liquidity imbalance for all possible scenarios,Code With No Effects,Function Level,258-275,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,UniProxy - SafeERC20 is declared but safe functions are not used,not_swc,,,
consensys,Gamma,Missing/wrong implementation,Code With No Effects,Line Level,Link1：108、113   Link2：415、433、439,"Link1: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
Link2: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol"
consensys,Gamma,UniProxy.depositSwap doesn’t deposit all the users’ funds,not_swc,,,
consensys,Gamma,Hypervisor - Multiple “sandwiching” front running vectors,not_swc,,,
consensys,Gamma,Full test suite is necessary,not_swc,,,
consensys,Gamma,Uniswap v3 callbacks access control should be hardened,not_swc,,,
consensys,Gamma,Code quality comments,not_swc,,,
consensys,Gamma,The Hypervisor.deposit function does not check the msg.sender,Unprotected Ether Withdrawal,Function Level,80-141,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,Gamma,Re-entrancy + flash loan attack can invalidate price check,Reentrancy,Line Level,75-82,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,The deposit function of the Hypervisor contract should only be called from UniProxy,Unprotected Ether Withdrawal,Function Level,66-125,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,Hypervisor.withdraw - Possible reentrancy,Reentrancy,Function Level,173-214,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,MCDEX_Mai_Protocol_V2,Perpetual - liquidateFrom should not have public visibility,Function Default Visibility,Function Level,248-253,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L248-L253
consensys,MCDEX_Mai_Protocol_V2,Refactor PerpetualProxy,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Clarify confusing use of signed integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Improve documentation and provide a complete specification,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Use individually typed setter methods instead of a combined set*Prameter method,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2, LibTypes.Status.SETTLING should be renamed to LibTypes.Status.EMERGENCY,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,"Implement clear, consistent naming conventions for all contracts",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Prefix variables that are expected to denominated in “wads” to make them distinguishable from integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Introduce a system setup phase and provide sane parameters on deployment,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Import 3rd party libraries from their original source and keep them unchanged instead of copying their content into a new library,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Consider removing unnecessary events,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unnecessary ABIEncoderV2 declarations,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Avoid redefining the same structs,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Methods should be declared external,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Gas Optimization static hashed values,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity pools can be initialized with zero collateral,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Administrators can put the system into emergency mode indefinitely,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Signed data may be usable cross-chain,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - validateOrderParam does not check against SUPPORTED_ORDER_VERSION,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMathSigned - wpowi returns an invalid result for a negative exponent,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Outdated solidity version and floating pragma,Outdated Compiler Version,Line Level,1,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L1
consensys,MCDEX_Mai_Protocol_V2,AMM - ONE_WAD_U is never used,Presence of unused variables,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L17
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Variable shadowing in constructor,Shadowing State Variables,Function Level,34-41,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L34-L41
consensys,MCDEX_Mai_Protocol_V2,Perpetual - The specified decimals for the collateral may not reflect the token’s actual decimals,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Unchecked return value in ShareToken.mint,Unchecked Call Return Value,Subcontract Level,499-502,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L499-L502
consensys,MCDEX_Mai_Protocol_V2,Perpetual - beginGlobalSettlement can be called multiple times,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unused Imports,Code With No Effects,Function Level,4、5,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L4-L5
consensys,MCDEX_Mai_Protocol_V2,Exchange - OrderStatus is never used,Presence of unused variables,Line Level,20,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/exchange/Exchange.sol#L20
consensys,MCDEX_Mai_Protocol_V2,LibMath - Inaccurate declaration of _UINT256_MAX,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - inconsistent assertion text and improve representation of literals with many digits,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - roundHalfUp returns unfinished result,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath/LibOrder - unused named return value,Presence of unused variables,Function Level,90-96,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/lib/LibMath.sol#L90-L96
consensys,MCDEX_Mai_Protocol_V2,"Where possible, a specific contract type should be used rather than address",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - CancelOrder has no effect,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - funding can be called in emergency mode,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdraw should only be available in NORMAL state,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdrawFromInsuranceFund should check wadAmount instead of rawAmount,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unpredictable behavior due to front running or general bad timing,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Governance is able to set an invalid alpha value,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Amount of collateral spent or shares received may be unpredictable for liquidity provider,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - insufficient input validation in matchOrders,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity provider may lose up to lotSize when removing liquidity,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Oracle - Unchecked oracle response timestamp and integer over/underflow,Integer Overflow and Underflow,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/oracle/ChainlinkAdapter.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - RNG failure can lock user funds,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - transferEther should be internal,Function Default Visibility,Function Level,63-67,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L63-L67
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Reconsider the use of proxy factories in the system if they are not needed,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,"Where possible, functions should accept a specific contract type rather than address parameters",not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Check codesize before adding listeners,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Stick to clear interface naming conventions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - unnecessary payable,Function Default Visibility,Function Level,90-93,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBoxController.sol#L90-L93
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Clean up unused source-units in the repository,Code With No Effects,Function Level,  8-19,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/counterfactual-action/CounterfactualAction.sol#L8-L19
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Rework the repository structure and clearly mark which 3rd party contracts have been modified,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - Unprotected selfdestruct in proxy implementation,Unprotected SELFDESTRUCT Instruction,Function Level,86-89,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L88-L89
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Ticket duplication,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - trustedForwarder can impersonate any msg.sender,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Unpredictable behavior for users due to admin front running or general bad timing,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - addExternalErc721Award duplicate or invalid tokenIds may block award phase,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Token with callback related warnings (ERC777 a.o.),Reentrancy,Function Level,252-263,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - unbounded external tokens linked list may be used to force a gas DoS,DoS With Block Gas Limit,Line Level,254,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol#L254
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - setNumberOfWinners does not enforce count>0,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - plunder should disallow plundering to address(0),not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Inconsistent behavior between award-phase modifiers and view functions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Awards can be guaranteed with a set number of tickets,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Inconsistent behavior compared to SingleRandomWinner,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Initialize implementations for proxy contracts and protect initialization methods,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - executeCalls can be misused to relay calls,not_swc,,,
consensys,Skale_Token,uint overflow may lead to stealing funds,Integer Overflow and Underflow,Function Level,74-76,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationRequestManager.sol#L74-L76
consensys,Skale_Token,Node can unlink validator,not_swc,,,
consensys,Skale_Token,getLockedCount is iterating over all history of delegations,DoS With Block Gas Limit,Line Level,,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol
consensys,Skale_Token,Tokens after delegation should not be unlocked automatically,Unprotected Ether Withdrawal,Function Level,258-264,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol#L258-L264
consensys,Skale_Token,Some unlocked tokens can become locked after delegation is rejected,not_swc,,,
consensys,Skale_Token,Fees can be > 100%,not_swc,,,
consensys,Skale_Token,getState changes state implicitly,not_swc,,,
consensys,Skale_Token,endingDelegations list is redundant,not_swc,,,
consensys,Skale_Token,tokenState.setState redundant checks,not_swc,,,
consensys,Skale_Token,DelegationService redundancy,not_swc,,,
consensys,Skale_Token,Add timelock for some onlyOwner functions,not_swc,,,
consensys,Skale_Token,Users can burn delegated tokens using re-entrancy attack,Reentrancy,Function Level,413-426,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/ERC777/LockableERC777.sol#L413-L426
consensys,Skale_Token,Slashes do not affect bounty distribution,not_swc,,,
consensys,Skale_Token,Iterations over slashes,not_swc,,,
consensys,Skale_Token,Storage operations optimization,not_swc,,,
consensys,Skale_Token,Duplicate function implementation,not_swc,,,
consensys,Skale_Token,Function overloading,not_swc,,,
consensys,Skale_Token,Gas limit for bounty and slashing distribution,DoS With Block Gas Limit,Function Level,310-316,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L310-L316
consensys,Skale_Token,Rename functions,not_swc,,,
consensys,Skale_Token,Delegations might stuck in non-active validator,not_swc,,,
consensys,Skale_Token,Disabled Validators still have delegated funds,not_swc,,,
consensys,Skale_Token,Some functions are defined but not implemented,Code With No Effects,Function Level,152-158,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L152-L158
consensys,Skale_Token,Validator should be able to remove delegator,not_swc,,,
consensys,Skale_Token,Lack of logs and events on state changes,not_swc,,,
consensys,Skale_Token,ERC-777 callback issue,Reentrancy,Line Level,55-68,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/SkaleBalances.sol
consensys,TCR,An unchallenged application cannot be cancelled,not_swc,,,
consensys,TCR,Re-inserting the last node in the list creates a cycle,not_swc,,,
consensys,TCR,getCommitHash is an unreliable proof that _prevPollID exists,not_swc,,,
consensys,TCR,Integer overflow in startPoll,Integer Overflow and Underflow,Function Level,217-218,https://github.com/ConsenSys/PLCRVoting/commit/26579ec7f645f868cdb4c7de4c764808882a5d3a#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL217-L218
consensys,TCR,pollExists is misleading and incomplete,Integer Overflow and Underflow,Function Level,297-304,https://github.com/ConsenSys/PLCRVoting/commit/a069730fcd818c249574a38f922e871c8011fc4f#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL297-L304
consensys,TCR,Parameterizer proposal deposits and challenge deposits can differ,not_swc,,,
consensys,TCR,Integer underflow in challengeReparameterization,Integer Overflow and Underflow,Line Level,164,https://github.com/skmgoldin/tcr/commit/a9f0d97ddfa6a4fafeed9c087086994efd1fe4dc#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL164
consensys,TCR,Integer underflow in withdrawVotingRights,Integer Overflow and Underflow,Line Level,90,https://github.com/ConsenSys/PLCRVoting/commit/c8df984d5d80593b72363cd6ee0f1f0652bc5959#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL90
consensys,TCR,Integer overflows in proposeReparameterization,Integer Overflow and Underflow,Line Level,137-159,https://github.com/skmgoldin/tcr/commit/81c3274b3c908e2034d243f41e3e89783c67dd1b#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL137
consensys,TCR,Integer overflow in Registry.apply,Integer Overflow and Underflow,Line Level,97,https://github.com/skmgoldin/tcr/commit/9d8b7af5fef7516dd6f84dfdce4f05109cae4a7e#diff-3579d55f1ea85bbe0e06236275421f84e98afd945520c4138c2c4cb1a7b3543fL97
consensys,TCR,Use EIP20Interface instead of EIP20,not_swc,,,
consensys,TCR,Challenges with zero votes will succeed,not_swc,,,
Cystack,AOC BEP-20 - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code   https://testnet.bscscan.com/address/0xBc79AE4eFE0259dCA865A0b75f6873d2EB0169A3#code
Cystack,AOC BEP-20 - v1.3,Improper state of visibility for the variable owner,State Variable Default Visibility,Line Level,119,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Missing error messages,Requirement Violation,Line Level,"133, 555, 567",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Incorrect implementation for the function withdrawBNBFromContract,Code With No Effects,Line Level,554-559,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,High gas cost due to improper initialization of variables,State Variable Default Visibility,Line Level,246-248,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Defect in coding design for the contract constructor,Incorrect Constructor Name,Line Level,"245,284,516",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Misnamed functions in contract codebases,Typographical Error,Line Level,"257, 558",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Possibility of BNB withdrawals to address(0),Unprotected Ether Withdrawal,Line Level,359-363,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Timestamps do not match with terms in Regressive Anti-Manipulating Strategy (RAMS),Incorrect Constructor Name,Line Level,113-126,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Large Transaction Authorisation Feature (LTAF) and RAMS do not work properly for balance with a small value,Typographical Error,Line Level,393-406,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Hacken,Fidometa-V2,Missing functionality,not_swc,,,
Hacken,Fidometa-V2,Excluding from receiving rewards logic is corrupted,not_swc,,,
Hacken,Fidometa-V2,Operation between different time units,not_swc,,,
Hacken,Fidometa-V2,Significant impact on market price,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,No checks to prevent percentage overflow,not_swc,,,
Hacken,Fidometa-V2,User balance may exceed the total supply,not_swc,,,
Hacken,Fidometa-V2,Integer Underflow,Integer Overflow and Underflow,Line Level,1003,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1003
Hacken,Fidometa-V2,Missing management of excluded accounts,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,Old wallets are not included back to changes and rewards,not_swc,,,
Hacken,Fidometa-V2,SafeMath is unneeded after 0.8.0,not_swc,,,
Hacken,Fidometa-V2,Initial minting event skipped,not_swc,,,
Hacken,Fidometa-V2,Burn wallet could be changed,not_swc,,,
Hacken,Fidometa-V2,Vested assets should be unlocked automatically,not_swc,,,
Hacken,Fidometa-V2,Possible Gas exceeding,DoS With Block Gas Limit,Line Level,771-778,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L771-L778
Hacken,Fidometa-V2,Unused library,not_swc,,,
Hacken,Fidometa-V2,Floating pragma,Floating Pragma,Line Level,1,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L1
Hacken,Fidometa-V2,Violation of IERC-20 standard,not_swc,,,
Hacken,Fidometa-V2,Unused functions,Code With No Effects,Function Level,788-797,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L788-L797
Hacken,Fidometa-V2,Similar functions,not_swc,,,
Hacken,Fidometa-V2,Template code,not_swc,,,
Hacken,Fidometa-V2,Functions that can be declared as external,not_swc,,,
Hacken,Fidometa-V2,Requires that would never revert transaction,Code With No Effects,Line Level,1041,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1041
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Local variable shadowing,Shadowing State Variables,Line Level,511,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L511
Hacken,Fidometa-V2,State variables that could be declared constant,not_swc,,,
Hacken,Fidometa-V2,Template variables,not_swc,,,
Hacken,Fidometa-V2,Overwhelmed code,not_swc,,,
Hacken,Fidometa-V2,Repeated code,Code With No Effects,Line Level,"1059-1061, 1070-1072, 1081-1082, 1092-1094","https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1059-L1061
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1070-L1072
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1081-L1082
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1092-L1094"
Hacken,Fidometa-V2,Unnecessary code,Code With No Effects,Line Level,974,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L974
Hacken,Fidometa-V2,Unnecessary checks,Code With No Effects,Function Level,552-584,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L552-L584
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Hardcoded values,not_swc,,,
Hacken,LunaFi,Vesting funds are not guaranteed,not_swc,,,
Hacken,LunaFi,Staking liquidity funds safety is not guaranteed by the contract logic,not_swc,,,
Hacken,LunaFi,Admin may burn users' funds,Unprotected Ether Withdrawal,Function Level,129-142,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L129-L142
Hacken,LunaFi,Admin may mint an unlimited amount of tokens,Unprotected Ether Withdrawal,Function Level,145-152,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L145-L152
Hacken,LunaFi,Redundant function argument,Code With No Effects,Line Level,265,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/VLFI.sol#L265
Hacken,LunaFi,Redundant use of SafeMath library,not_swc,,,
Hacken,LunaFi,Use of magic number,not_swc,,,
Hacken,LunaFi,Unexpected output,not_swc,,,
Hacken,LunaFi,Redundant functions,Code With No Effects,Function Level,"161-167, 169-171","https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L161-L167
https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L169-L171"
openzeppelin,Arcade_City_token,General code quality,not_swc,,,
openzeppelin,Arcade_City_token,Remove unneeded call.value(),Reentrancy,Line Level,231,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Price function is not linear,not_swc,,,
openzeppelin,Arcade_City_token,Usage of magic constants,not_swc,,,
openzeppelin,Arcade_City_token,Remove commented code,not_swc,,,
openzeppelin,Arcade_City_token,Tests should be independent,not_swc,,,
openzeppelin,Arcade_City_token,Avoid name reuse,Shadowing State Variables,Line Level,133、190,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/TokenVesting.sol
openzeppelin,Arcade_City_token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-374,https://github.com/swarmcity/ac-token/tree/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts
openzeppelin,Arcade_City_token,Remove unnecessary code,Code With No Effects,Line Level,167,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Remove duplicate code,Code With No Effects,Line Level,188-199、202-204、267-274,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Stray tokens can be locked in ArroToken contract.,not_swc,,,
openzeppelin,ArroToken,Lack of event emission OwnershipTransferred on contract construction,not_swc,,,
openzeppelin,ArroToken,Lack of event emission after modifying newOwner variable,not_swc,,,
openzeppelin,ArroToken,owner and newOwner storage variables can be modified without events emission,not_swc,,,
openzeppelin,ArroToken,Duplicate code in transfer and transferFrom functions,not_swc,,,
openzeppelin,ArroToken,Wrong usage of inheritance with Safemath contract,Incorrect Inheritance Order,Line Level,105,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,The TokenArro contract can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,The totalSupply function does not return the real total supply,not_swc,,,
openzeppelin,ArroToken,Unnecessary inheritance and imports,not_swc,,,
openzeppelin,ArroToken,initialize function missing the initializer modifier,not_swc,,,
openzeppelin,ArroToken,Unnecessary calls to initializers,not_swc,,,
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Not following good Smart Contract development practices,not_swc,,,
openzeppelin,ArroToken,No allowance front-running mitigation,Transaction Order Dependence,Function Level,165-169,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Outdated solidity version in use,Outdated Compiler Version,Line Level,5,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Missing docstrings,not_swc,,,
openzeppelin,ArroToken,Tokens can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,Not following a consistent coding style,not_swc,,,
openzeppelin,ArroToken,Multiple variables declared as uint,not_swc,,,
openzeppelin,ArroToken,No explicit visibility definition of variables,State Variable Default Visibility,Line Level,112,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L112
openzeppelin,ArroToken,Link reference to the ERC20 EIP is deprecated,not_swc,,,
openzeppelin,ArroToken,Unused variables defined in function definitions,Presence of unused variables,Line Level,149,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L149
openzeppelin,ArroToken,Inconsistent variable naming,not_swc,,,
openzeppelin,ArroToken,Non-standard initialization of ERC20,not_swc,,,
openzeppelin,Endaoment,SafeMath library is not used,Integer Overflow and Underflow,Line Level,127-128,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L127-L128
openzeppelin,Endaoment,Multiple getters for the same state variable,not_swc,,,
openzeppelin,Endaoment,Governance restrictions can be bypassed,not_swc,,,
openzeppelin,Endaoment,Fees are wrongly calculated,not_swc,,,
openzeppelin,Endaoment,Unsupported ERC20 tokens can be stuck in the contract,not_swc,,,
openzeppelin,Endaoment,Not following the Checks-Effects-Interactions pattern,Reentrancy,Function Level,119-134,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L119-L134
openzeppelin,Endaoment,Token transfers can silently fail,Unchecked Call Return Value,Line Level,"93, 95",https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Org.sol
openzeppelin,Endaoment,Lack of input validation,not_swc,,,
openzeppelin,Endaoment,Non flexible data objects,not_swc,,,
openzeppelin,Endaoment,Missing error messages,not_swc,,,
openzeppelin,Endaoment,README file is missing important information,not_swc,,,
openzeppelin,Endaoment,Missing docstrings,not_swc,,,
openzeppelin,Endaoment,Misleading docstrings,not_swc,,,
openzeppelin,Endaoment,Useless input parameters,not_swc,,,
openzeppelin,Endaoment,Lack of event emission,not_swc,,,
openzeppelin,Endaoment,Missing getter,not_swc,,,
openzeppelin,Endaoment,Incorrect require statement,Requirement Violation,Line Level,48,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Administratable.sol#L48
openzeppelin,Endaoment,uint as uint256,not_swc,,,
openzeppelin,Endaoment,Unused state variables,not_swc,,,
openzeppelin,Endaoment,Unused contracts,Code With No Effects,Subcontract Level,1-34,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/libraries/SafeMath.sol#L1-L34
openzeppelin,Endaoment,Style recommendations not applied,not_swc,,,
openzeppelin,Endaoment,Incorrect functions visibility,not_swc,,,
openzeppelin,Endaoment,Unnecessary import,Code With No Effects,Line Level,6,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/FundFactory.sol#L6
openzeppelin,Endaoment,Fund contract can’t receive ethers,not_swc,,,
openzeppelin,Endaoment,Typos in the code,not_swc,,,
openzeppelin,Endaoment,Unclear function purpose,not_swc,,,
openzeppelin,Endaoment,Default value as sensible information,not_swc,,,
openzeppelin,Fei_Protocol,Re-implementing ECDSA signature recovery,not_swc,,,
openzeppelin,Fei_Protocol,Not checking for 0 addresses,not_swc,,,
openzeppelin,Fei_Protocol,Commented out code,Code With No Effects,Line Level,"76,77",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/UniswapIncentive.sol#L76-L77
openzeppelin,Fei_Protocol,Functions return without parameters specified,not_swc,,,
openzeppelin,Fei_Protocol,GenesisGroup is a token unnecessarily,not_swc,,,
openzeppelin,Fei_Protocol,Improper use of require,Requirement Violation,Function Level,100-112,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L100-L112
openzeppelin,Fei_Protocol,Inconsistencies around time,Block values as a proxy for time,Line Level,24,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/dao/GovernorAlpha.sol#L24
openzeppelin,Fei_Protocol,Inconsistent coding style,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent error message format,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent methods for retrieving cumulative price from Uniswap oracle,not_swc,,,
openzeppelin,Fei_Protocol,Incorrect GovernorAlpha name constant,not_swc,,,
openzeppelin,Fei_Protocol,Interfaces omit some external functions,not_swc,,,
openzeppelin,Fei_Protocol,Uninitializable global variable in LinearTimelockToken,not_swc,,,
openzeppelin,Fei_Protocol,Constants not explicitly declared,State Variable Default Visibility,Line Level,22,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/orchestration/BondingCurveOrchestrator.sol#L22
openzeppelin,Fei_Protocol,Missing and incomplete event emissions,not_swc,,,
openzeppelin,Fei_Protocol,Naming issues hinder understanding and clarity of the codebase,not_swc,,,
openzeppelin,Fei_Protocol,NatSpec comments missing,not_swc,,,
openzeppelin,Fei_Protocol,Using now instead of block.timestamp,not_swc,,,
openzeppelin,Fei_Protocol,Proposals can be canceled in states that are unintuitive,not_swc,,,
openzeppelin,Fei_Protocol,Proposal struct storage is inefficient,not_swc,,,
openzeppelin,Fei_Protocol,Redundant event definition,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are not inherited,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are unnecessary or inconsistent with implementation,not_swc,,,
openzeppelin,Fei_Protocol,Test and production constants in the same codebase,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessarily small integer sizes,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary if statement,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary imports,Code With No Effects,Line Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L7
openzeppelin,Fei_Protocol,"Unreachable, incorrect error message",Code With No Effects,Line Level,186,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L186
openzeppelin,Fei_Protocol,Unnecessary inheritance,Code With No Effects,Line Level,12,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/Fei.sol#L12
openzeppelin,Fei_Protocol,Use of uint instead of uint256,not_swc,,,
openzeppelin,Fei_Protocol,Bypass burn penalty,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors during reweight,not_swc,,,
openzeppelin,Fei_Protocol,Attacker can manipulate ETH/FEI spot price on allocations,not_swc,,,
openzeppelin,Fei_Protocol,Anyone can steal all the TRIBE tokens from the reward pool,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,ETH can get stuck in the GenesisGroup contract,Unexpected Ether Balance,Function Level,80-87,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L80-L87
openzeppelin,Fei_Protocol,Anyone can partially bypass the FEI sell penalty to earn a profit,not_swc,,,
openzeppelin,Fei_Protocol,Users can claim unreleased rewards or have their funds locked,not_swc,,,
openzeppelin,Fei_Protocol,Anyone with enough liquidity to reach the maxGenesisPrice can make profit from genesis,not_swc,,,
openzeppelin,Fei_Protocol,Users participating in Genesis can get fewer FEI and TRIBE than expected,not_swc,,,
openzeppelin,Fei_Protocol,Outdated oracle prices being used throughout the protocol,not_swc,,,
openzeppelin,Fei_Protocol,Incentive to support the peg decays with volatility,not_swc,,,
openzeppelin,Fei_Protocol,Malicious actors can lock all FEI and TRIBE in the GenesisGroup,Unprotected SELFDESTRUCT Instruction,Function Level,89-103,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L89-L103
openzeppelin,Fei_Protocol,Inverse price fetched from Uniswap,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors in Roots library reduce FEI received from bonding curve,Integer Overflow and Underflow,Function Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/Roots.sol#L7-L18
openzeppelin,Fei_Protocol,Incorrect proposal and quorum thresholds for voting,not_swc,,,
openzeppelin,Fei_Protocol,ETH and FEI can get locked in EthUniswapPCVDeposit,not_swc,,,
openzeppelin,Fei_Protocol,Incentive does not initialize when Ether depreciates,not_swc,,,
openzeppelin,Fei_Protocol,Approved addresses can forfeit user rewards,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,Authorized burners can burn FEI balances without an amount restriction,not_swc,,,
openzeppelin,Fei_Protocol,Core contract cannot allocate all Tribe tokens,Requirement Violation,Line Level,41,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L41
openzeppelin,Fei_Protocol,Multiple outdated Solidity versions in use,Outdated Compiler Version,Contract Level,all,
openzeppelin,Fei_Protocol,Not using SafeMath and SafeCast,Integer Overflow and Underflow,Line Level,"61/172, 173/34/144, 145","https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/LinearTokenTimelock.sol#L61, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L172-L173, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pcv/PCVSplitter.sol#L34, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L144-L145"
openzeppelin,Fei_Protocol,queueTransaction does not check transaction value,not_swc,,,
openzeppelin,Fei_Protocol,Transfers are not checked for success,Unchecked Call Return Value,Line Level,"120, 134",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol
openzeppelin,Fei_Protocol,UniswapOracle does not allow overflow,not_swc,,,
openzeppelin,iExec_RLC_Token,Use of send,not_swc,,,
openzeppelin,iExec_RLC_Token,Usage of magic constants,not_swc,,,
openzeppelin,iExec_RLC_Token,Bug Bounty,not_swc,,,
openzeppelin,iExec_RLC_Token,Fail early and loudly,not_swc,,,
openzeppelin,iExec_RLC_Token,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Timestamp usage,Block values as a proxy for time,Line Level,Link1：69、116、145、295；Link2：37、49,"Link1：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol 
Link2：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol"
openzeppelin,iExec_RLC_Token,Unused isMaxCapReached,Code With No Effects,Function Level,209-211,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Avoid duplicated code,Code With No Effects,Function Level,"62-67, 69-76, 79-81, 83-87, 97-99",https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol#L62
openzeppelin,iExec_RLC_Token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol
openzeppelin,Opyn_Contracts,Not using SafeMath,Integer Overflow and Underflow,Line Level,"509, 582",https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L509
openzeppelin,Opyn_Contracts,Malicious users could steal from the OptionsContract contract,not_swc,,,
openzeppelin,Opyn_Contracts,Liquidation process could push the protocol into insolvency,not_swc,,,
openzeppelin,Opyn_Contracts,Malicious Admin can steal from the protocol,not_swc,,,
openzeppelin,Opyn_Contracts,Potential race condition with Repo ownership transfer,Transaction Order Dependence,Function Level,429-433,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L429-L433
openzeppelin,Opyn_Contracts,Lack of event emissions after sensitive changes,not_swc,,,
openzeppelin,Opyn_Contracts,Not following check-effect-interaction pattern,Reentrancy,Line Level,304-305,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L304-L305
openzeppelin,Opyn_Contracts,Different behavior between ETH and Tokens collateral,not_swc,,,
openzeppelin,Opyn_Contracts,Cannot update exponent after deployment,not_swc,,,
openzeppelin,Opyn_Contracts,Miscalculated maxCollateralLiquidatable in liquidate function,not_swc,,,
openzeppelin,Opyn_Contracts,Confusing time frame for actions,not_swc,,,
openzeppelin,Opyn_Contracts,Repo owner could lose collateral if leftover oTokens are not burnt before the option expires,not_swc,,,
openzeppelin,Opyn_Contracts,Factorize Repo ownership into modifier,not_swc,,,
openzeppelin,Opyn_Contracts,Unbalanced ETH operations,not_swc,,,
openzeppelin,Opyn_Contracts,Unbounded loops,DoS With Block Gas Limit,Function Level,321-325,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L321-L325
openzeppelin,PoolTogether,Supply is manipulable,not_swc,,,
openzeppelin,PoolTogether,Deposit uses operator collateral,not_swc,,,
openzeppelin,PoolTogether,Incomplete ERC777 functionality,not_swc,,,
openzeppelin,PoolTogether,Missing return value,Unchecked Call Return Value,Function Level,160-167,https://github.com/pooltogether/pooltogether-pod-contracts/blob/8041b3dc72efd02b94d49fb37b9b308603af5ce/contracts/ScheduledBalance.sol#L160-L167
openzeppelin,PoolTogether,Misleading comments,not_swc,,,
openzeppelin,PoolTogether,Complicated Code,not_swc,,,
openzeppelin,PoolTogether,[H01] Users can influence the lottery winner,Transaction Order Dependence,Line Level,321,https://github.com/pooltogether/pooltogether-contracts/tree/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#L321
openzeppelin,PoolTogether,Users can influence the lottery winner,Transaction Order Dependence,Function Level,306-309、321-372,https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol
openzeppelin,PoolTogether,Winners can stall the system,not_swc,,,
openzeppelin,PoolTogether,Double counting rewards,not_swc,,,
openzeppelin,PoolTogether,Bypassing token events,not_swc,,,
openzeppelin,PoolTogether,Deviation from ERC777 specification,not_swc,,,
openzeppelin,PoolTogether,Only direct deposits are pausable,not_swc,,,
openzeppelin,PoolTogether,Double spending ERC20 allowance,not_swc,,,
openzeppelin,PoolTogether,Unexpected Side Effects,not_swc,,,
openzeppelin,PoolTogether,Conflated balances,not_swc,,,
openzeppelin,PoolTogether,Misleading comments and variable names,not_swc,,,
openzeppelin,PoolTogether,Excessive code coupling,not_swc,,,
openzeppelin,PoolTogether,Unchecked casting from uint256 to int256,Integer Overflow and Underflow,Line Level,"411, 412",https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#411-412
openzeppelin,PoolTogether,Unrestricted token ownership,not_swc,,,
openzeppelin,PoolTogether,Inconsistent imports,not_swc,,,
openzeppelin,PoolTogether,Default Visibility,State Variable Default Visibility,Line Level,"197-212, 24-25","https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol, https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/RecipientWhitelistERC777Pool.sol"
openzeppelin,PoolTogether,Reimplementing Pausable,not_swc,,,
openzeppelin,PoolTogether,Repeated code,not_swc,,,
openzeppelin,PoolTogether,Random upper bound of zero,not_swc,,,
openzeppelin,PoolTogether,Semantic Overloading,not_swc,,,
openzeppelin,PoolTogether,Unnecessary casting of drawIndex,not_swc,,,
openzeppelin,PoolTogether,Unnecessary SafeMath sum operation,not_swc,,,
openzeppelin,PoolTogether,Instances of uint,not_swc,,,
openzeppelin,PoolTogether,Naming,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary setting of the active_recovery_end_time variable,Presence of unused variables,Line Level,"67, 146",https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#67
openzeppelin,Recoverable_Wallet,Contract does not conform to the ERC1820 specification,not_swc,,,
openzeppelin,Recoverable_Wallet,Race condition may result from compromised recovery address,Transaction Order Dependence,Function Level,86-116,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#86-116
openzeppelin,Recoverable_Wallet,Ownership transfer cancellation can be front-run,Transaction Order Dependence,Function Level,38-55,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#38-55
openzeppelin,Recoverable_Wallet,Recovery cancellation can be front-run,Transaction Order Dependence,Function Level,97-125,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#97-125
openzeppelin,Recoverable_Wallet,uint256/uint16 type mismatch,not_swc,,,
openzeppelin,Recoverable_Wallet,Mixed usage of the recovery and ownership transfer systems,not_swc,,,
openzeppelin,Recoverable_Wallet,Obscure error message provided upon contract creation failure,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary call to reset_recovery() in constructor,Code With No Effects,Line Level,80,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#80
openzeppelin,Recoverable_Wallet,Duplicate code in the finish_recovery() function,Code With No Effects,Line Level,119,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#119
openzeppelin,Recoverable_Wallet,False comment in the start_recovery() function,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be started while another is underway,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be cancelled before one is underway,Transaction Order Dependence,Function Level,44-48,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#44-48
openzeppelin,Recoverable_Wallet,Overloaded functionality of the start_recovery() function,not_swc,,,
openzeppelin,UMA,Bond penalty may not apply,not_swc,,,
openzeppelin,UMA,Lack of event emission after sensitive actions,not_swc,,,
openzeppelin,UMA,Functions with unexpected side-effects,not_swc,,,
openzeppelin,UMA,Long and complex functions,not_swc,,,
openzeppelin,UMA,Complex Repay Function,not_swc,,,
openzeppelin,UMA,Current config not updated,not_swc,,,
openzeppelin,UMA,Emergency shutdown defined at the wrong level,Incorrect Inheritance Order,Function Level,508-516,https://github.com/UMAprotocol/protocol/blob/c452750a073488aa9b7caa86bb6206396412dcf9/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L508-L516
openzeppelin,UMA,Event missing emit keyword,not_swc,,,
openzeppelin,UMA,Inconsistent hasPrice determination,not_swc,,,
openzeppelin,UMA,Incorrect error message,not_swc,,,
openzeppelin,UMA,Misleading comments,not_swc,,,
openzeppelin,UMA,Missing NatSpec comments,not_swc,,,
openzeppelin,UMA,Functions not failing early,not_swc,,,
openzeppelin,UMA,Propose or Dispute a price from the zero address,not_swc,,,
openzeppelin,UMA,Mixed testing and production code,not_swc,,,
openzeppelin,UMA,Approximate compounding,not_swc,,,
openzeppelin,UMA,Consider ERC777 tokens,not_swc,,,
openzeppelin,UMA,Incorrect filename,not_swc,,,
openzeppelin,UMA,Naming issues hinder code understanding and readability,not_swc,,,
openzeppelin,UMA,Not using the immutable keyword,Outdated Compiler Version,Line Level,95,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualLiquidatable.sol#L95
openzeppelin,UMA,Redundant code and unnecessary complex calculations,Code With No Effects,Line Level,494,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/oracle/implementation/OptimisticOracle.sol#L494
openzeppelin,UMA,TODOs in code,not_swc,,,
openzeppelin,UMA,Typographical errors,not_swc,,,
openzeppelin,UMA,Unnecessary imports,Code With No Effects,Line Level,16,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L16
openzeppelin,UMA,Unnecessary type cast,Code With No Effects,Line Level,102,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualCreator.sol#L102
openzeppelin,WeTrust_ROSCA_contract_code,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Be careful with integer division,Code With No Effects,Line Level,288、316、341、381、389,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Use of send,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Usage of magic constants,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Bug Bounty,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,totalFees will always be 0 on LogFundsWithdrawal,Code With No Effects,Line Level,495、502,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Naming suggestions,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Timestamp usage,Block values as a proxy for time,Line Level,198、230、258、470,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Avoid duplicated code,Code With No Effects,Function Level,"441-451, 406-418",https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol#L441
openzeppelin,WeTrust_ROSCA_contract_code,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
Quantstamp,Merit Circle,Write to Arbitrary Storage Location,not_swc,,,
Quantstamp,Merit Circle,Use of Insecure Casting Operations,Integer Overflow and Underflow,Function Level,50-53，55-58,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,62， 116， 129， 122,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,25,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/TokenSaver.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,"81, 42",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Flash Loan Vulnerability,not_swc,,,
Quantstamp,Merit Circle,Maximum Approve,not_swc,,,
Quantstamp,Merit Circle,Unlocked Pragma,Floating Pragma,Contract Level,all,
Quantstamp,Merit Circle,Privileged Roles and Ownership,not_swc,,,
Quantstamp,Merit Circle,Missing Input Validation,not_swc,,,
Quantstamp,Merit Circle,Events Not Emitted on State Change,not_swc,,,
Quantstamp,Merit Circle,View.fetchData() Always Calling getMultiplier(0),not_swc,,,
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,45-82,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/View.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,"110-142, 144-146",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,90-94,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/TimeLockPool.sol
Quantstamp,Merit Circle,Ignored Failed Transaction,not_swc,,,
Quantstamp,MetaVault V2,Curve 3pool Imbalance Attack,not_swc,,,
Quantstamp,MetaVault V2,Integer Overflow/ Underflow,Integer Overflow and Underflow,Function Level,486-506,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L486-L506
Quantstamp,MetaVault V2,Strategy caps are not always enforced,not_swc,,,
Quantstamp,MetaVault V2,slippage possible,not_swc,,,
Quantstamp,MetaVault V2,Epochs can overlap affecting getMultiplier,not_swc,,,
Quantstamp,MetaVault V2,Wrong address could be used instead of stable-coin,not_swc,,,
Quantstamp,MetaVault V2,Adding and removing strategies is error prone,not_swc,,,
Quantstamp,MetaVault V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Line Level,23,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L23
Quantstamp,MetaVault V2,Missing input validation,not_swc,,,
Quantstamp,MetaVault V2,Sensitive functions do not emit any events,not_swc,,,
Quantstamp,MetaVault V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,213,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVaultHarvester.sol#L213
Quantstamp,MetaVault V2,Implicit assumptions,not_swc,,,
Quantstamp,MetaVault V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,MetaVault V2,Unchecked Return Value,Unchecked Call Return Value,Function Level,245-267,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVault.sol#L245-L267
Quantstamp,MetaVault V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/interfaces/Aave.sol#L2
Quantstamp,MetaVault V2,Defense in depth to avoid reentrancy,not_swc,,,
Quantstamp,RariCapital V2,Inaccurate token prices,not_swc,,,
Quantstamp,RariCapital V2,Incorrect Rari Governance Token amount,not_swc,,,
Quantstamp,RariCapital V2,Uninitialized _ethUsdPriceFeed,Uninitialized Storage Pointer,Line Level,30,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundPriceConsumer.sol#L30
Quantstamp,RariCapital V2,Divergent mirrored states,not_swc,,,
Quantstamp,RariCapital V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Function Level,145-170,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L145-L170
Quantstamp,RariCapital V2,Unchecked Return Value,not_swc,,,
Quantstamp,RariCapital V2,Unfinished token upgrades,not_swc,,,
Quantstamp,RariCapital V2,Incorrect value for supported currencies,not_swc,,,
Quantstamp,RariCapital V2,Amount in pools may be incorrect,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation,not_swc,,,
Quantstamp,RariCapital V2,Misaligned comments and implementation,not_swc,,,
Quantstamp,RariCapital V2,ETH/USD prices could be stale,not_swc,,,
Quantstamp,RariCapital V2,Off-by-one error,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation (2),not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address,not_swc,,,
Quantstamp,RariCapital V2,Dangerous cast from uint256 to int256,not_swc,,,
Quantstamp,RariCapital V2,Alance Double-Spend Exploit,not_swc,,,
Quantstamp,RariCapital V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/lib/pools/CompoundPoolController.sol#L2
Quantstamp,RariCapital V2,Experimental features should not be used on Mainnet deployments,not_swc,,,
Quantstamp,RariCapital V2,Checks-Effects-Interactions Pattern,Reentrancy,Function Level,750-767,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundManager.sol#L750-L767
Quantstamp,RariCapital V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,603,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L603
Quantstamp,RariCapital V2,Duration of RGT distribution may be different from 60 days,not_swc,,,
Quantstamp,RariCapital V2,Increased loss of precision due to dividing before multiplication,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership (2),not_swc,,,
Quantstamp,RariCapital V2,Unexpected pool,not_swc,,,
Quantstamp,RariCapital V2,Single point of failure for price feeds,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address (2),not_swc,,,
Quantstamp,RariCapital V2,Potential funds stuck in contract,not_swc,,,
Quantstamp,RariCapital V2,Rounding error,not_swc,,,
Quantstamp,RariCapital V2,Rari Governance Tokens can still be claimed after distribution ends,not_swc,,,
Quantstamp,RariCapital V2,Upgrading Fund Controller can be done when fund is enabled,not_swc,,,
Quantstamp,RariCapital V2,Expired cache,not_swc,,,
Quantstamp,RariCapital V2,Faulty dev environment might not print some enum and struct layout errors,not_swc,,,
Quantstamp,RariCapital V2,Missing input validation,not_swc,,,
Quantstamp,RariCapital V2,Hardcoded dependency contracts,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Setter function missing event,not_swc,,,
Quantstamp,RariCapital V2,Unclear addPool omission in initialize,not_swc,,,
Quantstamp,RariCapital V2,No example of token distribution implementation is presented,not_swc,,,
Quantstamp,RariCapital V2,Controller unable to pause specific stablecoins,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,105,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L105
QuillAudits,Binamon Energy Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,187,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L187
QuillAudits,Binamon Energy Smart Contract,Approve Race,Transaction Order Dependence,Function Level,105-109,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code
QuillAudits,Binamon Energy Smart Contract,Missing Address Validation,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Lack of MultiSig Transactions,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,193,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L193
QuillAudits,Binamon Energy Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB021C#code
QuillAudits,Binamon Z1 Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,104,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L104
QuillAudits,Binamon Z1 Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,168,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L168
QuillAudits,Binamon Z1 Smart Contract,Approve Race,Transaction Order Dependence,Function Level,104-108,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Missing Address Validation,not_swc,,,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,174,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L174
QuillAudits,Binamon Z1 Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Bond Appetit-Bond Appetit,Potential safeApprove blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrongly calculated ETH amount to transfer,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential re-entrancy problem,Reentrancy,Line Level,227,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/profit/ProfitSplitter.sol#L227
QuillAudits,Bond Appetit-Bond Appetit,Blocked LP tokens on contract,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed depositary check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Invalid depositary add/remove logic,Code With No Effects,Line Level,49-70,https://github.com/bondappetit/bondappetit-protocol/blob/88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/depositary/AgregateDepositaryBalanceView.sol#L49-L70
QuillAudits,Bond Appetit-Bond Appetit,Wrongly used safeApprove,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Budget payment blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential integer overflow,Integer Overflow and Underflow,Line Level,147,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol#L147
QuillAudits,Bond Appetit-Bond Appetit,Potential div by zero error,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Vesting account duplication,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unchecked vesting contract address,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrong reward calculation of balance < 100,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed zero share check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential custodial asset collateral incorrect signatures,Lack of Proper Signature Verification,Line Level,88,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/depositary/RealAssetDepositaryBalanceView.sol#L88
QuillAudits,Bond Appetit-Bond Appetit,Mixed msg.sender and _msgSender(),not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Too flexible configuration,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potentially wrong-sized access control list,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Probably missed input check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unneeded calculations,Code With No Effects,Line Level,187,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Market.sol#L187
QuillAudits,Bond Appetit-Bond Appetit,Total shares cache,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential collateralization imbalance,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Runtime-configured contract ownership,not_swc,,,
QuillAudits,DOXY - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Unoptimized variable declarations,State Variable Default Visibility,Line Level,282-284,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Struct and address declarations without usage,Code With No Effects,Line Level,"284, 312-315",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc10F#code
QuillAudits,DOXY - v1.3,Unnecessary gas consumption due to improper variable declaration,Code With No Effects,Line Level,809-818,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc11F#code
QuillAudits,DOXY - v1.3,Variable declarations without concrete visibility,State Variable Default Visibility,Line Level,270,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc12F#code
QuillAudits,DOXY - v1.3,Loose timeLimit validation for sell transactions on pancakeSwap,Lack of Proper Signature Verification,Line Level,"497-502, 511-516",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc13F#code
QuillAudits,DOXY - v1.3,Ineffiecient function declaration,Function Default Visibility,Line Level,"373-381, 393-411, 413-430, 432-443, 445-460, 679-695, 754-756, 758-764, 824-826, 828-830, 832-834, 836-838, 881-883, 972-974, 976-978, 980-982, 984-986, 988-990, 998-1000, 1002-1004, 1010-1012, 1014-1016, 1077-1079",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc14F#code
QuillAudits,DOXY - v1.3,Mistyped argument names in functions,Typographical Error,Line Level,"918, 928, 938, 948, 958, 968",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc15F#code
QuillAudits,DOXY - v1.3,Too many digits,Typographical Error,Line Level,"339, 488, 500, 514, 658, 661, 780, 781, 782, 783, 784, 785, 821, 261, 262",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc16F#code
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect calculation of borrowed amount,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible remove of necessary adapter,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect change of state,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,creditManager isn't checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Uncounted fees in USDT,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible loss of assets by mistake,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Broken account must be deleted,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of bad account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary allowance,Code With No Effects,Line Level,130,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L130
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect usage of function returned value,Unchecked Call Return Value,Function Level,121-157,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L121-L157
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect taking out of tail account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect minting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidity removing,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Calculation can be incorrect,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidation of broken account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Using tokens with whitelist function,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Looping a linked list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,No checking of element properties when returning it to the list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,priceFeeds can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Work with incorrect decimals,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary inheritance from Proxy,Code With No Effects,Line Level,17,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/integrations/yearn/YearnPriceFeed.sol#L17
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect input parameters,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Too many rights for configurator,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Length of input arrays not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,path length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,wethGateway can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account can be opened for zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Malicious user can pay less to pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer to zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Usage of ERC777 token can block liquidation,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect require,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible incorrect setting value for maxLeverageFactor,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,User can approve any token,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect length of input data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,amount must be > 1,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,paths[i] length not checked,Write to Arbitrary Storage Location,Line Level,828,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L828
QuillAudits,GearBox Protocol-GearBox Protocol,Index not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible reentrancy,Reentrancy,Function Level,56；55、112；49、102、152、196；75、126；107、128、159、181；242,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L56；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L55；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L112；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L49；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L152；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L196；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L75；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L126；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L107；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L128；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L159；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L181；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L242
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect parameter passed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Function doesn't exist,Code With No Effects,Line Level,100、116,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L100；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L116
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect function name,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,params.path length not checked,Write to Arbitrary Storage Location,Line Level,102、200,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L200
QuillAudits,GearBox Protocol-GearBox Protocol,Balance not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible assets loss,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,masterCreditAccount remains uninitialized,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account remains connected to previous credit manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary list initialization,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,head can't be taken out,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect update of list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible duplication of data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleProof length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unable to remove pool or manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,signatory not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,delegatee not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,expectedLiquidityLimit can be equal to zero,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow can occur,Integer Overflow and Underflow,Line Level,145,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L145
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,_timestampLU can be equal to 0,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Forbidden manager never can use pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Address not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow,Integer Overflow and Underflow,Line Level,593-594,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L593-L594
QuillAudits,GearBox Protocol-GearBox Protocol,User can't repay with force flag,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Add condition,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Upgradeable creditManager params,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary check,Code With No Effects,Line Level,156,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L156
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary update,Code With No Effects,Line Level,192,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L192
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary initialization,Code With No Effects,Line Level,297；72；107,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L297；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/DataCompressor.sol#L72；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearToken.sol#L107
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary print to console,Code With No Effects,Line Level,343,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L343
QuillAudits,GearBox Protocol-GearBox Protocol,User can receive only ETH,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Tokens can be locked on account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Print to console,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary library for user types,Code With No Effects,Line Level,1-113,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/libraries/data/Types.sol
QuillAudits,GearBox Protocol-GearBox Protocol,wethAddress can be const,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary safeMath,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect comment,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Similar functions are used,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleRoot can't be updated,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,All functions can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Visibility not set,State Variable Default Visibility,Line Level,16、20,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L16；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L20
QuillAudits,GearBox Protocol-GearBox Protocol,Event not emitting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Range for variables not set,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Two variables can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary setting on each mint,Code With No Effects,Line Level,14,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearNFT.sol#L14
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary usage of variable,Code With No Effects,Line Level,191,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L191
QuillAudits,GearBox Protocol-GearBox Protocol,Parameters not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,The technical default of liquidity pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Undesired side effects of address reusing,not_swc,,,
QuillAudits,Glonk Smart Contract,Contract gains to non-withdrawable BNB via the swapAndLiquify function,not_swc,,,
QuillAudits,Glonk Smart Contract,Centralized risk in addLiquidity,not_swc,,,
QuillAudits,Glonk Smart Contract,Description: Costly Loop,not_swc,,,
QuillAudits,Glonk Smart Contract,Outdated Compiler Version,Outdated Compiler Version,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,"Potential use of ""block.timestamp"" as source of randomness",Weak Sources of Randomness from Chain Attributes,Line Level,800-815,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,Glonk Smart Contract,Prefer external to public visibility level,not_swc,,,
QuillAudits,Glonk Smart Contract,Using the approve function of the ERC-20 token standard,Transaction Order Dependence,Function Level,509-512,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,LTO Network-Token Sale,"Generation of two events in the form emit Transfer(address(0), receiver address, amount);should be added",not_swc,,,
QuillAudits,LTO Network-Token Sale,The recipient address specified in the Transfer event does not match factual address of the recipient,not_swc,,,
QuillAudits,LTO Network-Token Sale,In case _intermediate is being used at the moment by some user addIntermediateAddress call will cause all token transfers to this user to fail to reach them.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"totalSupply_value won’t be properly updated in case of transferFrom function usage, which is inherited from the StandardToken.",not_swc,,,
QuillAudits,LTO Network-Token Sale,There are mechanics which allows users to transfer tokens from some predefined addresses (enumerated in intermediateAddresses) to the bridge balance.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"Users sending ether from contracts which default function performs nontrivial computations (e.g. writing value to a new storage variable) won’t be able to receive their tokens, while the project won’t be able to receive transferred ether. This is caused by limited gas stipend of the transfer function.",Insufficient Gas Griefing,Line Level,215,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L215
QuillAudits,LTO Network-Token Sale,It’s recommended using withdrawal pattern to send change and to untie sending of change from other actions.,not_swc,,,
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,223,https://github.com/ltonetwork/lto-erc20-token/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L223
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,227,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L227
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,233,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L233
QuillAudits,LTO Network-Token Sale,"An attacker can send some value of ether in the first transaction, receive maximum bonus and then send 99 transactions of minimal value minimumAmount, depriving other token sale participants of their bonuses.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Individual cap mechanics are subject to Sybil attack. An user can distribute his N ethers to uint(N / maximumCapAmount) + 1 distinct addresses, and perform purchase from each of these addresses, effectively bypassing maximumCapAmount limit.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"The burning of unsold tokens was mentioned by the client. However, in the contracts code there is no sign of such mechanics and LTOToken is not burnable.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Generation of an event in the form emit Transfer(address(0), _bridgeAddress, _bridgeSupply);should be added. Otherwise, some client software won’t recognize the arrival of the tokens to the _bridgeAddress.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using SafeMath.sub here because this code fragment has a high probability of underflow error.,Integer Overflow and Underflow,Line Level,60,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOToken.sol#L60
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"This branch is unachievable in practise (it requires ~5e14 ether to achieve), we recommend replacing it with assert(false);.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Expression totalWannaBuyAmount == 0 here is unachievable, we recommend removing it from if-operator and introduce assert(totalWannaBuyAmount > 0); instead.",Code With No Effects,Line Level,144,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L144
QuillAudits,LTO Network-Token Sale,"In startSale function it would be helpful to ensure that token balance of the contract is equal to totalSaleAmount. Otherwise, if the token balance is less than totalSaleAmount some ether will be locked in the contract forever.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Right after deployment of the contract isEnded function will return true. This won’t cause any troubles in this version of the code, but it’s better to return false in case the sale was never started ",not_swc,,,
QuillAudits,LTO Network-Token Sale,"It’s better to use the ethDecimals constant, instead of the 1 ether value to prevent possible inconsistencies.",not_swc,,,
QuillAudits,LTO Network-Token Sale,Condition <= is excessive and can be replaced with a strict comparison (<),not_swc,,,
QuillAudits,LTO Network-Token Sale,two processes can be separated and gas spendings by the project can be minimized,not_swc,,,
QuillAudits,LTO Network-Token Sale,"We recommend creating the explicit view function isSaleInitialized and use it here to prevent double initialization, as well as throughout isStarted, isEnded and other state querying functions.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend checking the result of token transfer call.,Unchecked Call Return Value,Line Level,235,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L235
QuillAudits,LTO Network-Token Sale,Tokens which were accidentally sent to the bridge address could not be recovered. We recommend adding require(to != bridgeAddress); check.,not_swc,,,
QuillAudits,LTO Network-Token Sale,If value is expected to be greater than bridgeBalance in some cases we recommend adding check require(value <= bridgeBalance);. ,not_swc,,,
QuillAudits,LTO Network-Token Sale,The sum of balances is not equal to totalSupply. This behavior could be unexpected for some tools or clients.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of address parameter value in contract constructor,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of the address parameter value in function before using this parameter in access modifiers.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Ability to change the value of a private variable from another contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function calculation result is not processed,Unchecked Call Return Value,Line Level,64,https://github.com/iearn-finance/yearn-vaults/blob/v0.1.3/contracts/BaseStrategy.sol#L164
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Safe math is not used,Integer Overflow and Underflow,Line Level,338,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L338
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function description differs from implementation.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Duplicate code,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Variable declared but not used,Presence of unused variables,Line Level,273,https://github.com/iearn-finance/yearn-vaults/blob/54db126821c4d7aaaf5839be935cecb9b1bf088b/contracts/BaseStrategy.sol#L273
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No event registration when changing the parameters of the contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Exact block timestamps usage.,Block values as a proxy for time,Line Level,320,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L320
QuillAudits,Yearn Finance-Yearn Protocol V1,Unsafe implementation of arithmetic operations,Integer Overflow and Underflow,Line Level,787,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L787
QuillAudits,Yearn Finance-Yearn Protocol V1,Using math operations without the SafeMath safe library,Integer Overflow and Underflow,Line Level,912,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L912
QuillAudits,Yearn Finance-Yearn Protocol V1,Usage of an increment when issuing a token without the Counters safe library,Integer Overflow and Underflow,Line Level,911,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L911
QuillAudits,Yearn Finance-Yearn Protocol V1,Function calculation result is not processed,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `withdrawalFee/performanceFee/strategistReward/ keepCRV` values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `min` in yVault,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Check strategy existence for given token.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use modifiers to check transaction authorization as in the yInsure.sol contract,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use constants.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use human readable/understandable errors,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Unused struct,Code With No Effects,Line Level,561-595、610-627,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L561-L595；https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L610-L627
QuillAudits,Yearn Finance-Yearn Protocol V1,"The line is too long, it’s better to separate to a multiline.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,We recommend adding reentrancy guards to all public methods which call other contracts just to avoid possible issues.,Reentrancy,Function Level,89、142,https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L89；https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L142
QuillAudits,Yearn Finance-Yearn Protocol V1,Little bit of wrong line alignment,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,"_fee/_keepCRV potentially can have zero value, so we recommend checking that case to save gas.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""payable""",Code With No Effects,Line Level,133,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L133
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""Address""",Code With No Effects,Line Level,21,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L21
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused internal constant weth,Presence of unused variables,Line Level,24,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L24
QuillAudits,Yearn Finance-Yearn Strategy SSB,sellRewards() threshold values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Same value is calculated in every loop iteration,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Value of memory variable could be used instead of storage variable,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Malfunction on managed pools,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused receive() function,Code With No Effects,Line Level,422,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L422
QuillAudits,Yearn Finance-Yearn Strategy SSB,Strategy's outstanding debt is not accounted in adjustPosition(),not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Balancer LP token is not in protected tokens list,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Condition for proposal approval,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Event ProposalExecuted,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Non-atomic batch execution,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validation of proposal hashes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in proposal(),not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Changes of approved vaults during voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Asynchronous updates of voting power in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Self delegation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Duplicated leaves in MerkleRewards trees,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential flash loan vulnerability,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Upgradable proxy pattern for VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Underflow in History.sol,Integer Overflow and Underflow,Line Level,224,https://github.com/element-fi/elf-council/blob/351a7183d4b64dd5f53a66ba4609cef1da1ce951/contracts/libraries/History.sol#L224
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validity of voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Reentrancy vulnerability,Reentrancy,Function Level,237-276,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/CoreVoting.sol#L237-L276
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Griefing attacks for high-profile delegates,DoS With Block Gas Limit,Function Level,277-299,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/libraries/History.sol#L277-L299
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Double execution vulnerability in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Differentiation of identical Timelock proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unchecked generic calls in Treasury,Unchecked Call Return Value,Line Level,72,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/features/Treasury.sol#L72
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Mapping quorums,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Recycling garbage proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Packed storage update in LockingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code readability in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Cancellation of votes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Systematic sanity checks for explicit type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unsafe type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Redetermination of membership in GSCVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent owner initialization in CoreVoting,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent Solidity version requirements,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity check for proposal IDs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent storage cleanup in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code duplication in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation for delegatee addresses,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for Merkle proofs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential inconsistency of interfaces,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Typo in function names,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,There are two instances of multiplication occurring on the result of a division.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,"The contract inherits the functionality of ERC20Capped, but this functionality is not used at all as there",Code With No Effects,Line Level,938,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevomonToken.sol
Solidity_Finance,RevomonVR Smart Contract, The owner or PoolManager can set the total reward balance of each pool to any value at any time without contributing any Revo tokens.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the LockRevoToken contract, the increaseLockAmount() function incorrectly uses a transfer() on
line 487, when intending to use a transferFrom() in order to transfer tokens from the msg.sender to the contract. In the current state, no tokens are moved at all, as the tokens are being transferred from the contract to the contract.",Code With No Effects,Line Level,487,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoLockStages.sol
Solidity_Finance,RevomonVR Smart Contract,The RevoPoolManager file is saved as a (.ts) Typescript file when it should be a .sol (Solidity) file.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, Expensive looping is used when removing pool addresses which does not account for duplicates that may be in the list.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, The contract uses an outdated version of ReentrancyGuard which is very expensive in terms of gas consuption.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the RevoNFT contract, the local variable countNotEmpty is never used within the getTokensDbIdByOwnerAndCollection() function.",Presence of unused variables,Line Level,1664,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoNFT.sol
Solidity_Finance,RevomonVR Smart Contract,"The getUserPoolReward() function gets the user's tier data, but this is not necessary since it is not used within this function.",Presence of unused variables,Line Level,342,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoStaking.sol#L342
Solidity_Finance,RevomonVR Smart Contract,"Several functions are declared public, but are never called internally. Several state variables can never be modified, but are not declared constant.",not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," Several functions are declared public, but are never called internally.",not_swc,,,
Trail_of_Bits,0x-protocol,WETH9 transferFrom often does not follow spec,not_swc,,,
Trail_of_Bits,0x-protocol,Zero fee orders are possible if a user performs transactions with a zero gas,not_swc,,,
Trail_of_Bits,0x-protocol,Potential overflow in transactionId allowing arbitrary execution of transactions by a malicious owner,Integer Overflow and Underflow,Line Level,302,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWallet.sol#L302
Trail_of_Bits,0x-protocol,Potential overflow in MultiSigWalletWithTimelock when calculating whether the timelock has passed,Integer Overflow and Underflow,Line Level,54-57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWalletWithTimeLock.sol#L54-L57
Trail_of_Bits,0x-protocol,Fee refundsincentivize transaction centralization through market makers,not_swc,,,
Trail_of_Bits,0x-protocol,Market makers have a reduced cost for performing front-running attacks,not_swc,,,
Trail_of_Bits,0x-protocol,cancelOrdersUpTo can be used to permanently block future orders,not_swc,,,
Trail_of_Bits,0x-protocol,setSignatureValidatorApproval race condition may be exploitable,Transaction Order Dependence,Line Level,85,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinSignatureValidator.sol#L85
Trail_of_Bits,0x-protocol,Batch processing of transaction execution and order matching may lead to exchange griefing,DoS with Failed Call,Function Level,426-543,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinMatchOrders.sol#L426-543
Trail_of_Bits,0x-protocol,Lack of eventsforcritical operations,not_swc,,,
Trail_of_Bits,0x-protocol,Lack of validation in the makerAssetData and takerAssetData leadsto unexpected behavior,not_swc,,,
Trail_of_Bits,0x-protocol,Transferswith zero fee amountscan log arbitrary data in their feeAssetData,not_swc,,,
Trail_of_Bits,0x-protocol,MultiSigWallet does notcheck contract existence before call,not_swc,,,
Trail_of_Bits,0x-protocol,Specification-Code mismatch for AssetProxyOwner timelock period,not_swc,,,
Trail_of_Bits,0x-protocol,Rounding division errorscan accumulate over partial fills,Integer Overflow and Underflow,Line Level,57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange-libs/contracts/src/LibMath.sol#L57
Trail_of_Bits,0x-protocol,The Cobb–Douglasfunction is not properly documented and revertswith valid parameters,not_swc,,,
Trail_of_Bits,0x-protocol,Unclear documentation on howorder filling can fail,not_swc,,,
Trail_of_Bits,0x-protocol,"Potentialsingle point of failure for ""read-only-mode"" and ""catastrophic-failure-mode""",not_swc,,,
Trail_of_Bits,0x-protocol,ERC20 reverts during certain self-transfer,not_swc,,,
Trail_of_Bits,0x-protocol,_assertStakingPoolExists never returnstrue,not_swc,,,
Trail_of_Bits,0x-protocol,Callsto setParams may set invalid values and produce unexpected behavior in the staking contracts,not_swc,,,
Trail_of_Bits,0x-protocol,Malicious non-operator makercan decrease staking pool operatorshare,not_swc,,,
Trail_of_Bits,0x-protocol,Non-operator makerscan add or remove other makers,not_swc,,,
Trail_of_Bits,Opyn,Front-running a withdrawal operation can cause it to revert,Transaction Order Dependence,Line Level,256-263,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L256
Trail_of_Bits,Opyn,onERC721Received callback is never called when new tokens are minted or transferred,not_swc,,,
Trail_of_Bits,Opyn,Users can create vaults that cannot be liquidated,not_swc,,,
Trail_of_Bits,Opyn,Solidity compiler optimizations can be problematic,not_swc,,,
Trail_of_Bits,Opyn,Initialization function can be front-run,Transaction Order Dependence,Function Level,33-36,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/ShortPowerPerp.sol#L33-L36
Trail_of_Bits,Opyn,The computation of the normalization factor can fail,Integer Overflow and Underflow,Function Level,1102-1142,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol
Trail_of_Bits,Opyn,Lack of access controls allows anyone to deposit Uniswap tokens,Unprotected Ether Withdrawal,Function Level,344-351,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L344-L351
Trail_of_Bits,Opyn,Users can disrupt the bookkeeping of the strategy when it is deployed,DoS with Failed Call,Function Level,"330-337,436-460","https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L330-L337, https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L436-L460"
Trail_of_Bits,Opyn-Gamma-Protocol,Contracts   used   as   dependencies   do   not   track   upstream   changes,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,TradeCallee   does   not   validate   trade   orders,Authorization through tx.origin,Line Level,64,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/external/callees/TradeCallee.sol#L64
Trail_of_Bits,Opyn-Gamma-Protocol,Controller   _call   function   lacks   a   return   statement,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Adverse   market   conditions   can   eliminate   liquidation   incentives,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,MarginCalculator   defines   events   but   never   emits   them,Presence of unused variables,Line Level,78-84,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L78-L84
Trail_of_Bits,Opyn-Gamma-Protocol,callRestricted   is   disabled   by   default,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Architecture   can   be   simplified,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,"Short,   long,   collateral,   and   vault   data   structures   may   be   sparse   “arrays”",not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Error-prone operate function change rates are fullyc alculated only during withdrawals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Stablecoin value is assumed to be constant,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Numerous   internal   and   external   assumptions,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,intToUint   returns   absolute   values,Integer Overflow and Underflow,Function Level,71-94,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/libs/FixedPointInt256.sol#L71-L94
Trail_of_Bits,Opyn-Gamma-Protocol,getProceed   returns   absolute   value   of   required   collateral,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Non-ideal   handling   of   arithmetic,Integer Overflow and Underflow,Line Level,893-907,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L893-L907
Trail_of_Bits,Opyn-Gamma-Protocol,Unclear   configuration   values   standards,Integer Overflow and Underflow,Line Level,105,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L105
Trail_of_Bits,Opyn-Gamma-Protocol,Decimals   set   by   Yearn   pricer   do   not   reflect   changes   to   yToken   decimals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,yToken   exchange   rates   are   fully   calculated   only   during   withdrawals,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could indefinitely lock owner role,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could lead to incorrect event emission,not_swc,,,
Trail_of_Bits,UniswapV3Core,Anyone could steal pool tokens’ earned interest,not_swc,,,
Trail_of_Bits,UniswapV3Core,Whitepaper contains incorrect equation,not_swc,,,
Trail_of_Bits,UniswapV3Core,Incorrect comparison enables swapping and token draining at no cost,Unprotected Ether Withdrawal,Line Level,502-671,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Unbound loop enables denial of service,DoS With Block Gas Limit,Line Level,544-619,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Front-running pool’s initialization can lead to draining of liquidity provider’s initial deposits,Transaction Order Dependence,Line Level,194-212,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Swapping on zero liquidity allows for control of the pool’s price,not_swc,,,
Trail_of_Bits,UniswapV3Core,Failed transfer may be overlooked due to lack of contract existence check,Unchecked Call Return Value,Line Level,20,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/libraries/TransferHelper.sol
Trail_of_Bits,UniswapV3Core,"getNextSqrtPriceFromInput|Output can return a value outside of MIN_SQRT_RATIO, MAX_SQRT_RATIO",not_swc,,,
Blockchain Labs NZ,BitHero,Typo in function name setEarlyParicipantWhitelist,Typographical Error,Line Level,410,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/audit/contracts/CrowdsaleBase.sol#L410
Blockchain Labs NZ,BitHero,Avoid magic number,not_swc,,,
Blockchain Labs NZ,BitHero,Use .transfer instead of .send ,not_swc,,,
Blockchain Labs NZ,BitHero,Use explicit types for variables,not_swc,,,
Blockchain Labs NZ,BitHero,Using require is recommended over throw ,not_swc,,,
Blockchain Labs NZ,BitHero,Confusing logic in isBreakingCap function,not_swc,,,
Blockchain Labs NZ,BitHero,CrowdsaleBase has no Solidity version specified,Floating Pragma,Subcontract Level,1-464,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/CrowdsaleBase.sol
Blockchain Labs NZ,BitHero,Make visibility explicitly declared on functions,Function Default Visibility,Line Level,"137, 148, 159",https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/AllocatedCrowdsaleMixin.sol#L37，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L148，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L159
Blockchain Labs NZ,BitHero,Old versions of Solidity used,Outdated Compiler Version,Line Level,7,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/DefaultFinalizeAgent.sol#L7
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Duplicated Calculations,Code With No Effects,Function Level,456-516,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L456-L516
BlockSec,blocksec_alpaca_v1.0_signed,Considering the Impact of Transaction Ordering Dependency,Transaction Order Dependence,Function Level,"268-324, 214-261","https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L214-L261, https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324"
BlockSec,blocksec_alpaca_v1.0_signed,Potential Precision Loss,Integer Overflow and Underflow,Line Level,"232,408,414",https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L232
BlockSec,blocksec_alpaca_v1.0_signed,Unreturned Values,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Initialization Parameters,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unlimited Withdraw Value,Unprotected Ether Withdrawal,Function Level,268-324,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locking of Native Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Price,Block values as a proxy for time,Line Level,70,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L70
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locked Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Inconsistency Checks in the Worker Contracts,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Access Out Of Bounds in the getBlockByTime Function,DoS with Failed Call,Function Level,118-142,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked Arrays in the claimRewardMany Function,DoS With Block Gas Limit,Line Level,270,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol#L270
BlockSec,blocksec_multichain_vemult_v1.0_signed,Check Zero Address In the ve.ownerOf Function,Delegatecall to Untrusted Callee,Line Level,491,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked ERC-721 Callback Result,Unchecked Call Return Value,Line Level,679,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L679
BlockSec,blocksec_multichain_vemult_v1.0_signed,Improper Check for the Return Values of the transferFrom Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Incorrect Address Used in the _burn Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Burn Logic,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Handling of Epoch Time,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent End Time in the addEpochBatch Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Reward Calculation,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Implement Secure Logic for the transferAdmin Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Avoid Continuous Divisions in the _pendingRewardSingle Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Alleviate the Concern of Potential Centrality,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Follow the Checks-Effects-Interactions Pattern,Reentrancy,Line Level,1095-1098,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L1095-L1098
BlockSec,blocksec_stnd_v1.7_signed,The VaultManager contract does not handle the debt decimals when judging whether it is a valid CDP,Integer Overflow and Underflow,Line Level,162,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/VaultManager.sol#L162
BlockSec,blocksec_stnd_v1.7_signed,Uninitialized CDP vaults may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Incorrect usage to the function isValidCDP may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The local variables collateral and debt shadow the global ones,Shadowing State Variables,Line Level,77-78,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol#L77-L78
BlockSec,blocksec_stnd_v1.7_signed,Fees can not be distributed as expected due to the unreachable branch,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Potential mistakes,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Anyone can withdraw the liquidated collaterals,Unprotected Ether Withdrawal,Line Level,34,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/pools/liquidation/Liquidator.sol
BlockSec,blocksec_stnd_v1.7_signed,The check in the function liquidate can not be passed,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The global variable borrow is not be updated correctly,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Users’ collaterals may be locked in vaults,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The potential reentrancy risk,Reentrancy,Function Level,178-209,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,The minting cap may be bypassed,Reentrancy,Function Level,216-226,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,Price manipulation attacks against FeeRoll contract,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Finish the function mintFromVault,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Add more smart contracts in the audit list,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Make the codes and comments consistent,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],False approval mechanism in AaveDeposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Key should be private to enforce proper use,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Function can be exported to library,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],LendingPoolAddress can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Prevent contract to be initialized multiple times,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],SwapToPositionRatio function can be called by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],UniswapAddressHolder variables can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Access protection is not working in modifier,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Swap is not safe for front-runs,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Logic to find best pool does not find best one,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing liquidity in Aave deposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on external security promises for ticks,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unsafe cast to int24,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Severe over-/underflow risk without SafeMath,Integer Overflow and Underflow,Line Level,131,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/IdleLiquidityModule.sol#L131
Byterocket,Orbit DeFi[05.29.2022],Empty data doesn’t always revert,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong comparison operator,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Misleading or wrong documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not making use of SafeMath where appropriate,Integer Overflow and Underflow,Line Level,"11-74, 53-54","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/helpers/SwapHelper.sol#L11-L74, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/actions/ZapIn.sol#L53-L54"
Byterocket,Orbit DeFi[05.29.2022],Faulty reliance on data to be present,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of 32 bits does not save gas,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of unsafe ERC20 transfers,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Non-standard delete from array pattern,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Undocumented constant value,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Invalid documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong use of allowance,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use underscores for large numerals,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the getStorage function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unnecessary double function exposed,Code With No Effects,Line Level,87,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManagerFactory.sol#L87
Byterocket,Orbit DeFi[05.29.2022],Unnecessary deadline extension,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Insufficient state-modifying function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong type used for Uniswap V3,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the default method for maximum values,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Making use of undocumented side-effect,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Only emit events if the state changed,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on false guarantees,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of transferFrom instead of transfer,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unchangeable global variables should be immutable,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing visibility keyword,State Variable Default Visibility,Line Level,"13-14, 22, 17, 17-18, 18-19","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManager.sol#L13-L14, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AaveModule.sol#L22, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AutoCompoundModule.sol#L17, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/DepositRecipes.sol#L17-L18, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/WithdrawRecipes.sol#L18-L19"
Coinspect,Incognito Audit,Outdated Solidity version,Outdated Compiler Version,Line Level,1,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/incognito_proxy.sol#L1
Coinspect,Incognito Audit,Ambiguous signatures in requestWithdraw and execute,not_swc,,,
Coinspect,Incognito Audit,Function claim in TransparentUpgradableProxy is not transparent,Function Default Visibility,Function Level,298-302,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/transparentUpgraded.sol#L298-L302
Coinspect,Incognito Audit,Integer overflows in functions withdraw and submitBurnProof,Integer Overflow and Underflow,Line Level,"336,408",https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Free parameters in function execute controllable by front-runners,Transaction Order Dependence,Line Level,520,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Uses of require without error string,not_swc,,,
Coinspect,Incognito Audit,Unnecessary payable function,not_swc,,,
Coinspect,Incognito Audit,Invalid signatures accepted as signed by address(0),not_swc,,,
Coinspect,Incognito Audit,Partially arbitrary external calls controllable by users,Unprotected Ether Withdrawal,Function Level,510-545,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol#L510-L545
Coinspect,Incognito Audit,Insufficient checks when swapping committees,not_swc,,,
Coinspect,Incognito Audit,Inconsistencies with committee swapping lead to race condition,not_swc,,,
consensys,0x_Protocol_v2,A malicious maker can empty a taker’s account of all tokens.,not_swc,,,
consensys,0x_Protocol_v2,MixinSignatureValidator: Insecure signature validator SignatureType.Caller,Lack of Proper Signature Verification,Function Level,51-58,https://github.com/0xProject/0x-monorepo/pull/1015/files#diff-303846d1bc6b014a253355f11d5722c2efd585de3aeac064f0d5d170af76b167#L51-L58
consensys,0x_Protocol_v2,Use of outdated multisig wallet,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: timelocked transactions affected by changing wallet parameters,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: removeAuthorizedAddressAtIndex requires multiple confirmations,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,MixinAuthorizable: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Insufficient testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Token: inaccurate isContract function,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: accepts ETH,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner duplicates code for readBytes4 function,not_swc,,,
consensys,0x_Protocol_v2,Outdated compiler version,Outdated Compiler Version,Line Level,19,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxyOwner/AssetProxyOwner.sol
consensys,0x_Protocol_v2,Use of this.balance in WETH9.sol,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Reconsider use of inline assembly,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Unclear comments,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy/ERC721Proxy: LibBytes imported but not used,Code With No Effects,Line Level,21,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxy/ERC20Proxy.sol
consensys,0x_Protocol_v2,LibBytes is imported but never used,Code With No Effects,Line Level,31,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/Exchange/MixinAssetProxyDispatcher.sol
consensys,0x_Protocol_v2,Optimization: refine function visibilities in the Exchange for gas efficiency,not_swc,,,
consensys,0x_Protocol_v2,LibConstants: dynamic constructor initialisation,not_swc,,,
consensys,0x_v3_Staking,Delegated stake weight reduction can be bypassed by using an external contract,Delegatecall to Untrusted Callee,Subcontract Level,1-349,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/staking_pools/MixinStakingPool.sol#L1-L349
consensys,0x_v3_Staking,MixinParams.setParams bypasses safety checks made by standard StakingProxy upgrade path.,not_swc,,,
consensys,0x_v3_Staking,Authorized addresses can indefinitely stall ZrxVaultBackstop catastrophic failure mode,not_swc,,,
consensys,0x_v3_Staking,LibMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Function Level,362-369,https://github.com/0xProject/0x-monorepo/blob/a22ba8647c1bdcb6f992c2b4338a4286d9712e4f/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs,not_swc,,,
consensys,0x_v3_Staking,Pool IDs can just be incrementing integers,not_swc,,,
consensys,0x_v3_Staking,LibProxy.proxyCall() may overwrite important memory,not_swc,,,
consensys,0x_v3_Staking,Use of tx.origin as a part of authorization control,Authorization through tx.origin,Line Level,报告里没这项147175,0x-monorepo/MixinCoordinatorApprovalVerifier.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,State variable shadows another state variable,Shadowing State Variables,Line Level,39,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/dev-utils/contracts/src/LibAssetData.sol#L39
consensys,0x_v3_Staking,A control flow decision is made based on a predictable,Block values as a proxy for time,Line Level,70,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/staking/contracts/src/sys/MixinScheduler.sol#L70
consensys,0x_v3_Staking,The binary addition can overflow,Integer Overflow and Underflow,Line Level,304， 339， 388， 418， 478，,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/utils/contracts/src/LibBytes.sol#L304
consensys,0x_v3_Staking,Anyone can withdraw ETH from the contract account.,Unprotected Ether Withdrawal,Line Level,66,0x-monorepo/Refundable.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,LibFixedMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Line Level,359-376,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs Mi,Code With No Effects,Line Level,"61,113",https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/interfaces/IStructs.sol
consensys,0x_v3_Staking,Anyone can remove a maker’s pending pool join status,not_swc,,,
consensys,0x_v3_Staking,Pool 0 can be used to temporarily prevent makers from joining another pool,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Fix weak assertions in MixinStakingPool stemming from use of NIL_POOL_ID,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Remove MixinAbstract and fold MixinStakingPoolRewards into MixinFinalizer and MixinStake,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove confusing access to activePoolsThisEpoch,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove MixinFinalizer._getUnfinalizedPoolRewardsFromState,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove complicating getters from MixinStakingPoolRewards,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove unneeded dependency on MixinStakeBalances,not_swc,,,
consensys,0x_v3_Staking,Misleading MoveStake event when moving stake from UNDELEGATED to UNDELEGATED,not_swc,,,
consensys,0x_v3_Staking,The staking contracts contain several artifacts of a quickly-changing codebase,not_swc,,,
consensys,0x_v3_Staking,Remove unnecessary fallback function in Staking contract,Code With No Effects,Function Level,36-39,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/Staking.sol
consensys,Bounties_Network,Use safe math for arithmetic operations,Integer Overflow and Underflow,Line Level,246,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L246
consensys,Bounties_Network,Approver/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,changeApprover/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,ERC721 can be stolen in many cases,not_swc,,,
consensys,Bounties_Network,Misprint in updateFulfillment,not_swc,,,
consensys,Bounties_Network,NFT with TokenID = 0 cannot be used,not_swc,,,
consensys,Bounties_Network,ETH contributions don't work with meta transactions,not_swc,,,
consensys,Bounties_Network,Add tests for meta transactions functionality,not_swc,,,
consensys,Bounties_Network,Make sure at least one issuer is set,not_swc,,,
consensys,Bounties_Network,Use correct sender when emitting events,not_swc,,,
consensys,Bounties_Network,Incompatible ERC721Basic transferFrom() function,not_swc,,,
consensys,Bounties_Network,Safeguard contribute() against invalid bounty.tokenversion,not_swc,,,
consensys,Bounties_Network,Change public methods to external,State Variable Default Visibility,Subcontract Level,1-722,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Use the same transfer function for consistency,not_swc,,,
consensys,Bounties_Network,Make contribute bail early if amount is zero,not_swc,,,
consensys,Bounties_Network,Require latest Solidity version,Floating Pragma,Line Level,1,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Explicitly declare State Variable Default Visibility,State Variable Default Visibility,Line Level,46，47,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L46-L47
consensys,Bounties_Network,Use token interfaces instead of token implementation,not_swc,,,
consensys,Bounties_Network,"Rework project folder structure to reflect the sourceUnits role, use and purpose",not_swc,,,
consensys,Bounties_Network,Outdated documentation/specification,not_swc,,,
consensys,Bounties_Network,Do not save token address if tokenVersion is 0,not_swc,,,
consensys,Bounties_Network,Anyone can act as a contributor before any tokens of the contribution were sent,State Variable Default Visibility,Function Level,243-262,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L243-L262
consensys,Brickblock,AndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check in ExchangeRateProviderStub,not_swc,,,
consensys,Brickblock,Unnecessary static call to get POA Manager's address in POA proxy,not_swc,,,
consensys,Brickblock,Unnecessary static call to fetch registry's address in POA Proxy,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an anti-separation?of-concerns pattern,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check-in ExchangeRateProviderStub,Code With No Effects,Line Level,53-54,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/ExchangeRateProvider.sol
consensys,Brickblock,buyAndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an antiseparation-of-concerns pattern,not_swc,,,
consensys,Brickblock,Unnecessary complexity in toXLengthString functions in PoaCommon,not_swc,,,
consensys,Brickblock,No plan for how a physical tokenized asset would handle a chain split,not_swc,,,
consensys,Brickblock,Usage of random storage slots in the Proxy adds too much complexity,not_swc,,,
consensys,Brickblock,Unnecessary usage of low-level .call() method,Reentrancy,Line Level,184,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCommon.sol#L184
consensys,Brickblock,Withdraw method does not check if balance is sufficient for the withdrawal,Unprotected Ether Withdrawal,Function Level,87-98,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/BrickblockAccount.sol#L87
consensys,Brickblock,Can lock and unlock 0 BBK in AccessToken,not_swc,,,
consensys,Brickblock,Precision in percent function can overflow,Integer Overflow and Underflow,Line Level,"292,297",https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCrowdsale.sol#L297
consensys,Brickblock,Transaction order dependence issue in ExchangeRates,not_swc,,,
consensys,Brickblock,Non-optimal ordering of instructions in PoaProxy and PoaToken fallback functions,not_swc,,,
consensys,Brickblock,ExchangeRateProvider's callback check for access control is non-optimal,not_swc,,,
consensys,Brickblock,Inaccurate specification comment for setFailed() method in PoaCrowdsale,not_swc,,,
consensys,Brickblock,Unnecessary fallback functions to refuse payments,Code With No Effects,Function Level,300-305,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/AccessToken.sol
consensys,Brickblock,Comment about upgrade path is incorrect,not_swc,,,
consensys,Brickblock,FeeManager open-by-default design might introduce flaws in the token economy,not_swc,,,
consensys,Brickblock,Unnecessary refund action in PoaCrowdsale,not_swc,,,
consensys,Brickblock,this should be explicitly typecast to address,not_swc,,,
consensys,Brickblock,Blocking conditions in buyFiat,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in PoaToken is dangerous,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in AccessToken is dangerous,Integer Overflow and Underflow,Subcontract Level,1-333,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/AccessToken.sol
consensys,Brickblock,Non-optimal stage checking condition in PoaToken,not_swc,,,
consensys,Brickblock,Contradicting comment on POAManager,not_swc,,,
consensys,Brickblock,Inconsistent type used for decimals,not_swc,,,
consensys,Brickblock,Inconsistent event naming,not_swc,,,
consensys,Brickblock,Incorrect name of parameter in BBKUnlockedEvent,not_swc,,,
consensys,DeFi_Saver,Unused code present in the codebase,Code With No Effects,Subcontract Level,1-39,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/utils/ZrxAllowlist.sol
consensys,DeFi_Saver,Return value is not used for TokenUtils.withdrawTokens,not_swc,,,
consensys,DeFi_Saver,Missing access control for DefiSaverLogger.Log,not_swc,,,
consensys,DeFi_Saver,Random task execution,Reentrancy,Function Level,105-136,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/flashloan/FLAaveV2.sol#L105
consensys,DeFi_Saver,Tokens with more than 18 decimal points will cause issues,Integer Overflow and Underflow,Function Level,100-108,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/wrappersV3/KyberWrapperV3.sol#L100
consensys,DeFi_Saver,"Error codes of Compound’s Comptroller.enterMarket, Comptroller.exitMarket are not checked",Unchecked Call Return Value,Function Level,26-37,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/compound/helpers/CompHelper.sol#L26
consensys,DeFi_Saver,Reversed order of parameters in allowance function call,not_swc,,,
consensys,DeFi_Saver,Full test suite is recommended,not_swc,,,
consensys,DeFi_Saver,Kyber getRates code is unclear,not_swc,,,
consensys,DeFi_Saver,Missing check in IOffchainWrapper.takeOrder implementation,Integer Overflow and Underflow,Function Level,42-50,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/offchainWrappersV3/ZeroxWrapper.sol#L42
consensys,ENS_Permanent_Registrar,Memory corruption in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,SimplePriceOracle.price is susceptible to integer overflow,Integer Overflow and Underflow,Function Level,26-28,https://github.com/ensdomains/ethregistrar/pull/17/files/199e43a53b17834fb66d8be055d4e6c7b9ba8bdd#diff-9c3a8554a75c167d610300421bcafac54b1e1d345f258c9c228cc6c5e637fb06
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register is vulnerable to front running,Transaction Order Dependence,Line Level,"46,48,58",https://github.com/ensdomains/ethregistrar/pull/18/files/3f71464ad3ac8d20bd0e9b6e36363e222f868651
consensys,ENS_Permanent_Registrar,SOA record check on the wrong domain Major,not_swc,,,
consensys,ENS_Permanent_Registrar,Consider replacing the Buffer implementation,not_swc,,,
consensys,ENS_Permanent_Registrar,Overzealous resizing in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,Pending auctions in the legacy registrar don’t result in proper ownership in ENS,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer should probably use the live modifier,not_swc,,,
consensys,ENS_Permanent_Registrar,Reconsider use of inline assembly in BytesUtils.sol,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer does not check for invalid names,not_swc,,,
consensys,ENS_Permanent_Registrar,Sanity check around transferPeriodEnds,not_swc,,,
consensys,ENS_Permanent_Registrar,StablePriceOracle.price has an unimportant integer underflow,Integer Overflow and Underflow,Line Level,59,https://github.com/ensdomains/ethregistrar/pull/20/files/69bbf720cd76633fa9e50f34d0822f1b773d4efa
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register should revert rather than silently fail,Unchecked Call Return Value,Function Level,72-75,https://github.com/ensdomains/ethregistrar/pull/22/files/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e
consensys,ENS_Permanent_Registrar,Assert Violation,Assert Violation,Line Level,79,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/BaseRegistrarImplementation.sol#L79
consensys,ENS_Permanent_Registrar,DoS with Failed Call,DoS with Failed Call,Function Level,42-45,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L42-L45
consensys,ENS_Permanent_Registrar,Block values as a proxy for time,Block values as a proxy for time,Line Level,86,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L86
consensys,ENS_Permanent_Registrar,Work towards a trustless model for ENS,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.commit overwrites previously-committed values,not_swc,,,
consensys,Fei_Protocol,Purchasing and committing still possible after launch,not_swc,,,
consensys,Fei_Protocol,BondingCurve allows users to acquire FEI before launch,not_swc,,,
consensys,Fei_Protocol,Timed.isTimeEnded returns true if the timer has not been initialized,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.emergencyExit remains functional after launch,not_swc,,,
consensys,Fei_Protocol,UniswapIncentive overflow on pre-transfer hooks,Integer Overflow and Underflow,Line Level,128-134  173-186,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/token/UniswapIncentive.sol
consensys,Fei_Protocol,Overflow/underflow protection,Integer Overflow and Underflow,Line Level,131,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/genesis/GenesisGroup.sol#L131
consensys,Fei_Protocol,Unchecked return value for IWETH.transfer call,Unchecked Call Return Value,Line Level,122,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pcv/EthUniswapPCVController.sol#L122
consensys,Fei_Protocol,Unchecked return value for transferFrom calls,Unchecked Call Return Value,Line Level,121,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pool/Pool.sol#L121
consensys,Fei_Protocol,Assertions that can fail,Assert Violation,Line Level,21,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/router/UniswapSingleEthRouter.sol#L21
consensys,Gamma,UniProxy.depositSwap - Tokens are not approved before calling Router.exactInput,not_swc,,,
consensys,Gamma,Uniproxy.depositSwap - _router should not be determined by the caller,not_swc,,,
consensys,Gamma,UniProxy.properDepositRatio - Proper ratio will not prevent liquidity imbalance for all possible scenarios,Code With No Effects,Function Level,258-275,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,UniProxy - SafeERC20 is declared but safe functions are not used,not_swc,,,
consensys,Gamma,Missing/wrong implementation,Code With No Effects,Line Level,Link1：108、113   Link2：415、433、439,"Link1: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
Link2: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol"
consensys,Gamma,UniProxy.depositSwap doesn’t deposit all the users’ funds,not_swc,,,
consensys,Gamma,Hypervisor - Multiple “sandwiching” front running vectors,not_swc,,,
consensys,Gamma,Full test suite is necessary,not_swc,,,
consensys,Gamma,Uniswap v3 callbacks access control should be hardened,not_swc,,,
consensys,Gamma,Code quality comments,not_swc,,,
consensys,Gamma,The Hypervisor.deposit function does not check the msg.sender,Unprotected Ether Withdrawal,Function Level,80-141,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,Gamma,Re-entrancy + flash loan attack can invalidate price check,Reentrancy,Line Level,75-82,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,The deposit function of the Hypervisor contract should only be called from UniProxy,Unprotected Ether Withdrawal,Function Level,66-125,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,Hypervisor.withdraw - Possible reentrancy,Reentrancy,Function Level,173-214,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,MCDEX_Mai_Protocol_V2,Perpetual - liquidateFrom should not have public visibility,Function Default Visibility,Function Level,248-253,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L248-L253
consensys,MCDEX_Mai_Protocol_V2,Refactor PerpetualProxy,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Clarify confusing use of signed integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Improve documentation and provide a complete specification,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Use individually typed setter methods instead of a combined set*Prameter method,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2, LibTypes.Status.SETTLING should be renamed to LibTypes.Status.EMERGENCY,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,"Implement clear, consistent naming conventions for all contracts",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Prefix variables that are expected to denominated in “wads” to make them distinguishable from integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Introduce a system setup phase and provide sane parameters on deployment,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Import 3rd party libraries from their original source and keep them unchanged instead of copying their content into a new library,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Consider removing unnecessary events,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unnecessary ABIEncoderV2 declarations,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Avoid redefining the same structs,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Methods should be declared external,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Gas Optimization static hashed values,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity pools can be initialized with zero collateral,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Administrators can put the system into emergency mode indefinitely,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Signed data may be usable cross-chain,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - validateOrderParam does not check against SUPPORTED_ORDER_VERSION,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMathSigned - wpowi returns an invalid result for a negative exponent,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Outdated solidity version and floating pragma,Outdated Compiler Version,Line Level,1,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L1
consensys,MCDEX_Mai_Protocol_V2,AMM - ONE_WAD_U is never used,Presence of unused variables,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L17
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Variable shadowing in constructor,Shadowing State Variables,Function Level,34-41,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L34-L41
consensys,MCDEX_Mai_Protocol_V2,Perpetual - The specified decimals for the collateral may not reflect the token’s actual decimals,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Unchecked return value in ShareToken.mint,Unchecked Call Return Value,Subcontract Level,499-502,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L499-L502
consensys,MCDEX_Mai_Protocol_V2,Perpetual - beginGlobalSettlement can be called multiple times,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unused Imports,Code With No Effects,Function Level,4、5,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L4-L5
consensys,MCDEX_Mai_Protocol_V2,Exchange - OrderStatus is never used,Presence of unused variables,Line Level,20,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/exchange/Exchange.sol#L20
consensys,MCDEX_Mai_Protocol_V2,LibMath - Inaccurate declaration of _UINT256_MAX,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - inconsistent assertion text and improve representation of literals with many digits,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - roundHalfUp returns unfinished result,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath/LibOrder - unused named return value,Presence of unused variables,Function Level,90-96,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/lib/LibMath.sol#L90-L96
consensys,MCDEX_Mai_Protocol_V2,"Where possible, a specific contract type should be used rather than address",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - CancelOrder has no effect,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - funding can be called in emergency mode,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdraw should only be available in NORMAL state,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdrawFromInsuranceFund should check wadAmount instead of rawAmount,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unpredictable behavior due to front running or general bad timing,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Governance is able to set an invalid alpha value,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Amount of collateral spent or shares received may be unpredictable for liquidity provider,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - insufficient input validation in matchOrders,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity provider may lose up to lotSize when removing liquidity,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Oracle - Unchecked oracle response timestamp and integer over/underflow,Integer Overflow and Underflow,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/oracle/ChainlinkAdapter.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - RNG failure can lock user funds,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - transferEther should be internal,Function Default Visibility,Function Level,63-67,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L63-L67
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Reconsider the use of proxy factories in the system if they are not needed,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,"Where possible, functions should accept a specific contract type rather than address parameters",not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Check codesize before adding listeners,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Stick to clear interface naming conventions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - unnecessary payable,Function Default Visibility,Function Level,90-93,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBoxController.sol#L90-L93
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Clean up unused source-units in the repository,Code With No Effects,Function Level,  8-19,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/counterfactual-action/CounterfactualAction.sol#L8-L19
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Rework the repository structure and clearly mark which 3rd party contracts have been modified,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - Unprotected selfdestruct in proxy implementation,Unprotected SELFDESTRUCT Instruction,Function Level,86-89,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L88-L89
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Ticket duplication,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - trustedForwarder can impersonate any msg.sender,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Unpredictable behavior for users due to admin front running or general bad timing,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - addExternalErc721Award duplicate or invalid tokenIds may block award phase,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Token with callback related warnings (ERC777 a.o.),Reentrancy,Function Level,252-263,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - unbounded external tokens linked list may be used to force a gas DoS,DoS With Block Gas Limit,Line Level,254,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol#L254
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - setNumberOfWinners does not enforce count>0,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - plunder should disallow plundering to address(0),not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Inconsistent behavior between award-phase modifiers and view functions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Awards can be guaranteed with a set number of tickets,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Inconsistent behavior compared to SingleRandomWinner,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Initialize implementations for proxy contracts and protect initialization methods,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - executeCalls can be misused to relay calls,not_swc,,,
consensys,Skale_Token,uint overflow may lead to stealing funds,Integer Overflow and Underflow,Function Level,74-76,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationRequestManager.sol#L74-L76
consensys,Skale_Token,Node can unlink validator,not_swc,,,
consensys,Skale_Token,getLockedCount is iterating over all history of delegations,DoS With Block Gas Limit,Line Level,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol,
consensys,Skale_Token,Tokens after delegation should not be unlocked automatically,Unprotected Ether Withdrawal,Function Level,258-264,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol#L258-L264
consensys,Skale_Token,Some unlocked tokens can become locked after delegation is rejected,not_swc,,,
consensys,Skale_Token,Fees can be > 100%,not_swc,,,
consensys,Skale_Token,getState changes state implicitly,not_swc,,,
consensys,Skale_Token,endingDelegations list is redundant,not_swc,,,
consensys,Skale_Token,tokenState.setState redundant checks,not_swc,,,
consensys,Skale_Token,DelegationService redundancy,not_swc,,,
consensys,Skale_Token,Add timelock for some onlyOwner functions,not_swc,,,
consensys,Skale_Token,Users can burn delegated tokens using re-entrancy attack,Reentrancy,Function Level,413-426,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/ERC777/LockableERC777.sol#L413-L426
consensys,Skale_Token,Slashes do not affect bounty distribution,not_swc,,,
consensys,Skale_Token,Iterations over slashes,not_swc,,,
consensys,Skale_Token,Storage operations optimization,not_swc,,,
consensys,Skale_Token,Duplicate function implementation,not_swc,,,
consensys,Skale_Token,Function overloading,not_swc,,,
consensys,Skale_Token,Gas limit for bounty and slashing distribution,DoS With Block Gas Limit,Function Level,310-316,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L310-L316
consensys,Skale_Token,Rename functions,not_swc,,,
consensys,Skale_Token,Delegations might stuck in non-active validator,not_swc,,,
consensys,Skale_Token,Disabled Validators still have delegated funds,not_swc,,,
consensys,Skale_Token,Some functions are defined but not implemented,Code With No Effects,Function Level,152-158,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L152-L158
consensys,Skale_Token,Validator should be able to remove delegator,not_swc,,,
consensys,Skale_Token,Lack of logs and events on state changes,not_swc,,,
consensys,Skale_Token,ERC-777 callback issue,Reentrancy,Line Level,55-68,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/SkaleBalances.sol
consensys,TCR,An unchallenged application cannot be cancelled,not_swc,,,
consensys,TCR,Re-inserting the last node in the list creates a cycle,not_swc,,,
consensys,TCR,getCommitHash is an unreliable proof that _prevPollID exists,not_swc,,,
consensys,TCR,Integer overflow in startPoll,Integer Overflow and Underflow,Function Level,217-218,https://github.com/ConsenSys/PLCRVoting/commit/26579ec7f645f868cdb4c7de4c764808882a5d3a#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL217-L218
consensys,TCR,pollExists is misleading and incomplete,Integer Overflow and Underflow,Function Level,297-304,https://github.com/ConsenSys/PLCRVoting/commit/a069730fcd818c249574a38f922e871c8011fc4f#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL297-L304
consensys,TCR,Parameterizer proposal deposits and challenge deposits can differ,not_swc,,,
consensys,TCR,Integer underflow in challengeReparameterization,Integer Overflow and Underflow,Line Level,164,https://github.com/skmgoldin/tcr/commit/a9f0d97ddfa6a4fafeed9c087086994efd1fe4dc#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL164
consensys,TCR,Integer underflow in withdrawVotingRights,Integer Overflow and Underflow,Line Level,90,https://github.com/ConsenSys/PLCRVoting/commit/c8df984d5d80593b72363cd6ee0f1f0652bc5959#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL90
consensys,TCR,Integer overflows in proposeReparameterization,Integer Overflow and Underflow,Line Level,137-159,https://github.com/skmgoldin/tcr/commit/81c3274b3c908e2034d243f41e3e89783c67dd1b#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL137
consensys,TCR,Integer overflow in Registry.apply,Integer Overflow and Underflow,Line Level,97,https://github.com/skmgoldin/tcr/commit/9d8b7af5fef7516dd6f84dfdce4f05109cae4a7e#diff-3579d55f1ea85bbe0e06236275421f84e98afd945520c4138c2c4cb1a7b3543fL97
consensys,TCR,Use EIP20Interface instead of EIP20,not_swc,,,
consensys,TCR,Challenges with zero votes will succeed,not_swc,,,
Cystack,AOC BEP-20 - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code   https://testnet.bscscan.com/address/0xBc79AE4eFE0259dCA865A0b75f6873d2EB0169A3#code
Cystack,AOC BEP-20 - v1.3,Improper state of visibility for the variable owner,State Variable Default Visibility,Line Level,119,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Missing error messages,Requirement Violation,Line Level,"133, 555, 567",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Incorrect implementation for the function withdrawBNBFromContract,Code With No Effects,Line Level,554-559,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,High gas cost due to improper initialization of variables,State Variable Default Visibility,Line Level,246-248,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Defect in coding design for the contract constructor,Incorrect Constructor Name,Line Level,"245,284,516",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Misnamed functions in contract codebases,Typographical Error,Line Level,"257, 558",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Possibility of BNB withdrawals to address(0),Unprotected Ether Withdrawal,Line Level,359-363,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Timestamps do not match with terms in Regressive Anti-Manipulating Strategy (RAMS),Incorrect Constructor Name,Line Level,113-126,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Large Transaction Authorisation Feature (LTAF) and RAMS do not work properly for balance with a small value,Typographical Error,Line Level,393-406,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Hacken,Fidometa-V2,Missing functionality,not_swc,,,
Hacken,Fidometa-V2,Excluding from receiving rewards logic is corrupted,not_swc,,,
Hacken,Fidometa-V2,Operation between different time units,not_swc,,,
Hacken,Fidometa-V2,Significant impact on market price,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,No checks to prevent percentage overflow,not_swc,,,
Hacken,Fidometa-V2,User balance may exceed the total supply,not_swc,,,
Hacken,Fidometa-V2,Integer Underflow,Integer Overflow and Underflow,Line Level,1003,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1003
Hacken,Fidometa-V2,Missing management of excluded accounts,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,Old wallets are not included back to changes and rewards,not_swc,,,
Hacken,Fidometa-V2,SafeMath is unneeded after 0.8.0,not_swc,,,
Hacken,Fidometa-V2,Initial minting event skipped,not_swc,,,
Hacken,Fidometa-V2,Burn wallet could be changed,not_swc,,,
Hacken,Fidometa-V2,Vested assets should be unlocked automatically,not_swc,,,
Hacken,Fidometa-V2,Possible Gas exceeding,DoS With Block Gas Limit,Line Level,771-778,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L771-L778
Hacken,Fidometa-V2,Unused library,not_swc,,,
Hacken,Fidometa-V2,Floating pragma,Floating Pragma,Line Level,1,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L1
Hacken,Fidometa-V2,Violation of IERC-20 standard,not_swc,,,
Hacken,Fidometa-V2,Unused functions,Code With No Effects,Function Level,788-797,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L788-L797
Hacken,Fidometa-V2,Similar functions,not_swc,,,
Hacken,Fidometa-V2,Template code,not_swc,,,
Hacken,Fidometa-V2,Functions that can be declared as external,not_swc,,,
Hacken,Fidometa-V2,Requires that would never revert transaction,Code With No Effects,Line Level,1041,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1041
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Local variable shadowing,Shadowing State Variables,Line Level,511,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L511
Hacken,Fidometa-V2,State variables that could be declared constant,not_swc,,,
Hacken,Fidometa-V2,Template variables,not_swc,,,
Hacken,Fidometa-V2,Overwhelmed code,not_swc,,,
Hacken,Fidometa-V2,Repeated code,Code With No Effects,Line Level,"1059-1061, 1070-1072, 1081-1082, 1092-1094","https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1059-L1061
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1070-L1072
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1081-L1082
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1092-L1094"
Hacken,Fidometa-V2,Unnecessary code,Code With No Effects,Line Level,974,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L974
Hacken,Fidometa-V2,Unnecessary checks,Code With No Effects,Function Level,552-584,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L552-L584
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Hardcoded values,not_swc,,,
Hacken,LunaFi,Vesting funds are not guaranteed,not_swc,,,
Hacken,LunaFi,Staking liquidity funds safety is not guaranteed by the contract logic,not_swc,,,
Hacken,LunaFi,Admin may burn users' funds,Unprotected Ether Withdrawal,Function Level,129-142,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L129-L142
Hacken,LunaFi,Admin may mint an unlimited amount of tokens,Unprotected Ether Withdrawal,Function Level,145-152,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L145-L152
Hacken,LunaFi,Redundant function argument,Code With No Effects,Line Level,265,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/VLFI.sol#L265
Hacken,LunaFi,Redundant use of SafeMath library,not_swc,,,
Hacken,LunaFi,Use of magic number,not_swc,,,
Hacken,LunaFi,Unexpected output,not_swc,,,
Hacken,LunaFi,Redundant functions,Code With No Effects,Function Level,"161-167, 169-171","https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L161-L167
https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L169-L171"
openzeppelin,Arcade_City_token,General code quality,not_swc,,,
openzeppelin,Arcade_City_token,Remove unneeded call.value(),Reentrancy,Line Level,231,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Price function is not linear,not_swc,,,
openzeppelin,Arcade_City_token,Usage of magic constants,not_swc,,,
openzeppelin,Arcade_City_token,Remove commented code,not_swc,,,
openzeppelin,Arcade_City_token,Tests should be independent,not_swc,,,
openzeppelin,Arcade_City_token,Avoid name reuse,Shadowing State Variables,Line Level,133、190,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/TokenVesting.sol
openzeppelin,Arcade_City_token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-374,https://github.com/swarmcity/ac-token/tree/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts
openzeppelin,Arcade_City_token,Remove unnecessary code,Code With No Effects,Line Level,167,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Remove duplicate code,Code With No Effects,Line Level,188-199、202-204、267-274,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Stray tokens can be locked in ArroToken contract.,not_swc,,,
openzeppelin,ArroToken,Lack of event emission OwnershipTransferred on contract construction,not_swc,,,
openzeppelin,ArroToken,Lack of event emission after modifying newOwner variable,not_swc,,,
openzeppelin,ArroToken,owner and newOwner storage variables can be modified without events emission,not_swc,,,
openzeppelin,ArroToken,Duplicate code in transfer and transferFrom functions,not_swc,,,
openzeppelin,ArroToken,Wrong usage of inheritance with Safemath contract,Incorrect Inheritance Order,Line Level,105,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,The TokenArro contract can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,The totalSupply function does not return the real total supply,not_swc,,,
openzeppelin,ArroToken,Unnecessary inheritance and imports,not_swc,,,
openzeppelin,ArroToken,initialize function missing the initializer modifier,not_swc,,,
openzeppelin,ArroToken,Unnecessary calls to initializers,not_swc,,,
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Not following good Smart Contract development practices,not_swc,,,
openzeppelin,ArroToken,No allowance front-running mitigation,Transaction Order Dependence,Function Level,165-169,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Outdated solidity version in use,Outdated Compiler Version,Line Level,5,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Missing docstrings,not_swc,,,
openzeppelin,ArroToken,Tokens can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,Not following a consistent coding style,not_swc,,,
openzeppelin,ArroToken,Multiple variables declared as uint,not_swc,,,
openzeppelin,ArroToken,No explicit visibility definition of variables,State Variable Default Visibility,Line Level,112,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L112
openzeppelin,ArroToken,Link reference to the ERC20 EIP is deprecated,not_swc,,,
openzeppelin,ArroToken,Unused variables defined in function definitions,Presence of unused variables,Line Level,149,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L149
openzeppelin,ArroToken,Inconsistent variable naming,not_swc,,,
openzeppelin,ArroToken,Non-standard initialization of ERC20,not_swc,,,
openzeppelin,Endaoment,SafeMath library is not used,Integer Overflow and Underflow,Line Level,127-128,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L127-L128
openzeppelin,Endaoment,Multiple getters for the same state variable,not_swc,,,
openzeppelin,Endaoment,Governance restrictions can be bypassed,not_swc,,,
openzeppelin,Endaoment,Fees are wrongly calculated,not_swc,,,
openzeppelin,Endaoment,Unsupported ERC20 tokens can be stuck in the contract,not_swc,,,
openzeppelin,Endaoment,Not following the Checks-Effects-Interactions pattern,Reentrancy,Function Level,119-134,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L119-L134
openzeppelin,Endaoment,Token transfers can silently fail,Unchecked Call Return Value,Line Level,"93, 95",https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Org.sol
openzeppelin,Endaoment,Lack of input validation,not_swc,,,
openzeppelin,Endaoment,Non flexible data objects,not_swc,,,
openzeppelin,Endaoment,Missing error messages,not_swc,,,
openzeppelin,Endaoment,README file is missing important information,not_swc,,,
openzeppelin,Endaoment,Missing docstrings,not_swc,,,
openzeppelin,Endaoment,Misleading docstrings,not_swc,,,
openzeppelin,Endaoment,Useless input parameters,not_swc,,,
openzeppelin,Endaoment,Lack of event emission,not_swc,,,
openzeppelin,Endaoment,Missing getter,not_swc,,,
openzeppelin,Endaoment,Incorrect require statement,Requirement Violation,Line Level,48,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Administratable.sol#L48
openzeppelin,Endaoment,uint as uint256,not_swc,,,
openzeppelin,Endaoment,Unused state variables,not_swc,,,
openzeppelin,Endaoment,Unused contracts,Code With No Effects,Subcontract Level,1-34,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/libraries/SafeMath.sol#L1-L34
openzeppelin,Endaoment,Style recommendations not applied,not_swc,,,
openzeppelin,Endaoment,Incorrect functions visibility,not_swc,,,
openzeppelin,Endaoment,Unnecessary import,Code With No Effects,Line Level,6,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/FundFactory.sol#L6
openzeppelin,Endaoment,Fund contract can’t receive ethers,not_swc,,,
openzeppelin,Endaoment,Typos in the code,not_swc,,,
openzeppelin,Endaoment,Unclear function purpose,not_swc,,,
openzeppelin,Endaoment,Default value as sensible information,not_swc,,,
openzeppelin,Fei_Protocol,Re-implementing ECDSA signature recovery,not_swc,,,
openzeppelin,Fei_Protocol,Not checking for 0 addresses,not_swc,,,
openzeppelin,Fei_Protocol,Commented out code,Code With No Effects,Line Level,"76,77",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/UniswapIncentive.sol#L76-L77
openzeppelin,Fei_Protocol,Functions return without parameters specified,not_swc,,,
openzeppelin,Fei_Protocol,GenesisGroup is a token unnecessarily,not_swc,,,
openzeppelin,Fei_Protocol,Improper use of require,Requirement Violation,Function Level,100-112,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L100-L112
openzeppelin,Fei_Protocol,Inconsistencies around time,Block values as a proxy for time,Line Level,24,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/dao/GovernorAlpha.sol#L24
openzeppelin,Fei_Protocol,Inconsistent coding style,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent error message format,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent methods for retrieving cumulative price from Uniswap oracle,not_swc,,,
openzeppelin,Fei_Protocol,Incorrect GovernorAlpha name constant,not_swc,,,
openzeppelin,Fei_Protocol,Interfaces omit some external functions,not_swc,,,
openzeppelin,Fei_Protocol,Uninitializable global variable in LinearTimelockToken,not_swc,,,
openzeppelin,Fei_Protocol,Constants not explicitly declared,State Variable Default Visibility,Line Level,22,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/orchestration/BondingCurveOrchestrator.sol#L22
openzeppelin,Fei_Protocol,Missing and incomplete event emissions,not_swc,,,
openzeppelin,Fei_Protocol,Naming issues hinder understanding and clarity of the codebase,not_swc,,,
openzeppelin,Fei_Protocol,NatSpec comments missing,not_swc,,,
openzeppelin,Fei_Protocol,Using now instead of block.timestamp,not_swc,,,
openzeppelin,Fei_Protocol,Proposals can be canceled in states that are unintuitive,not_swc,,,
openzeppelin,Fei_Protocol,Proposal struct storage is inefficient,not_swc,,,
openzeppelin,Fei_Protocol,Redundant event definition,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are not inherited,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are unnecessary or inconsistent with implementation,not_swc,,,
openzeppelin,Fei_Protocol,Test and production constants in the same codebase,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessarily small integer sizes,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary if statement,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary imports,Code With No Effects,Line Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L7
openzeppelin,Fei_Protocol,"Unreachable, incorrect error message",Code With No Effects,Line Level,186,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L186
openzeppelin,Fei_Protocol,Unnecessary inheritance,Code With No Effects,Line Level,12,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/Fei.sol#L12
openzeppelin,Fei_Protocol,Use of uint instead of uint256,not_swc,,,
openzeppelin,Fei_Protocol,Bypass burn penalty,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors during reweight,not_swc,,,
openzeppelin,Fei_Protocol,Attacker can manipulate ETH/FEI spot price on allocations,not_swc,,,
openzeppelin,Fei_Protocol,Anyone can steal all the TRIBE tokens from the reward pool,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,ETH can get stuck in the GenesisGroup contract,Unexpected Ether Balance,Function Level,80-87,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L80-L87
openzeppelin,Fei_Protocol,Anyone can partially bypass the FEI sell penalty to earn a profit,not_swc,,,
openzeppelin,Fei_Protocol,Users can claim unreleased rewards or have their funds locked,not_swc,,,
openzeppelin,Fei_Protocol,Anyone with enough liquidity to reach the maxGenesisPrice can make profit from genesis,not_swc,,,
openzeppelin,Fei_Protocol,Users participating in Genesis can get fewer FEI and TRIBE than expected,not_swc,,,
openzeppelin,Fei_Protocol,Outdated oracle prices being used throughout the protocol,not_swc,,,
openzeppelin,Fei_Protocol,Incentive to support the peg decays with volatility,not_swc,,,
openzeppelin,Fei_Protocol,Malicious actors can lock all FEI and TRIBE in the GenesisGroup,Unprotected SELFDESTRUCT Instruction,Function Level,89-103,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L89-L103
openzeppelin,Fei_Protocol,Inverse price fetched from Uniswap,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors in Roots library reduce FEI received from bonding curve,Integer Overflow and Underflow,Function Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/Roots.sol#L7-L18
openzeppelin,Fei_Protocol,Incorrect proposal and quorum thresholds for voting,not_swc,,,
openzeppelin,Fei_Protocol,ETH and FEI can get locked in EthUniswapPCVDeposit,not_swc,,,
openzeppelin,Fei_Protocol,Incentive does not initialize when Ether depreciates,not_swc,,,
openzeppelin,Fei_Protocol,Approved addresses can forfeit user rewards,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,Authorized burners can burn FEI balances without an amount restriction,not_swc,,,
openzeppelin,Fei_Protocol,Core contract cannot allocate all Tribe tokens,Requirement Violation,Line Level,41,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L41
openzeppelin,Fei_Protocol,Multiple outdated Solidity versions in use,Outdated Compiler Version,Contract Level,all,
openzeppelin,Fei_Protocol,Not using SafeMath and SafeCast,Integer Overflow and Underflow,Line Level,"61/172, 173/34/144, 145","https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/LinearTokenTimelock.sol#L61, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L172-L173, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pcv/PCVSplitter.sol#L34, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L144-L145"
openzeppelin,Fei_Protocol,queueTransaction does not check transaction value,not_swc,,,
openzeppelin,Fei_Protocol,Transfers are not checked for success,Unchecked Call Return Value,Line Level,"120, 134",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol
openzeppelin,Fei_Protocol,UniswapOracle does not allow overflow,not_swc,,,
openzeppelin,iExec_RLC_Token,Use of send,not_swc,,,
openzeppelin,iExec_RLC_Token,Usage of magic constants,not_swc,,,
openzeppelin,iExec_RLC_Token,Bug Bounty,not_swc,,,
openzeppelin,iExec_RLC_Token,Fail early and loudly,not_swc,,,
openzeppelin,iExec_RLC_Token,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Timestamp usage,Block values as a proxy for time,Line Level,Link1：69、116、145、295；Link2：37、49,"Link1：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol 
Link2：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol"
openzeppelin,iExec_RLC_Token,Unused isMaxCapReached,Code With No Effects,Function Level,209-211,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Avoid duplicated code,Code With No Effects,Function Level,"62-67, 69-76, 79-81, 83-87, 97-99",https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol#L62
openzeppelin,iExec_RLC_Token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol
openzeppelin,Opyn_Contracts,Not using SafeMath,Integer Overflow and Underflow,Line Level,"509, 582",https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L509
openzeppelin,Opyn_Contracts,Malicious users could steal from the OptionsContract contract,not_swc,,,
openzeppelin,Opyn_Contracts,Liquidation process could push the protocol into insolvency,not_swc,,,
openzeppelin,Opyn_Contracts,Malicious Admin can steal from the protocol,not_swc,,,
openzeppelin,Opyn_Contracts,Potential race condition with Repo ownership transfer,Transaction Order Dependence,Function Level,429-433,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L429-L433
openzeppelin,Opyn_Contracts,Lack of event emissions after sensitive changes,not_swc,,,
openzeppelin,Opyn_Contracts,Not following check-effect-interaction pattern,Reentrancy,Line Level,304-305,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L304-L305
openzeppelin,Opyn_Contracts,Different behavior between ETH and Tokens collateral,not_swc,,,
openzeppelin,Opyn_Contracts,Cannot update exponent after deployment,not_swc,,,
openzeppelin,Opyn_Contracts,Miscalculated maxCollateralLiquidatable in liquidate function,not_swc,,,
openzeppelin,Opyn_Contracts,Confusing time frame for actions,not_swc,,,
openzeppelin,Opyn_Contracts,Repo owner could lose collateral if leftover oTokens are not burnt before the option expires,not_swc,,,
openzeppelin,Opyn_Contracts,Factorize Repo ownership into modifier,not_swc,,,
openzeppelin,Opyn_Contracts,Unbalanced ETH operations,not_swc,,,
openzeppelin,Opyn_Contracts,Unbounded loops,DoS With Block Gas Limit,Function Level,321-325,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L321-L325
openzeppelin,PoolTogether,Supply is manipulable,not_swc,,,
openzeppelin,PoolTogether,Deposit uses operator collateral,not_swc,,,
openzeppelin,PoolTogether,Incomplete ERC777 functionality,not_swc,,,
openzeppelin,PoolTogether,Missing return value,Unchecked Call Return Value,Function Level,160-167,https://github.com/pooltogether/pooltogether-pod-contracts/blob/8041b3dc72efd02b94d49fb37b9b308603af5ce/contracts/ScheduledBalance.sol#L160-L167
openzeppelin,PoolTogether,Misleading comments,not_swc,,,
openzeppelin,PoolTogether,Complicated Code,not_swc,,,
openzeppelin,PoolTogether,[H01] Users can influence the lottery winner,Transaction Order Dependence,Line Level,321,https://github.com/pooltogether/pooltogether-contracts/tree/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#L321
openzeppelin,PoolTogether,Users can influence the lottery winner,Transaction Order Dependence,Function Level,306-309、321-372,https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol
openzeppelin,PoolTogether,Winners can stall the system,not_swc,,,
openzeppelin,PoolTogether,Double counting rewards,not_swc,,,
openzeppelin,PoolTogether,Bypassing token events,not_swc,,,
openzeppelin,PoolTogether,Deviation from ERC777 specification,not_swc,,,
openzeppelin,PoolTogether,Only direct deposits are pausable,not_swc,,,
openzeppelin,PoolTogether,Double spending ERC20 allowance,not_swc,,,
openzeppelin,PoolTogether,Unexpected Side Effects,not_swc,,,
openzeppelin,PoolTogether,Conflated balances,not_swc,,,
openzeppelin,PoolTogether,Misleading comments and variable names,not_swc,,,
openzeppelin,PoolTogether,Excessive code coupling,not_swc,,,
openzeppelin,PoolTogether,Unchecked casting from uint256 to int256,Integer Overflow and Underflow,Line Level,"411, 412",https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#411-412
openzeppelin,PoolTogether,Unrestricted token ownership,not_swc,,,
openzeppelin,PoolTogether,Inconsistent imports,not_swc,,,
openzeppelin,PoolTogether,Default Visibility,State Variable Default Visibility,Line Level,"197-212, 24-25","https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol, https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/RecipientWhitelistERC777Pool.sol"
openzeppelin,PoolTogether,Reimplementing Pausable,not_swc,,,
openzeppelin,PoolTogether,Repeated code,not_swc,,,
openzeppelin,PoolTogether,Random upper bound of zero,not_swc,,,
openzeppelin,PoolTogether,Semantic Overloading,not_swc,,,
openzeppelin,PoolTogether,Unnecessary casting of drawIndex,not_swc,,,
openzeppelin,PoolTogether,Unnecessary SafeMath sum operation,not_swc,,,
openzeppelin,PoolTogether,Instances of uint,not_swc,,,
openzeppelin,PoolTogether,Naming,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary setting of the active_recovery_end_time variable,Presence of unused variables,Line Level,"67, 146",https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#67
openzeppelin,Recoverable_Wallet,Contract does not conform to the ERC1820 specification,not_swc,,,
openzeppelin,Recoverable_Wallet,Race condition may result from compromised recovery address,Transaction Order Dependence,Function Level,86-116,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#86-116
openzeppelin,Recoverable_Wallet,Ownership transfer cancellation can be front-run,Transaction Order Dependence,Function Level,38-55,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#38-55
openzeppelin,Recoverable_Wallet,Recovery cancellation can be front-run,Transaction Order Dependence,Function Level,97-125,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#97-125
openzeppelin,Recoverable_Wallet,uint256/uint16 type mismatch,not_swc,,,
openzeppelin,Recoverable_Wallet,Mixed usage of the recovery and ownership transfer systems,not_swc,,,
openzeppelin,Recoverable_Wallet,Obscure error message provided upon contract creation failure,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary call to reset_recovery() in constructor,Code With No Effects,Line Level,80,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#80
openzeppelin,Recoverable_Wallet,Duplicate code in the finish_recovery() function,Code With No Effects,Line Level,119,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#119
openzeppelin,Recoverable_Wallet,False comment in the start_recovery() function,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be started while another is underway,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be cancelled before one is underway,Transaction Order Dependence,Function Level,44-48,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#44-48
openzeppelin,Recoverable_Wallet,Overloaded functionality of the start_recovery() function,not_swc,,,
openzeppelin,UMA,Bond penalty may not apply,not_swc,,,
openzeppelin,UMA,Lack of event emission after sensitive actions,not_swc,,,
openzeppelin,UMA,Functions with unexpected side-effects,not_swc,,,
openzeppelin,UMA,Long and complex functions,not_swc,,,
openzeppelin,UMA,Complex Repay Function,not_swc,,,
openzeppelin,UMA,Current config not updated,not_swc,,,
openzeppelin,UMA,Emergency shutdown defined at the wrong level,Incorrect Inheritance Order,Function Level,508-516,https://github.com/UMAprotocol/protocol/blob/c452750a073488aa9b7caa86bb6206396412dcf9/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L508-L516
openzeppelin,UMA,Event missing emit keyword,not_swc,,,
openzeppelin,UMA,Inconsistent hasPrice determination,not_swc,,,
openzeppelin,UMA,Incorrect error message,not_swc,,,
openzeppelin,UMA,Misleading comments,not_swc,,,
openzeppelin,UMA,Missing NatSpec comments,not_swc,,,
openzeppelin,UMA,Functions not failing early,not_swc,,,
openzeppelin,UMA,Propose or Dispute a price from the zero address,not_swc,,,
openzeppelin,UMA,Mixed testing and production code,not_swc,,,
openzeppelin,UMA,Approximate compounding,not_swc,,,
openzeppelin,UMA,Consider ERC777 tokens,not_swc,,,
openzeppelin,UMA,Incorrect filename,not_swc,,,
openzeppelin,UMA,Naming issues hinder code understanding and readability,not_swc,,,
openzeppelin,UMA,Not using the immutable keyword,Outdated Compiler Version,Line Level,95,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualLiquidatable.sol#L95
openzeppelin,UMA,Redundant code and unnecessary complex calculations,Code With No Effects,Line Level,494,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/oracle/implementation/OptimisticOracle.sol#L494
openzeppelin,UMA,TODOs in code,not_swc,,,
openzeppelin,UMA,Typographical errors,not_swc,,,
openzeppelin,UMA,Unnecessary imports,Code With No Effects,Line Level,16,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L16
openzeppelin,UMA,Unnecessary type cast,Code With No Effects,Line Level,102,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualCreator.sol#L102
openzeppelin,WeTrust_ROSCA_contract_code,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Be careful with integer division,Code With No Effects,Line Level,288、316、341、381、389,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Use of send,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Usage of magic constants,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Bug Bounty,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,totalFees will always be 0 on LogFundsWithdrawal,Code With No Effects,Line Level,495、502,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Naming suggestions,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Timestamp usage,Block values as a proxy for time,Line Level,198、230、258、470,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Avoid duplicated code,Code With No Effects,Function Level,"441-451, 406-418",https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol#L441
openzeppelin,WeTrust_ROSCA_contract_code,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
Quantstamp,Merit Circle,Write to Arbitrary Storage Location,not_swc,,,
Quantstamp,Merit Circle,Use of Insecure Casting Operations,Integer Overflow and Underflow,Function Level,50-53，55-58,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,62， 116， 129， 122,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,25,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/TokenSaver.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,"81, 42",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Flash Loan Vulnerability,not_swc,,,
Quantstamp,Merit Circle,Maximum Approve,not_swc,,,
Quantstamp,Merit Circle,Unlocked Pragma,Floating Pragma,Contract Level,all,
Quantstamp,Merit Circle,Privileged Roles and Ownership,not_swc,,,
Quantstamp,Merit Circle,Missing Input Validation,not_swc,,,
Quantstamp,Merit Circle,Events Not Emitted on State Change,not_swc,,,
Quantstamp,Merit Circle,View.fetchData() Always Calling getMultiplier(0),not_swc,,,
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,45-82,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/View.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,"110-142, 144-146",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,90-94,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/TimeLockPool.sol
Quantstamp,Merit Circle,Ignored Failed Transaction,not_swc,,,
Quantstamp,MetaVault V2,Curve 3pool Imbalance Attack,not_swc,,,
Quantstamp,MetaVault V2,Integer Overflow/ Underflow,Integer Overflow and Underflow,Function Level,486-506,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L486-L506
Quantstamp,MetaVault V2,Strategy caps are not always enforced,not_swc,,,
Quantstamp,MetaVault V2,slippage possible,not_swc,,,
Quantstamp,MetaVault V2,Epochs can overlap affecting getMultiplier,not_swc,,,
Quantstamp,MetaVault V2,Wrong address could be used instead of stable-coin,not_swc,,,
Quantstamp,MetaVault V2,Adding and removing strategies is error prone,not_swc,,,
Quantstamp,MetaVault V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Line Level,23,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L23
Quantstamp,MetaVault V2,Missing input validation,not_swc,,,
Quantstamp,MetaVault V2,Sensitive functions do not emit any events,not_swc,,,
Quantstamp,MetaVault V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,213,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVaultHarvester.sol#L213
Quantstamp,MetaVault V2,Implicit assumptions,not_swc,,,
Quantstamp,MetaVault V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,MetaVault V2,Unchecked Return Value,Unchecked Call Return Value,Function Level,245-267,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVault.sol#L245-L267
Quantstamp,MetaVault V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/interfaces/Aave.sol#L2
Quantstamp,MetaVault V2,Defense in depth to avoid reentrancy,not_swc,,,
Quantstamp,RariCapital V2,Inaccurate token prices,not_swc,,,
Quantstamp,RariCapital V2,Incorrect Rari Governance Token amount,not_swc,,,
Quantstamp,RariCapital V2,Uninitialized _ethUsdPriceFeed,Uninitialized Storage Pointer,Line Level,30,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundPriceConsumer.sol#L30
Quantstamp,RariCapital V2,Divergent mirrored states,not_swc,,,
Quantstamp,RariCapital V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Function Level,145-170,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L145-L170
Quantstamp,RariCapital V2,Unchecked Return Value,not_swc,,,
Quantstamp,RariCapital V2,Unfinished token upgrades,not_swc,,,
Quantstamp,RariCapital V2,Incorrect value for supported currencies,not_swc,,,
Quantstamp,RariCapital V2,Amount in pools may be incorrect,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation,not_swc,,,
Quantstamp,RariCapital V2,Misaligned comments and implementation,not_swc,,,
Quantstamp,RariCapital V2,ETH/USD prices could be stale,not_swc,,,
Quantstamp,RariCapital V2,Off-by-one error,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation (2),not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address,not_swc,,,
Quantstamp,RariCapital V2,Dangerous cast from uint256 to int256,not_swc,,,
Quantstamp,RariCapital V2,Alance Double-Spend Exploit,not_swc,,,
Quantstamp,RariCapital V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/lib/pools/CompoundPoolController.sol#L2
Quantstamp,RariCapital V2,Experimental features should not be used on Mainnet deployments,not_swc,,,
Quantstamp,RariCapital V2,Checks-Effects-Interactions Pattern,Reentrancy,Function Level,750-767,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundManager.sol#L750-L767
Quantstamp,RariCapital V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,603,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L603
Quantstamp,RariCapital V2,Duration of RGT distribution may be different from 60 days,not_swc,,,
Quantstamp,RariCapital V2,Increased loss of precision due to dividing before multiplication,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership (2),not_swc,,,
Quantstamp,RariCapital V2,Unexpected pool,not_swc,,,
Quantstamp,RariCapital V2,Single point of failure for price feeds,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address (2),not_swc,,,
Quantstamp,RariCapital V2,Potential funds stuck in contract,not_swc,,,
Quantstamp,RariCapital V2,Rounding error,not_swc,,,
Quantstamp,RariCapital V2,Rari Governance Tokens can still be claimed after distribution ends,not_swc,,,
Quantstamp,RariCapital V2,Upgrading Fund Controller can be done when fund is enabled,not_swc,,,
Quantstamp,RariCapital V2,Expired cache,not_swc,,,
Quantstamp,RariCapital V2,Faulty dev environment might not print some enum and struct layout errors,not_swc,,,
Quantstamp,RariCapital V2,Missing input validation,not_swc,,,
Quantstamp,RariCapital V2,Hardcoded dependency contracts,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Setter function missing event,not_swc,,,
Quantstamp,RariCapital V2,Unclear addPool omission in initialize,not_swc,,,
Quantstamp,RariCapital V2,No example of token distribution implementation is presented,not_swc,,,
Quantstamp,RariCapital V2,Controller unable to pause specific stablecoins,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,105,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L105
QuillAudits,Binamon Energy Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,187,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L187
QuillAudits,Binamon Energy Smart Contract,Approve Race,Transaction Order Dependence,Function Level,105-109,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code
QuillAudits,Binamon Energy Smart Contract,Missing Address Validation,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Lack of MultiSig Transactions,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,193,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L193
QuillAudits,Binamon Energy Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB021C#code
QuillAudits,Binamon Z1 Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,104,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L104
QuillAudits,Binamon Z1 Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,168,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L168
QuillAudits,Binamon Z1 Smart Contract,Approve Race,Transaction Order Dependence,Function Level,104-108,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Missing Address Validation,not_swc,,,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,174,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L174
QuillAudits,Binamon Z1 Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Bond Appetit-Bond Appetit,Potential safeApprove blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrongly calculated ETH amount to transfer,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential re-entrancy problem,Reentrancy,Line Level,227,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/profit/ProfitSplitter.sol#L227
QuillAudits,Bond Appetit-Bond Appetit,Blocked LP tokens on contract,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed depositary check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Invalid depositary add/remove logic,Code With No Effects,Line Level,49-70,https://github.com/bondappetit/bondappetit-protocol/blob/88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/depositary/AgregateDepositaryBalanceView.sol#L49-L70
QuillAudits,Bond Appetit-Bond Appetit,Wrongly used safeApprove,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Budget payment blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential integer overflow,Integer Overflow and Underflow,Line Level,147,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol#L147
QuillAudits,Bond Appetit-Bond Appetit,Potential div by zero error,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Vesting account duplication,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unchecked vesting contract address,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrong reward calculation of balance < 100,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed zero share check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential custodial asset collateral incorrect signatures,Lack of Proper Signature Verification,Line Level,88,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/depositary/RealAssetDepositaryBalanceView.sol#L88
QuillAudits,Bond Appetit-Bond Appetit,Mixed msg.sender and _msgSender(),not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Too flexible configuration,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potentially wrong-sized access control list,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Probably missed input check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unneeded calculations,Code With No Effects,Line Level,187,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Market.sol#L187
QuillAudits,Bond Appetit-Bond Appetit,Total shares cache,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential collateralization imbalance,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Runtime-configured contract ownership,not_swc,,,
QuillAudits,DOXY - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Unoptimized variable declarations,State Variable Default Visibility,Line Level,282-284,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Struct and address declarations without usage,Code With No Effects,Line Level,"284, 312-315",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc10F#code
QuillAudits,DOXY - v1.3,Unnecessary gas consumption due to improper variable declaration,Code With No Effects,Line Level,809-818,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc11F#code
QuillAudits,DOXY - v1.3,Variable declarations without concrete visibility,State Variable Default Visibility,Line Level,270,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc12F#code
QuillAudits,DOXY - v1.3,Loose timeLimit validation for sell transactions on pancakeSwap,Lack of Proper Signature Verification,Line Level,"497-502, 511-516",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc13F#code
QuillAudits,DOXY - v1.3,Ineffiecient function declaration,Function Default Visibility,Line Level,"373-381, 393-411, 413-430, 432-443, 445-460, 679-695, 754-756, 758-764, 824-826, 828-830, 832-834, 836-838, 881-883, 972-974, 976-978, 980-982, 984-986, 988-990, 998-1000, 1002-1004, 1010-1012, 1014-1016, 1077-1079",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc14F#code
QuillAudits,DOXY - v1.3,Mistyped argument names in functions,Typographical Error,Line Level,"918, 928, 938, 948, 958, 968",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc15F#code
QuillAudits,DOXY - v1.3,Too many digits,Typographical Error,Line Level,"339, 488, 500, 514, 658, 661, 780, 781, 782, 783, 784, 785, 821, 261, 262",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc16F#code
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect calculation of borrowed amount,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible remove of necessary adapter,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect change of state,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,creditManager isn't checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Uncounted fees in USDT,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible loss of assets by mistake,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Broken account must be deleted,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of bad account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary allowance,Code With No Effects,Line Level,130,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L130
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect usage of function returned value,Unchecked Call Return Value,Function Level,121-157,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L121-L157
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect taking out of tail account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect minting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidity removing,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Calculation can be incorrect,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidation of broken account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Using tokens with whitelist function,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Looping a linked list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,No checking of element properties when returning it to the list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,priceFeeds can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Work with incorrect decimals,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary inheritance from Proxy,Code With No Effects,Line Level,17,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/integrations/yearn/YearnPriceFeed.sol#L17
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect input parameters,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Too many rights for configurator,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Length of input arrays not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,path length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,wethGateway can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account can be opened for zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Malicious user can pay less to pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer to zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Usage of ERC777 token can block liquidation,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect require,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible incorrect setting value for maxLeverageFactor,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,User can approve any token,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect length of input data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,amount must be > 1,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,paths[i] length not checked,Write to Arbitrary Storage Location,Line Level,828,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L828
QuillAudits,GearBox Protocol-GearBox Protocol,Index not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible reentrancy,Reentrancy,Function Level,56；55、112；49、102、152、196；75、126；107、128、159、181；242,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L56；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L55；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L112；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L49；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L152；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L196；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L75；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L126；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L107；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L128；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L159；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L181；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L242
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect parameter passed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Function doesn't exist,Code With No Effects,Line Level,100、116,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L100；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L116
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect function name,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,params.path length not checked,Write to Arbitrary Storage Location,Line Level,102、200,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L200
QuillAudits,GearBox Protocol-GearBox Protocol,Balance not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible assets loss,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,masterCreditAccount remains uninitialized,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account remains connected to previous credit manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary list initialization,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,head can't be taken out,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect update of list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible duplication of data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleProof length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unable to remove pool or manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,signatory not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,delegatee not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,expectedLiquidityLimit can be equal to zero,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow can occur,Integer Overflow and Underflow,Line Level,145,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L145
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,_timestampLU can be equal to 0,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Forbidden manager never can use pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Address not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow,Integer Overflow and Underflow,Line Level,593-594,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L593-L594
QuillAudits,GearBox Protocol-GearBox Protocol,User can't repay with force flag,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Add condition,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Upgradeable creditManager params,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary check,Code With No Effects,Line Level,156,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L156
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary update,Code With No Effects,Line Level,192,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L192
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary initialization,Code With No Effects,Line Level,297；72；107,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L297；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/DataCompressor.sol#L72；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearToken.sol#L107
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary print to console,Code With No Effects,Line Level,343,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L343
QuillAudits,GearBox Protocol-GearBox Protocol,User can receive only ETH,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Tokens can be locked on account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Print to console,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary library for user types,Code With No Effects,Line Level,1-113,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/libraries/data/Types.sol
QuillAudits,GearBox Protocol-GearBox Protocol,wethAddress can be const,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary safeMath,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect comment,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Similar functions are used,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleRoot can't be updated,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,All functions can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Visibility not set,State Variable Default Visibility,Line Level,16、20,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L16；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L20
QuillAudits,GearBox Protocol-GearBox Protocol,Event not emitting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Range for variables not set,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Two variables can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary setting on each mint,Code With No Effects,Line Level,14,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearNFT.sol#L14
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary usage of variable,Code With No Effects,Line Level,191,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L191
QuillAudits,GearBox Protocol-GearBox Protocol,Parameters not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,The technical default of liquidity pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Undesired side effects of address reusing,not_swc,,,
QuillAudits,Glonk Smart Contract,Contract gains to non-withdrawable BNB via the swapAndLiquify function,not_swc,,,
QuillAudits,Glonk Smart Contract,Centralized risk in addLiquidity,not_swc,,,
QuillAudits,Glonk Smart Contract,Description: Costly Loop,not_swc,,,
QuillAudits,Glonk Smart Contract,Outdated Compiler Version,Outdated Compiler Version,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,"Potential use of ""block.timestamp"" as source of randomness",Weak Sources of Randomness from Chain Attributes,Line Level,800-815,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,Glonk Smart Contract,Prefer external to public visibility level,not_swc,,,
QuillAudits,Glonk Smart Contract,Using the approve function of the ERC-20 token standard,Transaction Order Dependence,Function Level,509-512,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,LTO Network-Token Sale,"Generation of two events in the form emit Transfer(address(0), receiver address, amount);should be added",not_swc,,,
QuillAudits,LTO Network-Token Sale,The recipient address specified in the Transfer event does not match factual address of the recipient,not_swc,,,
QuillAudits,LTO Network-Token Sale,In case _intermediate is being used at the moment by some user addIntermediateAddress call will cause all token transfers to this user to fail to reach them.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"totalSupply_value won’t be properly updated in case of transferFrom function usage, which is inherited from the StandardToken.",not_swc,,,
QuillAudits,LTO Network-Token Sale,There are mechanics which allows users to transfer tokens from some predefined addresses (enumerated in intermediateAddresses) to the bridge balance.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"Users sending ether from contracts which default function performs nontrivial computations (e.g. writing value to a new storage variable) won’t be able to receive their tokens, while the project won’t be able to receive transferred ether. This is caused by limited gas stipend of the transfer function.",Insufficient Gas Griefing,Line Level,215,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L215
QuillAudits,LTO Network-Token Sale,It’s recommended using withdrawal pattern to send change and to untie sending of change from other actions.,not_swc,,,
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,223,https://github.com/ltonetwork/lto-erc20-token/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L223
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,227,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L227
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,233,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L233
QuillAudits,LTO Network-Token Sale,"An attacker can send some value of ether in the first transaction, receive maximum bonus and then send 99 transactions of minimal value minimumAmount, depriving other token sale participants of their bonuses.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Individual cap mechanics are subject to Sybil attack. An user can distribute his N ethers to uint(N / maximumCapAmount) + 1 distinct addresses, and perform purchase from each of these addresses, effectively bypassing maximumCapAmount limit.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"The burning of unsold tokens was mentioned by the client. However, in the contracts code there is no sign of such mechanics and LTOToken is not burnable.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Generation of an event in the form emit Transfer(address(0), _bridgeAddress, _bridgeSupply);should be added. Otherwise, some client software won’t recognize the arrival of the tokens to the _bridgeAddress.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using SafeMath.sub here because this code fragment has a high probability of underflow error.,Integer Overflow and Underflow,Line Level,60,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOToken.sol#L60
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"This branch is unachievable in practise (it requires ~5e14 ether to achieve), we recommend replacing it with assert(false);.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Expression totalWannaBuyAmount == 0 here is unachievable, we recommend removing it from if-operator and introduce assert(totalWannaBuyAmount > 0); instead.",Code With No Effects,Line Level,144,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L144
QuillAudits,LTO Network-Token Sale,"In startSale function it would be helpful to ensure that token balance of the contract is equal to totalSaleAmount. Otherwise, if the token balance is less than totalSaleAmount some ether will be locked in the contract forever.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Right after deployment of the contract isEnded function will return true. This won’t cause any troubles in this version of the code, but it’s better to return false in case the sale was never started ",not_swc,,,
QuillAudits,LTO Network-Token Sale,"It’s better to use the ethDecimals constant, instead of the 1 ether value to prevent possible inconsistencies.",not_swc,,,
QuillAudits,LTO Network-Token Sale,Condition <= is excessive and can be replaced with a strict comparison (<),not_swc,,,
QuillAudits,LTO Network-Token Sale,two processes can be separated and gas spendings by the project can be minimized,not_swc,,,
QuillAudits,LTO Network-Token Sale,"We recommend creating the explicit view function isSaleInitialized and use it here to prevent double initialization, as well as throughout isStarted, isEnded and other state querying functions.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend checking the result of token transfer call.,Unchecked Call Return Value,Line Level,235,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L235
QuillAudits,LTO Network-Token Sale,Tokens which were accidentally sent to the bridge address could not be recovered. We recommend adding require(to != bridgeAddress); check.,not_swc,,,
QuillAudits,LTO Network-Token Sale,If value is expected to be greater than bridgeBalance in some cases we recommend adding check require(value <= bridgeBalance);. ,not_swc,,,
QuillAudits,LTO Network-Token Sale,The sum of balances is not equal to totalSupply. This behavior could be unexpected for some tools or clients.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of address parameter value in contract constructor,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of the address parameter value in function before using this parameter in access modifiers.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Ability to change the value of a private variable from another contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function calculation result is not processed,Unchecked Call Return Value,Line Level,64,https://github.com/iearn-finance/yearn-vaults/blob/v0.1.3/contracts/BaseStrategy.sol#L164
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Safe math is not used,Integer Overflow and Underflow,Line Level,338,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L338
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function description differs from implementation.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Duplicate code,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Variable declared but not used,Presence of unused variables,Line Level,273,https://github.com/iearn-finance/yearn-vaults/blob/54db126821c4d7aaaf5839be935cecb9b1bf088b/contracts/BaseStrategy.sol#L273
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No event registration when changing the parameters of the contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Exact block timestamps usage.,Block values as a proxy for time,Line Level,320,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L320
QuillAudits,Yearn Finance-Yearn Protocol V1,Unsafe implementation of arithmetic operations,Integer Overflow and Underflow,Line Level,787,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L787
QuillAudits,Yearn Finance-Yearn Protocol V1,Using math operations without the SafeMath safe library,Integer Overflow and Underflow,Line Level,912,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L912
QuillAudits,Yearn Finance-Yearn Protocol V1,Usage of an increment when issuing a token without the Counters safe library,Integer Overflow and Underflow,Line Level,911,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L911
QuillAudits,Yearn Finance-Yearn Protocol V1,Function calculation result is not processed,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `withdrawalFee/performanceFee/strategistReward/ keepCRV` values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `min` in yVault,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Check strategy existence for given token.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use modifiers to check transaction authorization as in the yInsure.sol contract,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use constants.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use human readable/understandable errors,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Unused struct,Code With No Effects,Line Level,561-595、610-627,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L561-L595；https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L610-L627
QuillAudits,Yearn Finance-Yearn Protocol V1,"The line is too long, it’s better to separate to a multiline.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,We recommend adding reentrancy guards to all public methods which call other contracts just to avoid possible issues.,Reentrancy,Function Level,89、142,https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L89；https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L142
QuillAudits,Yearn Finance-Yearn Protocol V1,Little bit of wrong line alignment,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,"_fee/_keepCRV potentially can have zero value, so we recommend checking that case to save gas.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""payable""",Code With No Effects,Line Level,133,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L133
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""Address""",Code With No Effects,Line Level,21,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L21
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused internal constant weth,Presence of unused variables,Line Level,24,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L24
QuillAudits,Yearn Finance-Yearn Strategy SSB,sellRewards() threshold values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Same value is calculated in every loop iteration,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Value of memory variable could be used instead of storage variable,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Malfunction on managed pools,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused receive() function,Code With No Effects,Line Level,422,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L422
QuillAudits,Yearn Finance-Yearn Strategy SSB,Strategy's outstanding debt is not accounted in adjustPosition(),not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Balancer LP token is not in protected tokens list,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Condition for proposal approval,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Event ProposalExecuted,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Non-atomic batch execution,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validation of proposal hashes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in proposal(),not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Changes of approved vaults during voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Asynchronous updates of voting power in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Self delegation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Duplicated leaves in MerkleRewards trees,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential flash loan vulnerability,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Upgradable proxy pattern for VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Underflow in History.sol,Integer Overflow and Underflow,Line Level,224,https://github.com/element-fi/elf-council/blob/351a7183d4b64dd5f53a66ba4609cef1da1ce951/contracts/libraries/History.sol#L224
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validity of voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Reentrancy vulnerability,Reentrancy,Function Level,237-276,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/CoreVoting.sol#L237-L276
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Griefing attacks for high-profile delegates,DoS With Block Gas Limit,Function Level,277-299,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/libraries/History.sol#L277-L299
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Double execution vulnerability in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Differentiation of identical Timelock proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unchecked generic calls in Treasury,Unchecked Call Return Value,Line Level,72,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/features/Treasury.sol#L72
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Mapping quorums,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Recycling garbage proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Packed storage update in LockingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code readability in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Cancellation of votes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Systematic sanity checks for explicit type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unsafe type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Redetermination of membership in GSCVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent owner initialization in CoreVoting,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent Solidity version requirements,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity check for proposal IDs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent storage cleanup in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code duplication in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation for delegatee addresses,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for Merkle proofs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential inconsistency of interfaces,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Typo in function names,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,There are two instances of multiplication occurring on the result of a division.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,"The contract inherits the functionality of ERC20Capped, but this functionality is not used at all as there",Code With No Effects,Line Level,938,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevomonToken.sol
Solidity_Finance,RevomonVR Smart Contract, The owner or PoolManager can set the total reward balance of each pool to any value at any time without contributing any Revo tokens.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the LockRevoToken contract, the increaseLockAmount() function incorrectly uses a transfer() on
line 487, when intending to use a transferFrom() in order to transfer tokens from the msg.sender to the contract. In the current state, no tokens are moved at all, as the tokens are being transferred from the contract to the contract.",Code With No Effects,Line Level,487,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoLockStages.sol
Solidity_Finance,RevomonVR Smart Contract,The RevoPoolManager file is saved as a (.ts) Typescript file when it should be a .sol (Solidity) file.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, Expensive looping is used when removing pool addresses which does not account for duplicates that may be in the list.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, The contract uses an outdated version of ReentrancyGuard which is very expensive in terms of gas consuption.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the RevoNFT contract, the local variable countNotEmpty is never used within the getTokensDbIdByOwnerAndCollection() function.",Presence of unused variables,Line Level,1664,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoNFT.sol
Solidity_Finance,RevomonVR Smart Contract,"The getUserPoolReward() function gets the user's tier data, but this is not necessary since it is not used within this function.",Presence of unused variables,Line Level,342,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoStaking.sol#L342
Solidity_Finance,RevomonVR Smart Contract,"Several functions are declared public, but are never called internally. Several state variables can never be modified, but are not declared constant.",not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," Several functions are declared public, but are never called internally.",not_swc,,,
Trail_of_Bits,0x-protocol,WETH9 transferFrom often does not follow spec,not_swc,,,
Trail_of_Bits,0x-protocol,Zero fee orders are possible if a user performs transactions with a zero gas,not_swc,,,
Trail_of_Bits,0x-protocol,Potential overflow in transactionId allowing arbitrary execution of transactions by a malicious owner,Integer Overflow and Underflow,Line Level,302,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWallet.sol#L302
Trail_of_Bits,0x-protocol,Potential overflow in MultiSigWalletWithTimelock when calculating whether the timelock has passed,Integer Overflow and Underflow,Line Level,54-57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWalletWithTimeLock.sol#L54-L57
Trail_of_Bits,0x-protocol,Fee refundsincentivize transaction centralization through market makers,not_swc,,,
Trail_of_Bits,0x-protocol,Market makers have a reduced cost for performing front-running attacks,not_swc,,,
Trail_of_Bits,0x-protocol,cancelOrdersUpTo can be used to permanently block future orders,not_swc,,,
Trail_of_Bits,0x-protocol,setSignatureValidatorApproval race condition may be exploitable,Transaction Order Dependence,Line Level,85,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinSignatureValidator.sol#L85
Trail_of_Bits,0x-protocol,Batch processing of transaction execution and order matching may lead to exchange griefing,DoS with Failed Call,Function Level,426-543,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinMatchOrders.sol#L426-543
Trail_of_Bits,0x-protocol,Lack of eventsforcritical operations,not_swc,,,
Trail_of_Bits,0x-protocol,Lack of validation in the makerAssetData and takerAssetData leadsto unexpected behavior,not_swc,,,
Trail_of_Bits,0x-protocol,Transferswith zero fee amountscan log arbitrary data in their feeAssetData,not_swc,,,
Trail_of_Bits,0x-protocol,MultiSigWallet does notcheck contract existence before call,not_swc,,,
Trail_of_Bits,0x-protocol,Specification-Code mismatch for AssetProxyOwner timelock period,not_swc,,,
Trail_of_Bits,0x-protocol,Rounding division errorscan accumulate over partial fills,Integer Overflow and Underflow,Line Level,57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange-libs/contracts/src/LibMath.sol#L57
Trail_of_Bits,0x-protocol,The Cobb–Douglasfunction is not properly documented and revertswith valid parameters,not_swc,,,
Trail_of_Bits,0x-protocol,Unclear documentation on howorder filling can fail,not_swc,,,
Trail_of_Bits,0x-protocol,"Potentialsingle point of failure for ""read-only-mode"" and ""catastrophic-failure-mode""",not_swc,,,
Trail_of_Bits,0x-protocol,ERC20 reverts during certain self-transfer,not_swc,,,
Trail_of_Bits,0x-protocol,_assertStakingPoolExists never returnstrue,not_swc,,,
Trail_of_Bits,0x-protocol,Callsto setParams may set invalid values and produce unexpected behavior in the staking contracts,not_swc,,,
Trail_of_Bits,0x-protocol,Malicious non-operator makercan decrease staking pool operatorshare,not_swc,,,
Trail_of_Bits,0x-protocol,Non-operator makerscan add or remove other makers,not_swc,,,
Trail_of_Bits,Opyn,Front-running a withdrawal operation can cause it to revert,Transaction Order Dependence,Line Level,256-263,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L256
Trail_of_Bits,Opyn,onERC721Received callback is never called when new tokens are minted or transferred,not_swc,,,
Trail_of_Bits,Opyn,Users can create vaults that cannot be liquidated,not_swc,,,
Trail_of_Bits,Opyn,Solidity compiler optimizations can be problematic,not_swc,,,
Trail_of_Bits,Opyn,Initialization function can be front-run,Transaction Order Dependence,Function Level,33-36,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/ShortPowerPerp.sol#L33-L36
Trail_of_Bits,Opyn,The computation of the normalization factor can fail,Integer Overflow and Underflow,Function Level,1102-1142,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol
Trail_of_Bits,Opyn,Lack of access controls allows anyone to deposit Uniswap tokens,Unprotected Ether Withdrawal,Function Level,344-351,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L344-L351
Trail_of_Bits,Opyn,Users can disrupt the bookkeeping of the strategy when it is deployed,DoS with Failed Call,Function Level,"330-337,436-460","https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L330-L337, https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L436-L460"
Trail_of_Bits,Opyn-Gamma-Protocol,Contracts   used   as   dependencies   do   not   track   upstream   changes,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,TradeCallee   does   not   validate   trade   orders,Authorization through tx.origin,Line Level,64,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/external/callees/TradeCallee.sol#L64
Trail_of_Bits,Opyn-Gamma-Protocol,Controller   _call   function   lacks   a   return   statement,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Adverse   market   conditions   can   eliminate   liquidation   incentives,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,MarginCalculator   defines   events   but   never   emits   them,Presence of unused variables,Line Level,78-84,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L78-L84
Trail_of_Bits,Opyn-Gamma-Protocol,callRestricted   is   disabled   by   default,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Architecture   can   be   simplified,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,"Short,   long,   collateral,   and   vault   data   structures   may   be   sparse   “arrays”",not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Error-prone operate function change rates are fullyc alculated only during withdrawals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Stablecoin value is assumed to be constant,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Numerous   internal   and   external   assumptions,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,intToUint   returns   absolute   values,Integer Overflow and Underflow,Function Level,71-94,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/libs/FixedPointInt256.sol#L71-L94
Trail_of_Bits,Opyn-Gamma-Protocol,getProceed   returns   absolute   value   of   required   collateral,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Non-ideal   handling   of   arithmetic,Integer Overflow and Underflow,Line Level,893-907,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L893-L907
Trail_of_Bits,Opyn-Gamma-Protocol,Unclear   configuration   values   standards,Integer Overflow and Underflow,Line Level,105,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L105
Trail_of_Bits,Opyn-Gamma-Protocol,Decimals   set   by   Yearn   pricer   do   not   reflect   changes   to   yToken   decimals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,yToken   exchange   rates   are   fully   calculated   only   during   withdrawals,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could indefinitely lock owner role,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could lead to incorrect event emission,not_swc,,,
Trail_of_Bits,UniswapV3Core,Anyone could steal pool tokens’ earned interest,not_swc,,,
Trail_of_Bits,UniswapV3Core,Whitepaper contains incorrect equation,not_swc,,,
Trail_of_Bits,UniswapV3Core,Incorrect comparison enables swapping and token draining at no cost,Unprotected Ether Withdrawal,Line Level,502-671,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Unbound loop enables denial of service,DoS With Block Gas Limit,Line Level,544-619,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Front-running pool’s initialization can lead to draining of liquidity provider’s initial deposits,Transaction Order Dependence,Line Level,194-212,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Swapping on zero liquidity allows for control of the pool’s price,not_swc,,,
Trail_of_Bits,UniswapV3Core,Failed transfer may be overlooked due to lack of contract existence check,Unchecked Call Return Value,Line Level,20,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/libraries/TransferHelper.sol
Trail_of_Bits,UniswapV3Core,"getNextSqrtPriceFromInput|Output can return a value outside of MIN_SQRT_RATIO, MAX_SQRT_RATIO",not_swc,,,
Blockchain Labs NZ,BitHero,Typo in function name setEarlyParicipantWhitelist,Typographical Error,Line Level,410,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/audit/contracts/CrowdsaleBase.sol#L410
Blockchain Labs NZ,BitHero,Avoid magic number,not_swc,,,
Blockchain Labs NZ,BitHero,Use .transfer instead of .send ,not_swc,,,
Blockchain Labs NZ,BitHero,Use explicit types for variables,not_swc,,,
Blockchain Labs NZ,BitHero,Using require is recommended over throw ,not_swc,,,
Blockchain Labs NZ,BitHero,Confusing logic in isBreakingCap function,not_swc,,,
Blockchain Labs NZ,BitHero,CrowdsaleBase has no Solidity version specified,Floating Pragma,Subcontract Level,1-464,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/CrowdsaleBase.sol
Blockchain Labs NZ,BitHero,Make visibility explicitly declared on functions,Function Default Visibility,Line Level,"137, 148, 159",https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/AllocatedCrowdsaleMixin.sol#L37，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L148，https://github.com/BlockchainLabsNZ/BitHeroToken/blob/60e3c926c780cc3f3e04f810216f8826c97b625c/contracts/Crowdsale.sol#L159
Blockchain Labs NZ,BitHero,Old versions of Solidity used,Outdated Compiler Version,Line Level,7,https://github.com/BlockchainLabsNZ/BitHeroToken/blob/master/DefaultFinalizeAgent.sol#L7
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Duplicated Calculations,Code With No Effects,Function Level,456-516,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L456-L516
BlockSec,blocksec_alpaca_v1.0_signed,Considering the Impact of Transaction Ordering Dependency,Transaction Order Dependence,Function Level,"268-324, 214-261","https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L214-L261, https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324"
BlockSec,blocksec_alpaca_v1.0_signed,Potential Precision Loss,Integer Overflow and Underflow,Line Level,"232,408,414",https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L232
BlockSec,blocksec_alpaca_v1.0_signed,Unreturned Values,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Initialization Parameters,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unlimited Withdraw Value,Unprotected Ether Withdrawal,Function Level,268-324,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L268-L324
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locking of Native Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Unchecked Price,Block values as a proxy for time,Line Level,70,https://github.com/alpaca-finance/bsc-alpaca-contract/blob/cb13e32fe5a4ba6f63b0235bd4624715592e4abe/contracts/8.10/protocol/DeltaNeutralVault.sol#L70
BlockSec,blocksec_alpaca_v1.0_signed,Potential Locked Tokens,not_swc,,,
BlockSec,blocksec_alpaca_v1.0_signed,Avoiding Inconsistency Checks in the Worker Contracts,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Access Out Of Bounds in the getBlockByTime Function,DoS with Failed Call,Function Level,118-142,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked Arrays in the claimRewardMany Function,DoS With Block Gas Limit,Line Level,270,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol#L270
BlockSec,blocksec_multichain_vemult_v1.0_signed,Check Zero Address In the ve.ownerOf Function,Delegatecall to Untrusted Callee,Line Level,491,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol
BlockSec,blocksec_multichain_vemult_v1.0_signed,Unchecked ERC-721 Callback Result,Unchecked Call Return Value,Line Level,679,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L679
BlockSec,blocksec_multichain_vemult_v1.0_signed,Improper Check for the Return Values of the transferFrom Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Incorrect Address Used in the _burn Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Burn Logic,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Handling of Epoch Time,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent End Time in the addEpochBatch Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Inconsistent Implementation of the Reward Calculation,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Implement Secure Logic for the transferAdmin Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Avoid Continuous Divisions in the _pendingRewardSingle Function,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Alleviate the Concern of Potential Centrality,not_swc,,,
BlockSec,blocksec_multichain_vemult_v1.0_signed,Follow the Checks-Effects-Interactions Pattern,Reentrancy,Line Level,1095-1098,https://github.com/anyswap/veMULTI/blob/bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/ve.sol#L1095-L1098
BlockSec,blocksec_stnd_v1.7_signed,The VaultManager contract does not handle the debt decimals when judging whether it is a valid CDP,Integer Overflow and Underflow,Line Level,162,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/VaultManager.sol#L162
BlockSec,blocksec_stnd_v1.7_signed,Uninitialized CDP vaults may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Incorrect usage to the function isValidCDP may incur infifinite MTR minted,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The local variables collateral and debt shadow the global ones,Shadowing State Variables,Line Level,77-78,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol#L77-L78
BlockSec,blocksec_stnd_v1.7_signed,Fees can not be distributed as expected due to the unreachable branch,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Potential mistakes,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Anyone can withdraw the liquidated collaterals,Unprotected Ether Withdrawal,Line Level,34,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/pools/liquidation/Liquidator.sol
BlockSec,blocksec_stnd_v1.7_signed,The check in the function liquidate can not be passed,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The global variable borrow is not be updated correctly,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Users’ collaterals may be locked in vaults,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,The potential reentrancy risk,Reentrancy,Function Level,178-209,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,The minting cap may be bypassed,Reentrancy,Function Level,216-226,https://github.com/digitalnativeinc/standard-evm/blob/d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol
BlockSec,blocksec_stnd_v1.7_signed,Price manipulation attacks against FeeRoll contract,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Finish the function mintFromVault,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Add more smart contracts in the audit list,not_swc,,,
BlockSec,blocksec_stnd_v1.7_signed,Make the codes and comments consistent,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],False approval mechanism in AaveDeposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Key should be private to enforce proper use,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Function can be exported to library,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],LendingPoolAddress can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Prevent contract to be initialized multiple times,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],SwapToPositionRatio function can be called by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],UniswapAddressHolder variables can be set by anyone,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Access protection is not working in modifier,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Swap is not safe for front-runs,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Logic to find best pool does not find best one,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing liquidity in Aave deposit,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on external security promises for ticks,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unsafe cast to int24,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Severe over-/underflow risk without SafeMath,Integer Overflow and Underflow,Line Level,131,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/IdleLiquidityModule.sol#L131
Byterocket,Orbit DeFi[05.29.2022],Empty data doesn’t always revert,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong comparison operator,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Misleading or wrong documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not making use of SafeMath where appropriate,Integer Overflow and Underflow,Line Level,"11-74, 53-54","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/helpers/SwapHelper.sol#L11-L74, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/actions/ZapIn.sol#L53-L54"
Byterocket,Orbit DeFi[05.29.2022],Faulty reliance on data to be present,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of 32 bits does not save gas,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of unsafe ERC20 transfers,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Non-standard delete from array pattern,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Undocumented constant value,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Invalid documentation,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong use of allowance,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use underscores for large numerals,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the getStorage function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unnecessary double function exposed,Code With No Effects,Line Level,87,https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManagerFactory.sol#L87
Byterocket,Orbit DeFi[05.29.2022],Unnecessary deadline extension,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Insufficient state-modifying function,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Wrong type used for Uniswap V3,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Not using the default method for maximum values,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Making use of undocumented side-effect,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Only emit events if the state changed,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Relying on false guarantees,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Use of transferFrom instead of transfer,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Unchangeable global variables should be immutable,not_swc,,,
Byterocket,Orbit DeFi[05.29.2022],Missing visibility keyword,State Variable Default Visibility,Line Level,"13-14, 22, 17, 17-18, 18-19","https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/PositionManager.sol#L13-L14, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AaveModule.sol#L22, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/modules/AutoCompoundModule.sol#L17, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/DepositRecipes.sol#L17-L18, https://github.com/FiveElementsLabs/orbit-defi/blob/541460999b7d8fa80c4a4a86383f583392436b67/contracts/utils/WithdrawRecipes.sol#L18-L19"
Coinspect,Incognito Audit,Outdated Solidity version,Outdated Compiler Version,Line Level,1,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/incognito_proxy.sol#L1
Coinspect,Incognito Audit,Ambiguous signatures in requestWithdraw and execute,not_swc,,,
Coinspect,Incognito Audit,Function claim in TransparentUpgradableProxy is not transparent,Function Default Visibility,Function Level,298-302,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/transparentUpgraded.sol#L298-L302
Coinspect,Incognito Audit,Integer overflows in functions withdraw and submitBurnProof,Integer Overflow and Underflow,Line Level,"336,408",https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Free parameters in function execute controllable by front-runners,Transaction Order Dependence,Line Level,520,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol
Coinspect,Incognito Audit,Uses of require without error string,not_swc,,,
Coinspect,Incognito Audit,Unnecessary payable function,not_swc,,,
Coinspect,Incognito Audit,Invalid signatures accepted as signed by address(0),not_swc,,,
Coinspect,Incognito Audit,Partially arbitrary external calls controllable by users,Unprotected Ether Withdrawal,Function Level,510-545,https://github.com/incognitochain/bridge-eth/blob/4879219669a38d601265582f815596b6775855b6/bridge/contracts/vault.sol#L510-L545
Coinspect,Incognito Audit,Insufficient checks when swapping committees,not_swc,,,
Coinspect,Incognito Audit,Inconsistencies with committee swapping lead to race condition,not_swc,,,
consensys,0x_Protocol_v2,A malicious maker can empty a taker’s account of all tokens.,not_swc,,,
consensys,0x_Protocol_v2,MixinSignatureValidator: Insecure signature validator SignatureType.Caller,Lack of Proper Signature Verification,Function Level,51-58,https://github.com/0xProject/0x-monorepo/pull/1015/files#diff-303846d1bc6b014a253355f11d5722c2efd585de3aeac064f0d5d170af76b167#L51-L58
consensys,0x_Protocol_v2,Use of outdated multisig wallet,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: timelocked transactions affected by changing wallet parameters,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: removeAuthorizedAddressAtIndex requires multiple confirmations,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,LibBytes: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: readBytes4 does not adhere to spec,not_swc,,,
consensys,0x_Protocol_v2,MixinAuthorizable: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: Insufficient Testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: fallback function silently fails,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Insufficient testing,not_swc,,,
consensys,0x_Protocol_v2,ERC721Token: inaccurate isContract function,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner: accepts ETH,not_swc,,,
consensys,0x_Protocol_v2,AssetProxyOwner duplicates code for readBytes4 function,not_swc,,,
consensys,0x_Protocol_v2,Outdated compiler version,Outdated Compiler Version,Line Level,19,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxyOwner/AssetProxyOwner.sol
consensys,0x_Protocol_v2,Use of this.balance in WETH9.sol,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Reconsider use of inline assembly,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy: Unclear comments,not_swc,,,
consensys,0x_Protocol_v2,ERC20Proxy/ERC721Proxy: LibBytes imported but not used,Code With No Effects,Line Level,21,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/AssetProxy/ERC20Proxy.sol
consensys,0x_Protocol_v2,LibBytes is imported but never used,Code With No Effects,Line Level,31,https://github.com/0xProject/0x-monorepo/blob/a05b14e4d9659be1cc495ee33fd8962ce773f87f/packages/contracts/src/2.0.0/protocol/Exchange/MixinAssetProxyDispatcher.sol
consensys,0x_Protocol_v2,Optimization: refine function visibilities in the Exchange for gas efficiency,not_swc,,,
consensys,0x_Protocol_v2,LibConstants: dynamic constructor initialisation,not_swc,,,
consensys,0x_v3_Staking,Delegated stake weight reduction can be bypassed by using an external contract,Delegatecall to Untrusted Callee,Subcontract Level,1-349,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/staking_pools/MixinStakingPool.sol#L1-L349
consensys,0x_v3_Staking,MixinParams.setParams bypasses safety checks made by standard StakingProxy upgrade path.,not_swc,,,
consensys,0x_v3_Staking,Authorized addresses can indefinitely stall ZrxVaultBackstop catastrophic failure mode,not_swc,,,
consensys,0x_v3_Staking,LibMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Function Level,362-369,https://github.com/0xProject/0x-monorepo/blob/a22ba8647c1bdcb6f992c2b4338a4286d9712e4f/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs,not_swc,,,
consensys,0x_v3_Staking,Pool IDs can just be incrementing integers,not_swc,,,
consensys,0x_v3_Staking,LibProxy.proxyCall() may overwrite important memory,not_swc,,,
consensys,0x_v3_Staking,Use of tx.origin as a part of authorization control,Authorization through tx.origin,Line Level,报告里没这项147175,0x-monorepo/MixinCoordinatorApprovalVerifier.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,State variable shadows another state variable,Shadowing State Variables,Line Level,39,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/dev-utils/contracts/src/LibAssetData.sol#L39
consensys,0x_v3_Staking,A control flow decision is made based on a predictable,Block values as a proxy for time,Line Level,70,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/staking/contracts/src/sys/MixinScheduler.sol#L70
consensys,0x_v3_Staking,The binary addition can overflow,Integer Overflow and Underflow,Line Level,304， 339， 388， 418， 478，,https://github.com/0xProject/0x-monorepo/blob/90193c81978a486762f37ebde3983182ab17f6f9/contracts/utils/contracts/src/LibBytes.sol#L304
consensys,0x_v3_Staking,Anyone can withdraw ETH from the contract account.,Unprotected Ether Withdrawal,Line Level,66,0x-monorepo/Refundable.sol at 90193c81978a486762f37ebde3983182ab17f6f9 · 0xProject/0x-monorepo · GitHub
consensys,0x_v3_Staking,LibFixedMath functions fail to catch a number of overflows,Integer Overflow and Underflow,Line Level,359-376,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/libs/LibFixedMath.sol
consensys,0x_v3_Staking,Remove unneeded fields from StoredBalance and Pool structs Mi,Code With No Effects,Line Level,"61,113",https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/interfaces/IStructs.sol
consensys,0x_v3_Staking,Anyone can remove a maker’s pending pool join status,not_swc,,,
consensys,0x_v3_Staking,Pool 0 can be used to temporarily prevent makers from joining another pool,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Fix weak assertions in MixinStakingPool stemming from use of NIL_POOL_ID,not_swc,,,
consensys,0x_v3_Staking,Recommendation: Remove MixinAbstract and fold MixinStakingPoolRewards into MixinFinalizer and MixinStake,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove confusing access to activePoolsThisEpoch,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove MixinFinalizer._getUnfinalizedPoolRewardsFromState,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove complicating getters from MixinStakingPoolRewards,not_swc,,,
consensys,0x_v3_Staking,Recommendation: remove unneeded dependency on MixinStakeBalances,not_swc,,,
consensys,0x_v3_Staking,Misleading MoveStake event when moving stake from UNDELEGATED to UNDELEGATED,not_swc,,,
consensys,0x_v3_Staking,The staking contracts contain several artifacts of a quickly-changing codebase,not_swc,,,
consensys,0x_v3_Staking,Remove unnecessary fallback function in Staking contract,Code With No Effects,Function Level,36-39,https://github.com/0xProject/0x-monorepo/blob/b8e01d7be535196a3145a431291183ecfbb333c6/contracts/staking/contracts/src/Staking.sol
consensys,Bounties_Network,Use safe math for arithmetic operations,Integer Overflow and Underflow,Line Level,246,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L246
consensys,Bounties_Network,Approver/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,changeApprover/onlyIssuer can error if the list of approvers/issuers is empty,not_swc,,,
consensys,Bounties_Network,ERC721 can be stolen in many cases,not_swc,,,
consensys,Bounties_Network,Misprint in updateFulfillment,not_swc,,,
consensys,Bounties_Network,NFT with TokenID = 0 cannot be used,not_swc,,,
consensys,Bounties_Network,ETH contributions don't work with meta transactions,not_swc,,,
consensys,Bounties_Network,Add tests for meta transactions functionality,not_swc,,,
consensys,Bounties_Network,Make sure at least one issuer is set,not_swc,,,
consensys,Bounties_Network,Use correct sender when emitting events,not_swc,,,
consensys,Bounties_Network,Incompatible ERC721Basic transferFrom() function,not_swc,,,
consensys,Bounties_Network,Safeguard contribute() against invalid bounty.tokenversion,not_swc,,,
consensys,Bounties_Network,Change public methods to external,State Variable Default Visibility,Subcontract Level,1-722,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Use the same transfer function for consistency,not_swc,,,
consensys,Bounties_Network,Make contribute bail early if amount is zero,not_swc,,,
consensys,Bounties_Network,Require latest Solidity version,Floating Pragma,Line Level,1,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L1
consensys,Bounties_Network,Explicitly declare State Variable Default Visibility,State Variable Default Visibility,Line Level,46，47,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L46-L47
consensys,Bounties_Network,Use token interfaces instead of token implementation,not_swc,,,
consensys,Bounties_Network,"Rework project folder structure to reflect the sourceUnits role, use and purpose",not_swc,,,
consensys,Bounties_Network,Outdated documentation/specification,not_swc,,,
consensys,Bounties_Network,Do not save token address if tokenVersion is 0,not_swc,,,
consensys,Bounties_Network,Anyone can act as a contributor before any tokens of the contribution were sent,State Variable Default Visibility,Function Level,243-262,https://github.com/Bounties-Network/StandardBounties/blob/3d7c1771f78c5afdd896e2e2d34cf3dfc7fd4813/contracts/StandardBounties.sol#L243-L262
consensys,Brickblock,AndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check in ExchangeRateProviderStub,not_swc,,,
consensys,Brickblock,Unnecessary static call to get POA Manager's address in POA proxy,not_swc,,,
consensys,Brickblock,Unnecessary static call to fetch registry's address in POA Proxy,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an anti-separation?of-concerns pattern,not_swc,,,
consensys,Brickblock,Unused variable has no dummy check-in ExchangeRateProviderStub,Code With No Effects,Line Level,53-54,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/ExchangeRateProvider.sol
consensys,Brickblock,buyAndEndFunding ends by calling buyAndContinueFunding,not_swc,,,
consensys,Brickblock,Usage of EntityState for both brokers and tokens in PoaManager is an antiseparation-of-concerns pattern,not_swc,,,
consensys,Brickblock,Unnecessary complexity in toXLengthString functions in PoaCommon,not_swc,,,
consensys,Brickblock,No plan for how a physical tokenized asset would handle a chain split,not_swc,,,
consensys,Brickblock,Usage of random storage slots in the Proxy adds too much complexity,not_swc,,,
consensys,Brickblock,Unnecessary usage of low-level .call() method,Reentrancy,Line Level,184,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCommon.sol#L184
consensys,Brickblock,Withdraw method does not check if balance is sufficient for the withdrawal,Unprotected Ether Withdrawal,Function Level,87-98,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/BrickblockAccount.sol#L87
consensys,Brickblock,Can lock and unlock 0 BBK in AccessToken,not_swc,,,
consensys,Brickblock,Precision in percent function can overflow,Integer Overflow and Underflow,Line Level,"292,297",https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/PoaCrowdsale.sol#L297
consensys,Brickblock,Transaction order dependence issue in ExchangeRates,not_swc,,,
consensys,Brickblock,Non-optimal ordering of instructions in PoaProxy and PoaToken fallback functions,not_swc,,,
consensys,Brickblock,ExchangeRateProvider's callback check for access control is non-optimal,not_swc,,,
consensys,Brickblock,Inaccurate specification comment for setFailed() method in PoaCrowdsale,not_swc,,,
consensys,Brickblock,Unnecessary fallback functions to refuse payments,Code With No Effects,Function Level,300-305,https://github.com/brickblock-io/smart-contracts/blob/f1f5b04722b9569e1d4c0b62ac4c490c0a785fd8/contracts/AccessToken.sol
consensys,Brickblock,Comment about upgrade path is incorrect,not_swc,,,
consensys,Brickblock,FeeManager open-by-default design might introduce flaws in the token economy,not_swc,,,
consensys,Brickblock,Unnecessary refund action in PoaCrowdsale,not_swc,,,
consensys,Brickblock,this should be explicitly typecast to address,not_swc,,,
consensys,Brickblock,Blocking conditions in buyFiat,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in PoaToken is dangerous,not_swc,,,
consensys,Brickblock,Use of ever-growing unsigned integers in AccessToken is dangerous,Integer Overflow and Underflow,Subcontract Level,1-333,https://github.com/brickblock-io/smart-contracts/blob/6360f5e1ba0630fa0caf82ff9b58b2dc5e9e1b53/contracts/AccessToken.sol
consensys,Brickblock,Non-optimal stage checking condition in PoaToken,not_swc,,,
consensys,Brickblock,Contradicting comment on POAManager,not_swc,,,
consensys,Brickblock,Inconsistent type used for decimals,not_swc,,,
consensys,Brickblock,Inconsistent event naming,not_swc,,,
consensys,Brickblock,Incorrect name of parameter in BBKUnlockedEvent,not_swc,,,
consensys,DeFi_Saver,Unused code present in the codebase,Code With No Effects,Subcontract Level,1-39,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/utils/ZrxAllowlist.sol
consensys,DeFi_Saver,Return value is not used for TokenUtils.withdrawTokens,not_swc,,,
consensys,DeFi_Saver,Missing access control for DefiSaverLogger.Log,not_swc,,,
consensys,DeFi_Saver,Random task execution,Reentrancy,Function Level,105-136,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/flashloan/FLAaveV2.sol#L105
consensys,DeFi_Saver,Tokens with more than 18 decimal points will cause issues,Integer Overflow and Underflow,Function Level,100-108,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/wrappersV3/KyberWrapperV3.sol#L100
consensys,DeFi_Saver,"Error codes of Compound’s Comptroller.enterMarket, Comptroller.exitMarket are not checked",Unchecked Call Return Value,Function Level,26-37,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/actions/compound/helpers/CompHelper.sol#L26
consensys,DeFi_Saver,Reversed order of parameters in allowance function call,not_swc,,,
consensys,DeFi_Saver,Full test suite is recommended,not_swc,,,
consensys,DeFi_Saver,Kyber getRates code is unclear,not_swc,,,
consensys,DeFi_Saver,Missing check in IOffchainWrapper.takeOrder implementation,Integer Overflow and Underflow,Function Level,42-50,https://github.com/defisaver/defisaver-v3-contracts/blob/cb29669a84c2d6fffaf2231c0938eb407c060919/contracts/exchangeV3/offchainWrappersV3/ZeroxWrapper.sol#L42
consensys,ENS_Permanent_Registrar,Memory corruption in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,SimplePriceOracle.price is susceptible to integer overflow,Integer Overflow and Underflow,Function Level,26-28,https://github.com/ensdomains/ethregistrar/pull/17/files/199e43a53b17834fb66d8be055d4e6c7b9ba8bdd#diff-9c3a8554a75c167d610300421bcafac54b1e1d345f258c9c228cc6c5e637fb06
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register is vulnerable to front running,Transaction Order Dependence,Line Level,"46,48,58",https://github.com/ensdomains/ethregistrar/pull/18/files/3f71464ad3ac8d20bd0e9b6e36363e222f868651
consensys,ENS_Permanent_Registrar,SOA record check on the wrong domain Major,not_swc,,,
consensys,ENS_Permanent_Registrar,Consider replacing the Buffer implementation,not_swc,,,
consensys,ENS_Permanent_Registrar,Overzealous resizing in Buffer,not_swc,,,
consensys,ENS_Permanent_Registrar,Pending auctions in the legacy registrar don’t result in proper ownership in ENS,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer should probably use the live modifier,not_swc,,,
consensys,ENS_Permanent_Registrar,Reconsider use of inline assembly in BytesUtils.sol,not_swc,,,
consensys,ENS_Permanent_Registrar,BaseRegistrarImplementation.acceptRegistrarTransfer does not check for invalid names,not_swc,,,
consensys,ENS_Permanent_Registrar,Sanity check around transferPeriodEnds,not_swc,,,
consensys,ENS_Permanent_Registrar,StablePriceOracle.price has an unimportant integer underflow,Integer Overflow and Underflow,Line Level,59,https://github.com/ensdomains/ethregistrar/pull/20/files/69bbf720cd76633fa9e50f34d0822f1b773d4efa
consensys,ENS_Permanent_Registrar,ETHRegistrarController.register should revert rather than silently fail,Unchecked Call Return Value,Function Level,72-75,https://github.com/ensdomains/ethregistrar/pull/22/files/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e
consensys,ENS_Permanent_Registrar,Assert Violation,Assert Violation,Line Level,79,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/BaseRegistrarImplementation.sol#L79
consensys,ENS_Permanent_Registrar,DoS with Failed Call,DoS with Failed Call,Function Level,42-45,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L42-L45
consensys,ENS_Permanent_Registrar,Block values as a proxy for time,Block values as a proxy for time,Line Level,86,https://github.com/ensdomains/ethregistrar/blob/e558b33ed823d8e9b3d73521d7bd4fbb1d49c41e/contracts/ETHRegistrarController.sol#L86
consensys,ENS_Permanent_Registrar,Work towards a trustless model for ENS,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.commit overwrites previously-committed values,not_swc,,,
consensys,Fei_Protocol,Purchasing and committing still possible after launch,not_swc,,,
consensys,Fei_Protocol,BondingCurve allows users to acquire FEI before launch,not_swc,,,
consensys,Fei_Protocol,Timed.isTimeEnded returns true if the timer has not been initialized,not_swc,,,
consensys,Fei_Protocol,GenesisGroup.emergencyExit remains functional after launch,not_swc,,,
consensys,Fei_Protocol,UniswapIncentive overflow on pre-transfer hooks,Integer Overflow and Underflow,Line Level,128-134  173-186,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/token/UniswapIncentive.sol
consensys,Fei_Protocol,Overflow/underflow protection,Integer Overflow and Underflow,Line Level,131,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/genesis/GenesisGroup.sol#L131
consensys,Fei_Protocol,Unchecked return value for IWETH.transfer call,Unchecked Call Return Value,Line Level,122,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pcv/EthUniswapPCVController.sol#L122
consensys,Fei_Protocol,Unchecked return value for transferFrom calls,Unchecked Call Return Value,Line Level,121,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/pool/Pool.sol#L121
consensys,Fei_Protocol,Assertions that can fail,Assert Violation,Line Level,21,https://github.com/fei-protocol/fei-protocol-core/blob/ff892c5d0b9697f249d713bbb2b3bd1da7980ed2/contracts/router/UniswapSingleEthRouter.sol#L21
consensys,Gamma,UniProxy.depositSwap - Tokens are not approved before calling Router.exactInput,not_swc,,,
consensys,Gamma,Uniproxy.depositSwap - _router should not be determined by the caller,not_swc,,,
consensys,Gamma,UniProxy.properDepositRatio - Proper ratio will not prevent liquidity imbalance for all possible scenarios,Code With No Effects,Function Level,258-275,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,UniProxy - SafeERC20 is declared but safe functions are not used,not_swc,,,
consensys,Gamma,Missing/wrong implementation,Code With No Effects,Line Level,Link1：108、113   Link2：415、433、439,"Link1: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
Link2: https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol"
consensys,Gamma,UniProxy.depositSwap doesn’t deposit all the users’ funds,not_swc,,,
consensys,Gamma,Hypervisor - Multiple “sandwiching” front running vectors,not_swc,,,
consensys,Gamma,Full test suite is necessary,not_swc,,,
consensys,Gamma,Uniswap v3 callbacks access control should be hardened,not_swc,,,
consensys,Gamma,Code quality comments,not_swc,,,
consensys,Gamma,The Hypervisor.deposit function does not check the msg.sender,Unprotected Ether Withdrawal,Function Level,80-141,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,Gamma,Re-entrancy + flash loan attack can invalidate price check,Reentrancy,Line Level,75-82,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,The deposit function of the Hypervisor contract should only be called from UniProxy,Unprotected Ether Withdrawal,Function Level,66-125,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/UniProxy.sol
consensys,Gamma,Hypervisor.withdraw - Possible reentrancy,Reentrancy,Function Level,173-214,https://github.com/GammaStrategies/hypervisor/blob/41fd4abf79864478523e87924d4e80d80df04879/contracts/Hypervisor.sol
consensys,MCDEX_Mai_Protocol_V2,Perpetual - liquidateFrom should not have public visibility,Function Default Visibility,Function Level,248-253,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L248-L253
consensys,MCDEX_Mai_Protocol_V2,Refactor PerpetualProxy,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Clarify confusing use of signed integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Improve documentation and provide a complete specification,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Use individually typed setter methods instead of a combined set*Prameter method,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2, LibTypes.Status.SETTLING should be renamed to LibTypes.Status.EMERGENCY,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,"Implement clear, consistent naming conventions for all contracts",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Prefix variables that are expected to denominated in “wads” to make them distinguishable from integers,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Introduce a system setup phase and provide sane parameters on deployment,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Import 3rd party libraries from their original source and keep them unchanged instead of copying their content into a new library,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Consider removing unnecessary events,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unnecessary ABIEncoderV2 declarations,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Avoid redefining the same structs,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Methods should be declared external,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Gas Optimization static hashed values,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity pools can be initialized with zero collateral,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Administrators can put the system into emergency mode indefinitely,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Signed data may be usable cross-chain,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - validateOrderParam does not check against SUPPORTED_ORDER_VERSION,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMathSigned - wpowi returns an invalid result for a negative exponent,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Outdated solidity version and floating pragma,Outdated Compiler Version,Line Level,1,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L1
consensys,MCDEX_Mai_Protocol_V2,AMM - ONE_WAD_U is never used,Presence of unused variables,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L17
consensys,MCDEX_Mai_Protocol_V2,Perpetual - Variable shadowing in constructor,Shadowing State Variables,Function Level,34-41,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L34-L41
consensys,MCDEX_Mai_Protocol_V2,Perpetual - The specified decimals for the collateral may not reflect the token’s actual decimals,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Unchecked return value in ShareToken.mint,Unchecked Call Return Value,Subcontract Level,499-502,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/liquidity/AMM.sol#L499-L502
consensys,MCDEX_Mai_Protocol_V2,Perpetual - beginGlobalSettlement can be called multiple times,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unused Imports,Code With No Effects,Function Level,4、5,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/perpetual/Perpetual.sol#L4-L5
consensys,MCDEX_Mai_Protocol_V2,Exchange - OrderStatus is never used,Presence of unused variables,Line Level,20,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/exchange/Exchange.sol#L20
consensys,MCDEX_Mai_Protocol_V2,LibMath - Inaccurate declaration of _UINT256_MAX,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - inconsistent assertion text and improve representation of literals with many digits,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath - roundHalfUp returns unfinished result,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,LibMath/LibOrder - unused named return value,Presence of unused variables,Function Level,90-96,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/lib/LibMath.sol#L90-L96
consensys,MCDEX_Mai_Protocol_V2,"Where possible, a specific contract type should be used rather than address",not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - CancelOrder has no effect,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - funding can be called in emergency mode,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdraw should only be available in NORMAL state,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Perpetual - withdrawFromInsuranceFund should check wadAmount instead of rawAmount,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Unpredictable behavior due to front running or general bad timing,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Governance is able to set an invalid alpha value,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Amount of collateral spent or shares received may be unpredictable for liquidity provider,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Exchange - insufficient input validation in matchOrders,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,AMM - Liquidity provider may lose up to lotSize when removing liquidity,not_swc,,,
consensys,MCDEX_Mai_Protocol_V2,Oracle - Unchecked oracle response timestamp and integer over/underflow,Integer Overflow and Underflow,Line Level,17,https://github.com/mcdexio/mai-protocol-v2/blob/4b198083ec4ae2d6851e101fc44ea333eaa3cd92/contracts/oracle/ChainlinkAdapter.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - RNG failure can lock user funds,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - transferEther should be internal,Function Default Visibility,Function Level,63-67,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L63-L67
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Reconsider the use of proxy factories in the system if they are not needed,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,"Where possible, functions should accept a specific contract type rather than address parameters",not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Check codesize before adding listeners,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Stick to clear interface naming conventions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - unnecessary payable,Function Default Visibility,Function Level,90-93,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBoxController.sol#L90-L93
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Clean up unused source-units in the repository,Code With No Effects,Function Level,  8-19,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/counterfactual-action/CounterfactualAction.sol#L8-L19
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Rework the repository structure and clearly mark which 3rd party contracts have been modified,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - Unprotected selfdestruct in proxy implementation,Unprotected SELFDESTRUCT Instruction,Function Level,86-89,https://github.com/pooltogether/loot-box/blob/2cbea5a85d53c555e28791df5b264d7b32779eea/contracts/LootBox.sol#L88-L89
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Ticket duplication,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - trustedForwarder can impersonate any msg.sender,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Unpredictable behavior for users due to admin front running or general bad timing,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPriceStrategy - addExternalErc721Award duplicate or invalid tokenIds may block award phase,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Token with callback related warnings (ERC777 a.o.),Reentrancy,Function Level,252-263,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - unbounded external tokens linked list may be used to force a gas DoS,DoS With Block Gas Limit,Line Level,254,https://github.com/pooltogether/pooltogether-pool-contracts/blob/c50de1d7af67a14990543af0c2d2703eca29f0e9/contracts/prize-strategy/PeriodicPrizeStrategy.sol#L254
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - setNumberOfWinners does not enforce count>0,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - plunder should disallow plundering to address(0),not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,PeriodicPrizeStrategy - Inconsistent behavior between award-phase modifiers and view functions,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Awards can be guaranteed with a set number of tickets,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,MultipleWinners - Inconsistent behavior compared to SingleRandomWinner,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,Initialize implementations for proxy contracts and protect initialization methods,not_swc,,,
consensys,PoolTogether_LootBox_and_MultipleWinners_Strategy,LootBox - executeCalls can be misused to relay calls,not_swc,,,
consensys,Skale_Token,uint overflow may lead to stealing funds,Integer Overflow and Underflow,Function Level,74-76,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationRequestManager.sol#L74-L76
consensys,Skale_Token,Node can unlink validator,not_swc,,,
consensys,Skale_Token,getLockedCount is iterating over all history of delegations,DoS With Block Gas Limit,Line Level,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol,
consensys,Skale_Token,Tokens after delegation should not be unlocked automatically,Unprotected Ether Withdrawal,Function Level,258-264,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/TokenState.sol#L258-L264
consensys,Skale_Token,Some unlocked tokens can become locked after delegation is rejected,not_swc,,,
consensys,Skale_Token,Fees can be > 100%,not_swc,,,
consensys,Skale_Token,getState changes state implicitly,not_swc,,,
consensys,Skale_Token,endingDelegations list is redundant,not_swc,,,
consensys,Skale_Token,tokenState.setState redundant checks,not_swc,,,
consensys,Skale_Token,DelegationService redundancy,not_swc,,,
consensys,Skale_Token,Add timelock for some onlyOwner functions,not_swc,,,
consensys,Skale_Token,Users can burn delegated tokens using re-entrancy attack,Reentrancy,Function Level,413-426,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/ERC777/LockableERC777.sol#L413-L426
consensys,Skale_Token,Slashes do not affect bounty distribution,not_swc,,,
consensys,Skale_Token,Iterations over slashes,not_swc,,,
consensys,Skale_Token,Storage operations optimization,not_swc,,,
consensys,Skale_Token,Duplicate function implementation,not_swc,,,
consensys,Skale_Token,Function overloading,not_swc,,,
consensys,Skale_Token,Gas limit for bounty and slashing distribution,DoS With Block Gas Limit,Function Level,310-316,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L310-L316
consensys,Skale_Token,Rename functions,not_swc,,,
consensys,Skale_Token,Delegations might stuck in non-active validator,not_swc,,,
consensys,Skale_Token,Disabled Validators still have delegated funds,not_swc,,,
consensys,Skale_Token,Some functions are defined but not implemented,Code With No Effects,Function Level,152-158,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/DelegationService.sol#L152-L158
consensys,Skale_Token,Validator should be able to remove delegator,not_swc,,,
consensys,Skale_Token,Lack of logs and events on state changes,not_swc,,,
consensys,Skale_Token,ERC-777 callback issue,Reentrancy,Line Level,55-68,https://github.com/skalenetwork/skale-manager/blob/50c8f4e037f6bf578d62bd752516b17237b55811/contracts/delegation/SkaleBalances.sol
consensys,TCR,An unchallenged application cannot be cancelled,not_swc,,,
consensys,TCR,Re-inserting the last node in the list creates a cycle,not_swc,,,
consensys,TCR,getCommitHash is an unreliable proof that _prevPollID exists,not_swc,,,
consensys,TCR,Integer overflow in startPoll,Integer Overflow and Underflow,Function Level,217-218,https://github.com/ConsenSys/PLCRVoting/commit/26579ec7f645f868cdb4c7de4c764808882a5d3a#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL217-L218
consensys,TCR,pollExists is misleading and incomplete,Integer Overflow and Underflow,Function Level,297-304,https://github.com/ConsenSys/PLCRVoting/commit/a069730fcd818c249574a38f922e871c8011fc4f#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL297-L304
consensys,TCR,Parameterizer proposal deposits and challenge deposits can differ,not_swc,,,
consensys,TCR,Integer underflow in challengeReparameterization,Integer Overflow and Underflow,Line Level,164,https://github.com/skmgoldin/tcr/commit/a9f0d97ddfa6a4fafeed9c087086994efd1fe4dc#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL164
consensys,TCR,Integer underflow in withdrawVotingRights,Integer Overflow and Underflow,Line Level,90,https://github.com/ConsenSys/PLCRVoting/commit/c8df984d5d80593b72363cd6ee0f1f0652bc5959#diff-012439693a7acef43d1f03409f83d1c3ea2627e42c527702eae283d1c29d508aL90
consensys,TCR,Integer overflows in proposeReparameterization,Integer Overflow and Underflow,Line Level,137-159,https://github.com/skmgoldin/tcr/commit/81c3274b3c908e2034d243f41e3e89783c67dd1b#diff-d8eed1f31d4abbf03e5739463b1d2abe761afacabf17880e4c91ba4e1443d68bL137
consensys,TCR,Integer overflow in Registry.apply,Integer Overflow and Underflow,Line Level,97,https://github.com/skmgoldin/tcr/commit/9d8b7af5fef7516dd6f84dfdce4f05109cae4a7e#diff-3579d55f1ea85bbe0e06236275421f84e98afd945520c4138c2c4cb1a7b3543fL97
consensys,TCR,Use EIP20Interface instead of EIP20,not_swc,,,
consensys,TCR,Challenges with zero votes will succeed,not_swc,,,
Cystack,AOC BEP-20 - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code   https://testnet.bscscan.com/address/0xBc79AE4eFE0259dCA865A0b75f6873d2EB0169A3#code
Cystack,AOC BEP-20 - v1.3,Improper state of visibility for the variable owner,State Variable Default Visibility,Line Level,119,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Missing error messages,Requirement Violation,Line Level,"133, 555, 567",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Incorrect implementation for the function withdrawBNBFromContract,Code With No Effects,Line Level,554-559,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,High gas cost due to improper initialization of variables,State Variable Default Visibility,Line Level,246-248,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Defect in coding design for the contract constructor,Incorrect Constructor Name,Line Level,"245,284,516",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Misnamed functions in contract codebases,Typographical Error,Line Level,"257, 558",https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Possibility of BNB withdrawals to address(0),Unprotected Ether Withdrawal,Line Level,359-363,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Timestamps do not match with terms in Regressive Anti-Manipulating Strategy (RAMS),Incorrect Constructor Name,Line Level,113-126,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Cystack,AOC BEP-20 - v1.3,Large Transaction Authorisation Feature (LTAF) and RAMS do not work properly for balance with a small value,Typographical Error,Line Level,393-406,https://testnet.bscscan.com/address/0x53cB59f3Ee1035daD6b63F88d9150EA70a1f2605#code
Hacken,Fidometa-V2,Missing functionality,not_swc,,,
Hacken,Fidometa-V2,Excluding from receiving rewards logic is corrupted,not_swc,,,
Hacken,Fidometa-V2,Operation between different time units,not_swc,,,
Hacken,Fidometa-V2,Significant impact on market price,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,No checks to prevent percentage overflow,not_swc,,,
Hacken,Fidometa-V2,User balance may exceed the total supply,not_swc,,,
Hacken,Fidometa-V2,Integer Underflow,Integer Overflow and Underflow,Line Level,1003,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1003
Hacken,Fidometa-V2,Missing management of excluded accounts,not_swc,,,
Hacken,Fidometa-V2,A new vesting period may not be created,not_swc,,,
Hacken,Fidometa-V2,Old wallets are not included back to changes and rewards,not_swc,,,
Hacken,Fidometa-V2,SafeMath is unneeded after 0.8.0,not_swc,,,
Hacken,Fidometa-V2,Initial minting event skipped,not_swc,,,
Hacken,Fidometa-V2,Burn wallet could be changed,not_swc,,,
Hacken,Fidometa-V2,Vested assets should be unlocked automatically,not_swc,,,
Hacken,Fidometa-V2,Possible Gas exceeding,DoS With Block Gas Limit,Line Level,771-778,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L771-L778
Hacken,Fidometa-V2,Unused library,not_swc,,,
Hacken,Fidometa-V2,Floating pragma,Floating Pragma,Line Level,1,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L1
Hacken,Fidometa-V2,Violation of IERC-20 standard,not_swc,,,
Hacken,Fidometa-V2,Unused functions,Code With No Effects,Function Level,788-797,https://github.com/fidometa/Smart_Contract/blob/ad56b0ce678f77d162752dbb5d987d2f4a29fddf/FidoMeta.sol#L788-L797
Hacken,Fidometa-V2,Similar functions,not_swc,,,
Hacken,Fidometa-V2,Template code,not_swc,,,
Hacken,Fidometa-V2,Functions that can be declared as external,not_swc,,,
Hacken,Fidometa-V2,Requires that would never revert transaction,Code With No Effects,Line Level,1041,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1041
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Local variable shadowing,Shadowing State Variables,Line Level,511,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L511
Hacken,Fidometa-V2,State variables that could be declared constant,not_swc,,,
Hacken,Fidometa-V2,Template variables,not_swc,,,
Hacken,Fidometa-V2,Overwhelmed code,not_swc,,,
Hacken,Fidometa-V2,Repeated code,Code With No Effects,Line Level,"1059-1061, 1070-1072, 1081-1082, 1092-1094","https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1059-L1061
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1070-L1072
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1081-L1082
https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L1092-L1094"
Hacken,Fidometa-V2,Unnecessary code,Code With No Effects,Line Level,974,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L974
Hacken,Fidometa-V2,Unnecessary checks,Code With No Effects,Function Level,552-584,https://github.com/fidometa/Smart_Contract/blob/66f43e8644a20ed2ebbc4db94d6b2dcc797ac1c7/FidoMeta.sol#L552-L584
Hacken,Fidometa-V2,Modification of well-known contract,not_swc,,,
Hacken,Fidometa-V2,Hardcoded values,not_swc,,,
Hacken,LunaFi,Vesting funds are not guaranteed,not_swc,,,
Hacken,LunaFi,Staking liquidity funds safety is not guaranteed by the contract logic,not_swc,,,
Hacken,LunaFi,Admin may burn users' funds,Unprotected Ether Withdrawal,Function Level,129-142,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L129-L142
Hacken,LunaFi,Admin may mint an unlimited amount of tokens,Unprotected Ether Withdrawal,Function Level,145-152,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/claimToken.sol#L145-L152
Hacken,LunaFi,Redundant function argument,Code With No Effects,Line Level,265,https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/VLFI.sol#L265
Hacken,LunaFi,Redundant use of SafeMath library,not_swc,,,
Hacken,LunaFi,Use of magic number,not_swc,,,
Hacken,LunaFi,Unexpected output,not_swc,,,
Hacken,LunaFi,Redundant functions,Code With No Effects,Function Level,"161-167, 169-171","https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L161-L167
https://github.com/Luna-Fi/lunafi-smart-contracts/blob/2fa543e8b047fcfcf438880d86b2c6d45eb5e5fa/contracts/LFIToken.sol#L169-L171"
openzeppelin,Arcade_City_token,General code quality,not_swc,,,
openzeppelin,Arcade_City_token,Remove unneeded call.value(),Reentrancy,Line Level,231,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Price function is not linear,not_swc,,,
openzeppelin,Arcade_City_token,Usage of magic constants,not_swc,,,
openzeppelin,Arcade_City_token,Remove commented code,not_swc,,,
openzeppelin,Arcade_City_token,Tests should be independent,not_swc,,,
openzeppelin,Arcade_City_token,Avoid name reuse,Shadowing State Variables,Line Level,133、190,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/TokenVesting.sol
openzeppelin,Arcade_City_token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-374,https://github.com/swarmcity/ac-token/tree/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts
openzeppelin,Arcade_City_token,Remove unnecessary code,Code With No Effects,Line Level,167,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,Arcade_City_token,Remove duplicate code,Code With No Effects,Line Level,188-199、202-204、267-274,https://github.com/swarmcity/ac-token/blob/dd4207e1538f96eb3cbbf9e714eb38015bfe7c5a/contracts/ARCToken.sol
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Stray tokens can be locked in ArroToken contract.,not_swc,,,
openzeppelin,ArroToken,Lack of event emission OwnershipTransferred on contract construction,not_swc,,,
openzeppelin,ArroToken,Lack of event emission after modifying newOwner variable,not_swc,,,
openzeppelin,ArroToken,owner and newOwner storage variables can be modified without events emission,not_swc,,,
openzeppelin,ArroToken,Duplicate code in transfer and transferFrom functions,not_swc,,,
openzeppelin,ArroToken,Wrong usage of inheritance with Safemath contract,Incorrect Inheritance Order,Line Level,105,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,The TokenArro contract can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,The totalSupply function does not return the real total supply,not_swc,,,
openzeppelin,ArroToken,Unnecessary inheritance and imports,not_swc,,,
openzeppelin,ArroToken,initialize function missing the initializer modifier,not_swc,,,
openzeppelin,ArroToken,Unnecessary calls to initializers,not_swc,,,
openzeppelin,ArroToken,Missing error messages in require and revert statements,not_swc,,,
openzeppelin,ArroToken,Not following good Smart Contract development practices,not_swc,,,
openzeppelin,ArroToken,No allowance front-running mitigation,Transaction Order Dependence,Function Level,165-169,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Outdated solidity version in use,Outdated Compiler Version,Line Level,5,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity
openzeppelin,ArroToken,Missing docstrings,not_swc,,,
openzeppelin,ArroToken,Tokens can be transferred to the zero address,not_swc,,,
openzeppelin,ArroToken,Not following a consistent coding style,not_swc,,,
openzeppelin,ArroToken,Multiple variables declared as uint,not_swc,,,
openzeppelin,ArroToken,No explicit visibility definition of variables,State Variable Default Visibility,Line Level,112,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L112
openzeppelin,ArroToken,Link reference to the ERC20 EIP is deprecated,not_swc,,,
openzeppelin,ArroToken,Unused variables defined in function definitions,Presence of unused variables,Line Level,149,https://github.com/pjsimpkins/ArroERC20Code/blob/1ca1cc85f2e7e046070c187031b75b3335ef57c3/Solidity#L149
openzeppelin,ArroToken,Inconsistent variable naming,not_swc,,,
openzeppelin,ArroToken,Non-standard initialization of ERC20,not_swc,,,
openzeppelin,Endaoment,SafeMath library is not used,Integer Overflow and Underflow,Line Level,127-128,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L127-L128
openzeppelin,Endaoment,Multiple getters for the same state variable,not_swc,,,
openzeppelin,Endaoment,Governance restrictions can be bypassed,not_swc,,,
openzeppelin,Endaoment,Fees are wrongly calculated,not_swc,,,
openzeppelin,Endaoment,Unsupported ERC20 tokens can be stuck in the contract,not_swc,,,
openzeppelin,Endaoment,Not following the Checks-Effects-Interactions pattern,Reentrancy,Function Level,119-134,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Fund.sol#L119-L134
openzeppelin,Endaoment,Token transfers can silently fail,Unchecked Call Return Value,Line Level,"93, 95",https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Org.sol
openzeppelin,Endaoment,Lack of input validation,not_swc,,,
openzeppelin,Endaoment,Non flexible data objects,not_swc,,,
openzeppelin,Endaoment,Missing error messages,not_swc,,,
openzeppelin,Endaoment,README file is missing important information,not_swc,,,
openzeppelin,Endaoment,Missing docstrings,not_swc,,,
openzeppelin,Endaoment,Misleading docstrings,not_swc,,,
openzeppelin,Endaoment,Useless input parameters,not_swc,,,
openzeppelin,Endaoment,Lack of event emission,not_swc,,,
openzeppelin,Endaoment,Missing getter,not_swc,,,
openzeppelin,Endaoment,Incorrect require statement,Requirement Violation,Line Level,48,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/Administratable.sol#L48
openzeppelin,Endaoment,uint as uint256,not_swc,,,
openzeppelin,Endaoment,Unused state variables,not_swc,,,
openzeppelin,Endaoment,Unused contracts,Code With No Effects,Subcontract Level,1-34,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/libraries/SafeMath.sol#L1-L34
openzeppelin,Endaoment,Style recommendations not applied,not_swc,,,
openzeppelin,Endaoment,Incorrect functions visibility,not_swc,,,
openzeppelin,Endaoment,Unnecessary import,Code With No Effects,Line Level,6,https://github.com/endaoment/endaoment-contracts/blob/f60aa253d3d869ad6460877f23e6092acb313add/contracts/FundFactory.sol#L6
openzeppelin,Endaoment,Fund contract can’t receive ethers,not_swc,,,
openzeppelin,Endaoment,Typos in the code,not_swc,,,
openzeppelin,Endaoment,Unclear function purpose,not_swc,,,
openzeppelin,Endaoment,Default value as sensible information,not_swc,,,
openzeppelin,Fei_Protocol,Re-implementing ECDSA signature recovery,not_swc,,,
openzeppelin,Fei_Protocol,Not checking for 0 addresses,not_swc,,,
openzeppelin,Fei_Protocol,Commented out code,Code With No Effects,Line Level,"76,77",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/UniswapIncentive.sol#L76-L77
openzeppelin,Fei_Protocol,Functions return without parameters specified,not_swc,,,
openzeppelin,Fei_Protocol,GenesisGroup is a token unnecessarily,not_swc,,,
openzeppelin,Fei_Protocol,Improper use of require,Requirement Violation,Function Level,100-112,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L100-L112
openzeppelin,Fei_Protocol,Inconsistencies around time,Block values as a proxy for time,Line Level,24,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/dao/GovernorAlpha.sol#L24
openzeppelin,Fei_Protocol,Inconsistent coding style,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent error message format,not_swc,,,
openzeppelin,Fei_Protocol,Inconsistent methods for retrieving cumulative price from Uniswap oracle,not_swc,,,
openzeppelin,Fei_Protocol,Incorrect GovernorAlpha name constant,not_swc,,,
openzeppelin,Fei_Protocol,Interfaces omit some external functions,not_swc,,,
openzeppelin,Fei_Protocol,Uninitializable global variable in LinearTimelockToken,not_swc,,,
openzeppelin,Fei_Protocol,Constants not explicitly declared,State Variable Default Visibility,Line Level,22,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/orchestration/BondingCurveOrchestrator.sol#L22
openzeppelin,Fei_Protocol,Missing and incomplete event emissions,not_swc,,,
openzeppelin,Fei_Protocol,Naming issues hinder understanding and clarity of the codebase,not_swc,,,
openzeppelin,Fei_Protocol,NatSpec comments missing,not_swc,,,
openzeppelin,Fei_Protocol,Using now instead of block.timestamp,not_swc,,,
openzeppelin,Fei_Protocol,Proposals can be canceled in states that are unintuitive,not_swc,,,
openzeppelin,Fei_Protocol,Proposal struct storage is inefficient,not_swc,,,
openzeppelin,Fei_Protocol,Redundant event definition,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are not inherited,not_swc,,,
openzeppelin,Fei_Protocol,Some interfaces are unnecessary or inconsistent with implementation,not_swc,,,
openzeppelin,Fei_Protocol,Test and production constants in the same codebase,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessarily small integer sizes,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary if statement,not_swc,,,
openzeppelin,Fei_Protocol,Unnecessary imports,Code With No Effects,Line Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L7
openzeppelin,Fei_Protocol,"Unreachable, incorrect error message",Code With No Effects,Line Level,186,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L186
openzeppelin,Fei_Protocol,Unnecessary inheritance,Code With No Effects,Line Level,12,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/token/Fei.sol#L12
openzeppelin,Fei_Protocol,Use of uint instead of uint256,not_swc,,,
openzeppelin,Fei_Protocol,Bypass burn penalty,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors during reweight,not_swc,,,
openzeppelin,Fei_Protocol,Attacker can manipulate ETH/FEI spot price on allocations,not_swc,,,
openzeppelin,Fei_Protocol,Anyone can steal all the TRIBE tokens from the reward pool,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,ETH can get stuck in the GenesisGroup contract,Unexpected Ether Balance,Function Level,80-87,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L80-L87
openzeppelin,Fei_Protocol,Anyone can partially bypass the FEI sell penalty to earn a profit,not_swc,,,
openzeppelin,Fei_Protocol,Users can claim unreleased rewards or have their funds locked,not_swc,,,
openzeppelin,Fei_Protocol,Anyone with enough liquidity to reach the maxGenesisPrice can make profit from genesis,not_swc,,,
openzeppelin,Fei_Protocol,Users participating in Genesis can get fewer FEI and TRIBE than expected,not_swc,,,
openzeppelin,Fei_Protocol,Outdated oracle prices being used throughout the protocol,not_swc,,,
openzeppelin,Fei_Protocol,Incentive to support the peg decays with volatility,not_swc,,,
openzeppelin,Fei_Protocol,Malicious actors can lock all FEI and TRIBE in the GenesisGroup,Unprotected SELFDESTRUCT Instruction,Function Level,89-103,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/genesis/GenesisGroup.sol#L89-L103
openzeppelin,Fei_Protocol,Inverse price fetched from Uniswap,not_swc,,,
openzeppelin,Fei_Protocol,Rounding errors in Roots library reduce FEI received from bonding curve,Integer Overflow and Underflow,Function Level,7,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/Roots.sol#L7-L18
openzeppelin,Fei_Protocol,Incorrect proposal and quorum thresholds for voting,not_swc,,,
openzeppelin,Fei_Protocol,ETH and FEI can get locked in EthUniswapPCVDeposit,not_swc,,,
openzeppelin,Fei_Protocol,Incentive does not initialize when Ether depreciates,not_swc,,,
openzeppelin,Fei_Protocol,Approved addresses can forfeit user rewards,Unprotected Ether Withdrawal,Function Level,93-98,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L93-L98
openzeppelin,Fei_Protocol,Authorized burners can burn FEI balances without an amount restriction,not_swc,,,
openzeppelin,Fei_Protocol,Core contract cannot allocate all Tribe tokens,Requirement Violation,Line Level,41,https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/core/Core.sol#L41
openzeppelin,Fei_Protocol,Multiple outdated Solidity versions in use,Outdated Compiler Version,Contract Level,all,
openzeppelin,Fei_Protocol,Not using SafeMath and SafeCast,Integer Overflow and Underflow,Line Level,"61/172, 173/34/144, 145","https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/utils/LinearTokenTimelock.sol#L61, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol#L172-L173, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pcv/PCVSplitter.sol#L34, https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/refs/UniRef.sol#L144-L145"
openzeppelin,Fei_Protocol,queueTransaction does not check transaction value,not_swc,,,
openzeppelin,Fei_Protocol,Transfers are not checked for success,Unchecked Call Return Value,Line Level,"120, 134",https://github.com/fei-protocol/fei-protocol-core/blob/29aeefddd97f31c7f2a598fb3dca3ef24dc0beb4/contracts/pool/Pool.sol
openzeppelin,Fei_Protocol,UniswapOracle does not allow overflow,not_swc,,,
openzeppelin,iExec_RLC_Token,Use of send,not_swc,,,
openzeppelin,iExec_RLC_Token,Usage of magic constants,not_swc,,,
openzeppelin,iExec_RLC_Token,Bug Bounty,not_swc,,,
openzeppelin,iExec_RLC_Token,Fail early and loudly,not_swc,,,
openzeppelin,iExec_RLC_Token,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Timestamp usage,Block values as a proxy for time,Line Level,Link1：69、116、145、295；Link2：37、49,"Link1：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol 
Link2：https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol"
openzeppelin,iExec_RLC_Token,Unused isMaxCapReached,Code With No Effects,Function Level,209-211,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/Crowdsale.sol
openzeppelin,iExec_RLC_Token,Avoid duplicated code,Code With No Effects,Function Level,"62-67, 69-76, 79-81, 83-87, 97-99",https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol#L62
openzeppelin,iExec_RLC_Token,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-306,https://github.com/iExecBlockchainComputing/rlc-token/blob/3d9aa99ba33bb035c59740a621b1f21cd45cbac5/contracts/RLC.sol
openzeppelin,Opyn_Contracts,Not using SafeMath,Integer Overflow and Underflow,Line Level,"509, 582",https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L509
openzeppelin,Opyn_Contracts,Malicious users could steal from the OptionsContract contract,not_swc,,,
openzeppelin,Opyn_Contracts,Liquidation process could push the protocol into insolvency,not_swc,,,
openzeppelin,Opyn_Contracts,Malicious Admin can steal from the protocol,not_swc,,,
openzeppelin,Opyn_Contracts,Potential race condition with Repo ownership transfer,Transaction Order Dependence,Function Level,429-433,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L429-L433
openzeppelin,Opyn_Contracts,Lack of event emissions after sensitive changes,not_swc,,,
openzeppelin,Opyn_Contracts,Not following check-effect-interaction pattern,Reentrancy,Line Level,304-305,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L304-L305
openzeppelin,Opyn_Contracts,Different behavior between ETH and Tokens collateral,not_swc,,,
openzeppelin,Opyn_Contracts,Cannot update exponent after deployment,not_swc,,,
openzeppelin,Opyn_Contracts,Miscalculated maxCollateralLiquidatable in liquidate function,not_swc,,,
openzeppelin,Opyn_Contracts,Confusing time frame for actions,not_swc,,,
openzeppelin,Opyn_Contracts,Repo owner could lose collateral if leftover oTokens are not burnt before the option expires,not_swc,,,
openzeppelin,Opyn_Contracts,Factorize Repo ownership into modifier,not_swc,,,
openzeppelin,Opyn_Contracts,Unbalanced ETH operations,not_swc,,,
openzeppelin,Opyn_Contracts,Unbounded loops,DoS With Block Gas Limit,Function Level,321-325,https://github.com/opynfinance/Convexity-Protocol-Archived/blob/c34598565cba2bfcf824eb2da63d95c7f5dda4fa/contracts/OptionsContract.sol#L321-L325
openzeppelin,PoolTogether,Supply is manipulable,not_swc,,,
openzeppelin,PoolTogether,Deposit uses operator collateral,not_swc,,,
openzeppelin,PoolTogether,Incomplete ERC777 functionality,not_swc,,,
openzeppelin,PoolTogether,Missing return value,Unchecked Call Return Value,Function Level,160-167,https://github.com/pooltogether/pooltogether-pod-contracts/blob/8041b3dc72efd02b94d49fb37b9b308603af5ce/contracts/ScheduledBalance.sol#L160-L167
openzeppelin,PoolTogether,Misleading comments,not_swc,,,
openzeppelin,PoolTogether,Complicated Code,not_swc,,,
openzeppelin,PoolTogether,[H01] Users can influence the lottery winner,Transaction Order Dependence,Line Level,321,https://github.com/pooltogether/pooltogether-contracts/tree/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#L321
openzeppelin,PoolTogether,Users can influence the lottery winner,Transaction Order Dependence,Function Level,306-309、321-372,https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol
openzeppelin,PoolTogether,Winners can stall the system,not_swc,,,
openzeppelin,PoolTogether,Double counting rewards,not_swc,,,
openzeppelin,PoolTogether,Bypassing token events,not_swc,,,
openzeppelin,PoolTogether,Deviation from ERC777 specification,not_swc,,,
openzeppelin,PoolTogether,Only direct deposits are pausable,not_swc,,,
openzeppelin,PoolTogether,Double spending ERC20 allowance,not_swc,,,
openzeppelin,PoolTogether,Unexpected Side Effects,not_swc,,,
openzeppelin,PoolTogether,Conflated balances,not_swc,,,
openzeppelin,PoolTogether,Misleading comments and variable names,not_swc,,,
openzeppelin,PoolTogether,Excessive code coupling,not_swc,,,
openzeppelin,PoolTogether,Unchecked casting from uint256 to int256,Integer Overflow and Underflow,Line Level,"411, 412",https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol#411-412
openzeppelin,PoolTogether,Unrestricted token ownership,not_swc,,,
openzeppelin,PoolTogether,Inconsistent imports,not_swc,,,
openzeppelin,PoolTogether,Default Visibility,State Variable Default Visibility,Line Level,"197-212, 24-25","https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/BasePool.sol, https://github.com/pooltogether/pooltogether-pool-contracts/blob/78ac6863f4616269f7d04a0ddd1d60bdfc454937/contracts/RecipientWhitelistERC777Pool.sol"
openzeppelin,PoolTogether,Reimplementing Pausable,not_swc,,,
openzeppelin,PoolTogether,Repeated code,not_swc,,,
openzeppelin,PoolTogether,Random upper bound of zero,not_swc,,,
openzeppelin,PoolTogether,Semantic Overloading,not_swc,,,
openzeppelin,PoolTogether,Unnecessary casting of drawIndex,not_swc,,,
openzeppelin,PoolTogether,Unnecessary SafeMath sum operation,not_swc,,,
openzeppelin,PoolTogether,Instances of uint,not_swc,,,
openzeppelin,PoolTogether,Naming,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary setting of the active_recovery_end_time variable,Presence of unused variables,Line Level,"67, 146",https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#67
openzeppelin,Recoverable_Wallet,Contract does not conform to the ERC1820 specification,not_swc,,,
openzeppelin,Recoverable_Wallet,Race condition may result from compromised recovery address,Transaction Order Dependence,Function Level,86-116,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#86-116
openzeppelin,Recoverable_Wallet,Ownership transfer cancellation can be front-run,Transaction Order Dependence,Function Level,38-55,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#38-55
openzeppelin,Recoverable_Wallet,Recovery cancellation can be front-run,Transaction Order Dependence,Function Level,97-125,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#97-125
openzeppelin,Recoverable_Wallet,uint256/uint16 type mismatch,not_swc,,,
openzeppelin,Recoverable_Wallet,Mixed usage of the recovery and ownership transfer systems,not_swc,,,
openzeppelin,Recoverable_Wallet,Obscure error message provided upon contract creation failure,not_swc,,,
openzeppelin,Recoverable_Wallet,Unnecessary call to reset_recovery() in constructor,Code With No Effects,Line Level,80,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#80
openzeppelin,Recoverable_Wallet,Duplicate code in the finish_recovery() function,Code With No Effects,Line Level,119,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#119
openzeppelin,Recoverable_Wallet,False comment in the start_recovery() function,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be started while another is underway,not_swc,,,
openzeppelin,Recoverable_Wallet,Ownership transfer can be cancelled before one is underway,Transaction Order Dependence,Function Level,44-48,https://github.com/Zoltu/recoverable-wallet/blob/2207f5a7cc3b2607f7f97a769fbca7fe9235952b/contracts/source/recoverable-wallet.sol#44-48
openzeppelin,Recoverable_Wallet,Overloaded functionality of the start_recovery() function,not_swc,,,
openzeppelin,UMA,Bond penalty may not apply,not_swc,,,
openzeppelin,UMA,Lack of event emission after sensitive actions,not_swc,,,
openzeppelin,UMA,Functions with unexpected side-effects,not_swc,,,
openzeppelin,UMA,Long and complex functions,not_swc,,,
openzeppelin,UMA,Complex Repay Function,not_swc,,,
openzeppelin,UMA,Current config not updated,not_swc,,,
openzeppelin,UMA,Emergency shutdown defined at the wrong level,Incorrect Inheritance Order,Function Level,508-516,https://github.com/UMAprotocol/protocol/blob/c452750a073488aa9b7caa86bb6206396412dcf9/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L508-L516
openzeppelin,UMA,Event missing emit keyword,not_swc,,,
openzeppelin,UMA,Inconsistent hasPrice determination,not_swc,,,
openzeppelin,UMA,Incorrect error message,not_swc,,,
openzeppelin,UMA,Misleading comments,not_swc,,,
openzeppelin,UMA,Missing NatSpec comments,not_swc,,,
openzeppelin,UMA,Functions not failing early,not_swc,,,
openzeppelin,UMA,Propose or Dispute a price from the zero address,not_swc,,,
openzeppelin,UMA,Mixed testing and production code,not_swc,,,
openzeppelin,UMA,Approximate compounding,not_swc,,,
openzeppelin,UMA,Consider ERC777 tokens,not_swc,,,
openzeppelin,UMA,Incorrect filename,not_swc,,,
openzeppelin,UMA,Naming issues hinder code understanding and readability,not_swc,,,
openzeppelin,UMA,Not using the immutable keyword,Outdated Compiler Version,Line Level,95,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualLiquidatable.sol#L95
openzeppelin,UMA,Redundant code and unnecessary complex calculations,Code With No Effects,Line Level,494,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/oracle/implementation/OptimisticOracle.sol#L494
openzeppelin,UMA,TODOs in code,not_swc,,,
openzeppelin,UMA,Typographical errors,not_swc,,,
openzeppelin,UMA,Unnecessary imports,Code With No Effects,Line Level,16,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualPositionManager.sol#L16
openzeppelin,UMA,Unnecessary type cast,Code With No Effects,Line Level,102,https://github.com/UMAprotocol/protocol/blob/1631ef7ad29aaeba756ef3b9a01c667e1343df85/packages/core/contracts/financial-templates/perpetual-multiparty/PerpetualCreator.sol#L102
openzeppelin,WeTrust_ROSCA_contract_code,Use safe math,Integer Overflow and Underflow,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Be careful with integer division,Code With No Effects,Line Level,288、316、341、381、389,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Use of send,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Usage of magic constants,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Bug Bounty,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,totalFees will always be 0 on LogFundsWithdrawal,Code With No Effects,Line Level,495、502,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Naming suggestions,not_swc,,,
openzeppelin,WeTrust_ROSCA_contract_code,Timestamp usage,Block values as a proxy for time,Line Level,198、230、258、470,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
openzeppelin,WeTrust_ROSCA_contract_code,Avoid duplicated code,Code With No Effects,Function Level,"441-451, 406-418",https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol#L441
openzeppelin,WeTrust_ROSCA_contract_code,Use latest version of Solidity,Outdated Compiler Version,Subcontract Level,1-537,https://github.com/WeTrustPlatform/rosca-contracts/blob/2af29be97d529488f5488fe0592f9e6b3585254f/contracts/ROSCA.sol
Quantstamp,Merit Circle,Write to Arbitrary Storage Location,not_swc,,,
Quantstamp,Merit Circle,Use of Insecure Casting Operations,Integer Overflow and Underflow,Function Level,50-53，55-58,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,62， 116， 129， 122,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,25,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/TokenSaver.sol
Quantstamp,Merit Circle,Unchecked Return Values,Unchecked Call Return Value,Line Level,"81, 42",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/base/BasePool.sol
Quantstamp,Merit Circle,Flash Loan Vulnerability,not_swc,,,
Quantstamp,Merit Circle,Maximum Approve,not_swc,,,
Quantstamp,Merit Circle,Unlocked Pragma,Floating Pragma,Contract Level,all,
Quantstamp,Merit Circle,Privileged Roles and Ownership,not_swc,,,
Quantstamp,Merit Circle,Missing Input Validation,not_swc,,,
Quantstamp,Merit Circle,Events Not Emitted on State Change,not_swc,,,
Quantstamp,Merit Circle,View.fetchData() Always Calling getMultiplier(0),not_swc,,,
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,45-82,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/View.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,"110-142, 144-146",https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/LiquidityMiningManager.sol
Quantstamp,Merit Circle,Gas Costs for Processing Arrays Could be Prohibitive,DoS With Block Gas Limit,Function Level,90-94,https://github.com/Merit-Circle/merit-liquidity-mining/blob/f558820be3da400638eb3a978245cdb126367ac4/contracts/TimeLockPool.sol
Quantstamp,Merit Circle,Ignored Failed Transaction,not_swc,,,
Quantstamp,MetaVault V2,Curve 3pool Imbalance Attack,not_swc,,,
Quantstamp,MetaVault V2,Integer Overflow/ Underflow,Integer Overflow and Underflow,Function Level,486-506,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L486-L506
Quantstamp,MetaVault V2,Strategy caps are not always enforced,not_swc,,,
Quantstamp,MetaVault V2,slippage possible,not_swc,,,
Quantstamp,MetaVault V2,Epochs can overlap affecting getMultiplier,not_swc,,,
Quantstamp,MetaVault V2,Wrong address could be used instead of stable-coin,not_swc,,,
Quantstamp,MetaVault V2,Adding and removing strategies is error prone,not_swc,,,
Quantstamp,MetaVault V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Line Level,23,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/controllers/StrategyControllerV2.sol#L23
Quantstamp,MetaVault V2,Missing input validation,not_swc,,,
Quantstamp,MetaVault V2,Sensitive functions do not emit any events,not_swc,,,
Quantstamp,MetaVault V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,213,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVaultHarvester.sol#L213
Quantstamp,MetaVault V2,Implicit assumptions,not_swc,,,
Quantstamp,MetaVault V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,MetaVault V2,Unchecked Return Value,Unchecked Call Return Value,Function Level,245-267,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/metavault/yAxisMetaVault.sol#L245-L267
Quantstamp,MetaVault V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/yaxis-project/metavault/blob/9b939f8bee13109d9d04fac3171ec4d14ed9722b/contracts/interfaces/Aave.sol#L2
Quantstamp,MetaVault V2,Defense in depth to avoid reentrancy,not_swc,,,
Quantstamp,RariCapital V2,Inaccurate token prices,not_swc,,,
Quantstamp,RariCapital V2,Incorrect Rari Governance Token amount,not_swc,,,
Quantstamp,RariCapital V2,Uninitialized _ethUsdPriceFeed,Uninitialized Storage Pointer,Line Level,30,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundPriceConsumer.sol#L30
Quantstamp,RariCapital V2,Divergent mirrored states,not_swc,,,
Quantstamp,RariCapital V2,Gas Usage / for Loop Concerns,DoS With Block Gas Limit,Function Level,145-170,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L145-L170
Quantstamp,RariCapital V2,Unchecked Return Value,not_swc,,,
Quantstamp,RariCapital V2,Unfinished token upgrades,not_swc,,,
Quantstamp,RariCapital V2,Incorrect value for supported currencies,not_swc,,,
Quantstamp,RariCapital V2,Amount in pools may be incorrect,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation,not_swc,,,
Quantstamp,RariCapital V2,Misaligned comments and implementation,not_swc,,,
Quantstamp,RariCapital V2,ETH/USD prices could be stale,not_swc,,,
Quantstamp,RariCapital V2,Off-by-one error,not_swc,,,
Quantstamp,RariCapital V2,Missing input argument validation (2),not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address,not_swc,,,
Quantstamp,RariCapital V2,Dangerous cast from uint256 to int256,not_swc,,,
Quantstamp,RariCapital V2,Alance Double-Spend Exploit,not_swc,,,
Quantstamp,RariCapital V2,Unlocked Pragma,Floating Pragma,Line Level,2,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/lib/pools/CompoundPoolController.sol#L2
Quantstamp,RariCapital V2,Experimental features should not be used on Mainnet deployments,not_swc,,,
Quantstamp,RariCapital V2,Checks-Effects-Interactions Pattern,Reentrancy,Function Level,750-767,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundManager.sol#L750-L767
Quantstamp,RariCapital V2,Block Timestamp Manipulation,Block values as a proxy for time,Line Level,603,https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/7f351ca3df72a0196f3640f30a6db73660ab1467/contracts/RariFundController.sol#L603
Quantstamp,RariCapital V2,Duration of RGT distribution may be different from 60 days,not_swc,,,
Quantstamp,RariCapital V2,Increased loss of precision due to dividing before multiplication,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership (2),not_swc,,,
Quantstamp,RariCapital V2,Unexpected pool,not_swc,,,
Quantstamp,RariCapital V2,Single point of failure for price feeds,not_swc,,,
Quantstamp,RariCapital V2,Fallback function can receive funds from any address (2),not_swc,,,
Quantstamp,RariCapital V2,Potential funds stuck in contract,not_swc,,,
Quantstamp,RariCapital V2,Rounding error,not_swc,,,
Quantstamp,RariCapital V2,Rari Governance Tokens can still be claimed after distribution ends,not_swc,,,
Quantstamp,RariCapital V2,Upgrading Fund Controller can be done when fund is enabled,not_swc,,,
Quantstamp,RariCapital V2,Expired cache,not_swc,,,
Quantstamp,RariCapital V2,Faulty dev environment might not print some enum and struct layout errors,not_swc,,,
Quantstamp,RariCapital V2,Missing input validation,not_swc,,,
Quantstamp,RariCapital V2,Hardcoded dependency contracts,not_swc,,,
Quantstamp,RariCapital V2,Privileged Roles and Ownership,not_swc,,,
Quantstamp,RariCapital V2,Setter function missing event,not_swc,,,
Quantstamp,RariCapital V2,Unclear addPool omission in initialize,not_swc,,,
Quantstamp,RariCapital V2,No example of token distribution implementation is presented,not_swc,,,
Quantstamp,RariCapital V2,Controller unable to pause specific stablecoins,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,105,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L105
QuillAudits,Binamon Energy Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,187,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L187
QuillAudits,Binamon Energy Smart Contract,Approve Race,Transaction Order Dependence,Function Level,105-109,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code
QuillAudits,Binamon Energy Smart Contract,Missing Address Validation,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Lack of MultiSig Transactions,not_swc,,,
QuillAudits,Binamon Energy Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,193,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB017C#code#L193
QuillAudits,Binamon Energy Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xd8813B5Dfa9AbEB693F217Bb905ec99B66FB021C#code
QuillAudits,Binamon Z1 Smart Contract,Public function that could be declared external,Function Default Visibility,Line Level,104,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L104
QuillAudits,Binamon Z1 Smart Contract,Denial of Service in Transactions,DoS with Failed Call,Line Level,168,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L168
QuillAudits,Binamon Z1 Smart Contract,Approve Race,Transaction Order Dependence,Function Level,104-108,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Missing Address Validation,not_swc,,,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Binamon Z1 Smart Contract,Usage of BlockimeStamp,Block values as a proxy for time,Line Level,174,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code#L174
QuillAudits,Binamon Z1 Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0x80E15FE54e9D155f8366187A6a32BDEF9C2366c4#code
QuillAudits,Bond Appetit-Bond Appetit,Potential safeApprove blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrongly calculated ETH amount to transfer,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential re-entrancy problem,Reentrancy,Line Level,227,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/profit/ProfitSplitter.sol#L227
QuillAudits,Bond Appetit-Bond Appetit,Blocked LP tokens on contract,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed depositary check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Invalid depositary add/remove logic,Code With No Effects,Line Level,49-70,https://github.com/bondappetit/bondappetit-protocol/blob/88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/depositary/AgregateDepositaryBalanceView.sol#L49-L70
QuillAudits,Bond Appetit-Bond Appetit,Wrongly used safeApprove,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Budget payment blocking,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential integer overflow,Integer Overflow and Underflow,Line Level,147,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol#L147
QuillAudits,Bond Appetit-Bond Appetit,Potential div by zero error,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Vesting account duplication,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unchecked vesting contract address,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Wrong reward calculation of balance < 100,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Missed zero share check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential custodial asset collateral incorrect signatures,Lack of Proper Signature Verification,Line Level,88,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/depositary/RealAssetDepositaryBalanceView.sol#L88
QuillAudits,Bond Appetit-Bond Appetit,Mixed msg.sender and _msgSender(),not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Too flexible configuration,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potentially wrong-sized access control list,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Probably missed input check,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Unneeded calculations,Code With No Effects,Line Level,187,https://github.com/bondappetit/bondappetit-protocol/blob/355180f0aca0b29d60d808f761052956b7a3a159/contracts/Market.sol#L187
QuillAudits,Bond Appetit-Bond Appetit,Total shares cache,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Potential collateralization imbalance,not_swc,,,
QuillAudits,Bond Appetit-Bond Appetit,Runtime-configured contract ownership,not_swc,,,
QuillAudits,DOXY - v1.3,Floating pragma,Floating Pragma,Contract Level,all,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Unoptimized variable declarations,State Variable Default Visibility,Line Level,282-284,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc9F#code
QuillAudits,DOXY - v1.3,Struct and address declarations without usage,Code With No Effects,Line Level,"284, 312-315",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc10F#code
QuillAudits,DOXY - v1.3,Unnecessary gas consumption due to improper variable declaration,Code With No Effects,Line Level,809-818,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc11F#code
QuillAudits,DOXY - v1.3,Variable declarations without concrete visibility,State Variable Default Visibility,Line Level,270,https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc12F#code
QuillAudits,DOXY - v1.3,Loose timeLimit validation for sell transactions on pancakeSwap,Lack of Proper Signature Verification,Line Level,"497-502, 511-516",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc13F#code
QuillAudits,DOXY - v1.3,Ineffiecient function declaration,Function Default Visibility,Line Level,"373-381, 393-411, 413-430, 432-443, 445-460, 679-695, 754-756, 758-764, 824-826, 828-830, 832-834, 836-838, 881-883, 972-974, 976-978, 980-982, 984-986, 988-990, 998-1000, 1002-1004, 1010-1012, 1014-1016, 1077-1079",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc14F#code
QuillAudits,DOXY - v1.3,Mistyped argument names in functions,Typographical Error,Line Level,"918, 928, 938, 948, 958, 968",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc15F#code
QuillAudits,DOXY - v1.3,Too many digits,Typographical Error,Line Level,"339, 488, 500, 514, 658, 661, 780, 781, 782, 783, 784, 785, 821, 261, 262",https://testnet.bscscan.com/address/0xbE0AeBfe70087389a98C72C575A6afa9D5D2dc16F#code
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect calculation of borrowed amount,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible remove of necessary adapter,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect change of state,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,creditManager isn't checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Uncounted fees in USDT,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible loss of assets by mistake,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Broken account must be deleted,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of bad account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary allowance,Code With No Effects,Line Level,130,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L130
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect usage of function returned value,Unchecked Call Return Value,Function Level,121-157,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L121-L157
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect taking out of tail account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect minting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidity removing,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Calculation can be incorrect,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Impossible liquidation of broken account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Using tokens with whitelist function,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Looping a linked list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,No checking of element properties when returning it to the list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,priceFeeds can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Work with incorrect decimals,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary inheritance from Proxy,Code With No Effects,Line Level,17,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/integrations/yearn/YearnPriceFeed.sol#L17
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect input parameters,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Too many rights for configurator,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Length of input arrays not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,path length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,wethGateway can't be changed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account can be opened for zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Malicious user can pay less to pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer to zero address,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Usage of ERC777 token can block liquidation,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect require,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible incorrect setting value for maxLeverageFactor,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,User can approve any token,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect length of input data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,amount must be > 1,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,paths[i] length not checked,Write to Arbitrary Storage Location,Line Level,828,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L828
QuillAudits,GearBox Protocol-GearBox Protocol,Index not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible reentrancy,Reentrancy,Function Level,56；55、112；49、102、152、196；75、126；107、128、159、181；242,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L56；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L55；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV2.sol#L112；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L49；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L152；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L196；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L75；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/YearnV2.sol#L126；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L107；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L128；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L159；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/WETHGateway.sol#L181；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L242
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect parameter passed,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Function doesn't exist,Code With No Effects,Line Level,100、116,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L100；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/CurveV1.sol#L116
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect function name,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,params.path length not checked,Write to Arbitrary Storage Location,Line Level,102、200,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L102；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/adapters/UniswapV3.sol#L200
QuillAudits,GearBox Protocol-GearBox Protocol,Balance not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible assets loss,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,masterCreditAccount remains uninitialized,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Account remains connected to previous credit manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary list initialization,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,head can't be taken out,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect update of list,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible duplication of data,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleProof length not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unable to remove pool or manager,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,signatory not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,delegatee not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,expectedLiquidityLimit can be equal to zero,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow can occur,Integer Overflow and Underflow,Line Level,145,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L145
QuillAudits,GearBox Protocol-GearBox Protocol,Transfer of 0 funds,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,_timestampLU can be equal to 0,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Forbidden manager never can use pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Address not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Possible overflow,Integer Overflow and Underflow,Line Level,593-594,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditManager.sol#L593-L594
QuillAudits,GearBox Protocol-GearBox Protocol,User can't repay with force flag,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Add condition,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Upgradeable creditManager params,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary check,Code With No Effects,Line Level,156,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L156
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary update,Code With No Effects,Line Level,192,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L192
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary initialization,Code With No Effects,Line Level,297；72；107,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L297；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/DataCompressor.sol#L72；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearToken.sol#L107
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary print to console,Code With No Effects,Line Level,343,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/credit/CreditFilter.sol#L343
QuillAudits,GearBox Protocol-GearBox Protocol,User can receive only ETH,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Tokens can be locked on account,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Print to console,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary library for user types,Code With No Effects,Line Level,1-113,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/libraries/data/Types.sol
QuillAudits,GearBox Protocol-GearBox Protocol,wethAddress can be const,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary safeMath,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Incorrect comment,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Similar functions are used,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,merkleRoot can't be updated,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,All functions can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Visibility not set,State Variable Default Visibility,Line Level,16、20,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L16；https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/core/ContractsRegister.sol#L20
QuillAudits,GearBox Protocol-GearBox Protocol,Event not emitting,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Range for variables not set,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Two variables can be merged,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary setting on each mint,Code With No Effects,Line Level,14,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/tokens/GearNFT.sol#L14
QuillAudits,GearBox Protocol-GearBox Protocol,Unnecessary usage of variable,Code With No Effects,Line Level,191,https://github.com/Gearbox-protocol/gearbox-contracts/blob/0ac33ba87212ce056ac6b6357ad74161d417158a/contracts/pool/PoolService.sol#L191
QuillAudits,GearBox Protocol-GearBox Protocol,Parameters not checked,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,The technical default of liquidity pool,not_swc,,,
QuillAudits,GearBox Protocol-GearBox Protocol,Undesired side effects of address reusing,not_swc,,,
QuillAudits,Glonk Smart Contract,Contract gains to non-withdrawable BNB via the swapAndLiquify function,not_swc,,,
QuillAudits,Glonk Smart Contract,Centralized risk in addLiquidity,not_swc,,,
QuillAudits,Glonk Smart Contract,Description: Costly Loop,not_swc,,,
QuillAudits,Glonk Smart Contract,Outdated Compiler Version,Outdated Compiler Version,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,Floating Pragma,Floating Pragma,Line Level,5,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code#L5
QuillAudits,Glonk Smart Contract,"Potential use of ""block.timestamp"" as source of randomness",Weak Sources of Randomness from Chain Attributes,Line Level,800-815,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,Glonk Smart Contract,Prefer external to public visibility level,not_swc,,,
QuillAudits,Glonk Smart Contract,Using the approve function of the ERC-20 token standard,Transaction Order Dependence,Function Level,509-512,https://bscscan.com/address/0xbD5612F129e081E2a6289ADa05E04014ce7C0810#code
QuillAudits,LTO Network-Token Sale,"Generation of two events in the form emit Transfer(address(0), receiver address, amount);should be added",not_swc,,,
QuillAudits,LTO Network-Token Sale,The recipient address specified in the Transfer event does not match factual address of the recipient,not_swc,,,
QuillAudits,LTO Network-Token Sale,In case _intermediate is being used at the moment by some user addIntermediateAddress call will cause all token transfers to this user to fail to reach them.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"totalSupply_value won’t be properly updated in case of transferFrom function usage, which is inherited from the StandardToken.",not_swc,,,
QuillAudits,LTO Network-Token Sale,There are mechanics which allows users to transfer tokens from some predefined addresses (enumerated in intermediateAddresses) to the bridge balance.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"Users sending ether from contracts which default function performs nontrivial computations (e.g. writing value to a new storage variable) won’t be able to receive their tokens, while the project won’t be able to receive transferred ether. This is caused by limited gas stipend of the transfer function.",Insufficient Gas Griefing,Line Level,215,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L215
QuillAudits,LTO Network-Token Sale,It’s recommended using withdrawal pattern to send change and to untie sending of change from other actions.,not_swc,,,
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,223,https://github.com/ltonetwork/lto-erc20-token/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L223
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,227,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L227
QuillAudits,LTO Network-Token Sale,Payments are not expected to be sent to this function,Code With No Effects,Line Level,233,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L233
QuillAudits,LTO Network-Token Sale,"An attacker can send some value of ether in the first transaction, receive maximum bonus and then send 99 transactions of minimal value minimumAmount, depriving other token sale participants of their bonuses.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Individual cap mechanics are subject to Sybil attack. An user can distribute his N ethers to uint(N / maximumCapAmount) + 1 distinct addresses, and perform purchase from each of these addresses, effectively bypassing maximumCapAmount limit.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"The burning of unsold tokens was mentioned by the client. However, in the contracts code there is no sign of such mechanics and LTOToken is not burnable.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Generation of an event in the form emit Transfer(address(0), _bridgeAddress, _bridgeSupply);should be added. Otherwise, some client software won’t recognize the arrival of the tokens to the _bridgeAddress.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend using SafeMath.sub here because this code fragment has a high probability of underflow error.,Integer Overflow and Underflow,Line Level,60,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOToken.sol#L60
QuillAudits,LTO Network-Token Sale,We recommend using this type explicitly and making appropriate code changes to simplify reasoning about the code.,not_swc,,,
QuillAudits,LTO Network-Token Sale,"This branch is unachievable in practise (it requires ~5e14 ether to achieve), we recommend replacing it with assert(false);.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Expression totalWannaBuyAmount == 0 here is unachievable, we recommend removing it from if-operator and introduce assert(totalWannaBuyAmount > 0); instead.",Code With No Effects,Line Level,144,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L144
QuillAudits,LTO Network-Token Sale,"In startSale function it would be helpful to ensure that token balance of the contract is equal to totalSaleAmount. Otherwise, if the token balance is less than totalSaleAmount some ether will be locked in the contract forever.",not_swc,,,
QuillAudits,LTO Network-Token Sale,"Right after deployment of the contract isEnded function will return true. This won’t cause any troubles in this version of the code, but it’s better to return false in case the sale was never started ",not_swc,,,
QuillAudits,LTO Network-Token Sale,"It’s better to use the ethDecimals constant, instead of the 1 ether value to prevent possible inconsistencies.",not_swc,,,
QuillAudits,LTO Network-Token Sale,Condition <= is excessive and can be replaced with a strict comparison (<),not_swc,,,
QuillAudits,LTO Network-Token Sale,two processes can be separated and gas spendings by the project can be minimized,not_swc,,,
QuillAudits,LTO Network-Token Sale,"We recommend creating the explicit view function isSaleInitialized and use it here to prevent double initialization, as well as throughout isStarted, isEnded and other state querying functions.",not_swc,,,
QuillAudits,LTO Network-Token Sale,We recommend checking the result of token transfer call.,Unchecked Call Return Value,Line Level,235,https://github.com/legalthings/tokensale/blob/02fa2620aef4c854675230b6544461961d47f968/contracts/LTOTokenSale.sol#L235
QuillAudits,LTO Network-Token Sale,Tokens which were accidentally sent to the bridge address could not be recovered. We recommend adding require(to != bridgeAddress); check.,not_swc,,,
QuillAudits,LTO Network-Token Sale,If value is expected to be greater than bridgeBalance in some cases we recommend adding check require(value <= bridgeBalance);. ,not_swc,,,
QuillAudits,LTO Network-Token Sale,The sum of balances is not equal to totalSupply. This behavior could be unexpected for some tools or clients.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of address parameter value in contract constructor,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No validation of the address parameter value in function before using this parameter in access modifiers.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Ability to change the value of a private variable from another contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function calculation result is not processed,Unchecked Call Return Value,Line Level,64,https://github.com/iearn-finance/yearn-vaults/blob/v0.1.3/contracts/BaseStrategy.sol#L164
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Safe math is not used,Integer Overflow and Underflow,Line Level,338,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L338
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Function description differs from implementation.,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Duplicate code,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Variable declared but not used,Presence of unused variables,Line Level,273,https://github.com/iearn-finance/yearn-vaults/blob/54db126821c4d7aaaf5839be935cecb9b1bf088b/contracts/BaseStrategy.sol#L273
QuillAudits,Yearn Finance-Vault V2 (Solidity part),No event registration when changing the parameters of the contract,not_swc,,,
QuillAudits,Yearn Finance-Vault V2 (Solidity part),Exact block timestamps usage.,Block values as a proxy for time,Line Level,320,https://github.com/iearn-finance/yearn-vaults/blob/cff924f1894cca1820a588b14d341c4fa4f384c0/contracts/BaseStrategy.sol#L320
QuillAudits,Yearn Finance-Yearn Protocol V1,Unsafe implementation of arithmetic operations,Integer Overflow and Underflow,Line Level,787,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L787
QuillAudits,Yearn Finance-Yearn Protocol V1,Using math operations without the SafeMath safe library,Integer Overflow and Underflow,Line Level,912,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L912
QuillAudits,Yearn Finance-Yearn Protocol V1,Usage of an increment when issuing a token without the Counters safe library,Integer Overflow and Underflow,Line Level,911,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L911
QuillAudits,Yearn Finance-Yearn Protocol V1,Function calculation result is not processed,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `withdrawalFee/performanceFee/strategistReward/ keepCRV` values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,No boundary check for `min` in yVault,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Check strategy existence for given token.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use modifiers to check transaction authorization as in the yInsure.sol contract,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use constants.,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Use human readable/understandable errors,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,Unused struct,Code With No Effects,Line Level,561-595、610-627,https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L561-L595；https://gist.github.com/andrecronje/2b94942709f0594577bec9eca6ed52a0#file-yinsure-sol-L610-L627
QuillAudits,Yearn Finance-Yearn Protocol V1,"The line is too long, it’s better to separate to a multiline.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,We recommend adding reentrancy guards to all public methods which call other contracts just to avoid possible issues.,Reentrancy,Function Level,89、142,https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L89；https://github.com/iearn-finance/yearn-protocol/blob/9ff0dc0ea73642c529383d0675930a41bf033295/contracts/vaults/yWETH.sol#L142
QuillAudits,Yearn Finance-Yearn Protocol V1,Little bit of wrong line alignment,not_swc,,,
QuillAudits,Yearn Finance-Yearn Protocol V1,"_fee/_keepCRV potentially can have zero value, so we recommend checking that case to save gas.",not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""payable""",Code With No Effects,Line Level,133,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L133
QuillAudits,Yearn Finance-Yearn Strategy SSB,"Unused ""Address""",Code With No Effects,Line Level,21,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L21
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused internal constant weth,Presence of unused variables,Line Level,24,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L24
QuillAudits,Yearn Finance-Yearn Strategy SSB,sellRewards() threshold values,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Same value is calculated in every loop iteration,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Value of memory variable could be used instead of storage variable,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Malfunction on managed pools,not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Unused receive() function,Code With No Effects,Line Level,422,https://github.com/tonkers-kuma/strategy-ssb/blob/e49d07a64ea0eb4f5a199c2bf9ea4c8aee2b313f/contracts/Strategy.sol#L422
QuillAudits,Yearn Finance-Yearn Strategy SSB,Strategy's outstanding debt is not accounted in adjustPosition(),not_swc,,,
QuillAudits,Yearn Finance-Yearn Strategy SSB,Balancer LP token is not in protected tokens list,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Condition for proposal approval,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Event ProposalExecuted,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Non-atomic batch execution,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validation of proposal hashes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in proposal(),not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Changes of approved vaults during voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Asynchronous updates of voting power in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Self delegation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Duplicated leaves in MerkleRewards trees,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential flash loan vulnerability,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Upgradable proxy pattern for VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Underflow in History.sol,Integer Overflow and Underflow,Line Level,224,https://github.com/element-fi/elf-council/blob/351a7183d4b64dd5f53a66ba4609cef1da1ce951/contracts/libraries/History.sol#L224
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Validity of voting period,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Reentrancy vulnerability,Reentrancy,Function Level,237-276,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/CoreVoting.sol#L237-L276
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Griefing attacks for high-profile delegates,DoS With Block Gas Limit,Function Level,277-299,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/libraries/History.sol#L277-L299
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Double execution vulnerability in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Differentiation of identical Timelock proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unchecked generic calls in Treasury,Unchecked Call Return Value,Line Level,72,https://github.com/element-fi/council/blob/3d751c959b42573c78ccd0bccbc80424bf6d9a90/contracts/features/Treasury.sol#L72
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Mapping quorums,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Recycling garbage proposals,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Packed storage update in LockingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code readability in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Cancellation of votes,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in VestingVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Systematic sanity checks for explicit type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Unsafe type conversions,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Redetermination of membership in GSCVault,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent owner initialization in CoreVoting,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent Solidity version requirements,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity check for proposal IDs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Inconsistent storage cleanup in Timelock,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Code duplication in History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Input validation for delegatee addresses,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for Merkle proofs,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Sanity checks for History.sol,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Potential inconsistency of interfaces,not_swc,,,
Runtime_Vеrification,Element_Finance_Governance_Security_Audit_Report,Typo in function names,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,There are two instances of multiplication occurring on the result of a division.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract,"The contract inherits the functionality of ERC20Capped, but this functionality is not used at all as there",Code With No Effects,Line Level,938,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevomonToken.sol
Solidity_Finance,RevomonVR Smart Contract, The owner or PoolManager can set the total reward balance of each pool to any value at any time without contributing any Revo tokens.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the LockRevoToken contract, the increaseLockAmount() function incorrectly uses a transfer() on
line 487, when intending to use a transferFrom() in order to transfer tokens from the msg.sender to the contract. In the current state, no tokens are moved at all, as the tokens are being transferred from the contract to the contract.",Code With No Effects,Line Level,487,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoLockStages.sol
Solidity_Finance,RevomonVR Smart Contract,The RevoPoolManager file is saved as a (.ts) Typescript file when it should be a .sol (Solidity) file.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, Expensive looping is used when removing pool addresses which does not account for duplicates that may be in the list.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract, The contract uses an outdated version of ReentrancyGuard which is very expensive in terms of gas consuption.,not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," In the RevoNFT contract, the local variable countNotEmpty is never used within the getTokensDbIdByOwnerAndCollection() function.",Presence of unused variables,Line Level,1664,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoNFT.sol
Solidity_Finance,RevomonVR Smart Contract,"The getUserPoolReward() function gets the user's tier data, but this is not necessary since it is not used within this function.",Presence of unused variables,Line Level,342,https://github.com/RevomonVR/Contracts/blob/9d0da49342a1a87b6cafebd4945612c2cfb8669d/RevoStaking.sol#L342
Solidity_Finance,RevomonVR Smart Contract,"Several functions are declared public, but are never called internally. Several state variables can never be modified, but are not declared constant.",not_swc,,,
Solidity_Finance,RevomonVR Smart Contract," Several functions are declared public, but are never called internally.",not_swc,,,
Trail_of_Bits,0x-protocol,WETH9 transferFrom often does not follow spec,not_swc,,,
Trail_of_Bits,0x-protocol,Zero fee orders are possible if a user performs transactions with a zero gas,not_swc,,,
Trail_of_Bits,0x-protocol,Potential overflow in transactionId allowing arbitrary execution of transactions by a malicious owner,Integer Overflow and Underflow,Line Level,302,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWallet.sol#L302
Trail_of_Bits,0x-protocol,Potential overflow in MultiSigWalletWithTimelock when calculating whether the timelock has passed,Integer Overflow and Underflow,Line Level,54-57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/multisig/contracts/src/MultiSigWalletWithTimeLock.sol#L54-L57
Trail_of_Bits,0x-protocol,Fee refundsincentivize transaction centralization through market makers,not_swc,,,
Trail_of_Bits,0x-protocol,Market makers have a reduced cost for performing front-running attacks,not_swc,,,
Trail_of_Bits,0x-protocol,cancelOrdersUpTo can be used to permanently block future orders,not_swc,,,
Trail_of_Bits,0x-protocol,setSignatureValidatorApproval race condition may be exploitable,Transaction Order Dependence,Line Level,85,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinSignatureValidator.sol#L85
Trail_of_Bits,0x-protocol,Batch processing of transaction execution and order matching may lead to exchange griefing,DoS with Failed Call,Function Level,426-543,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange/contracts/src/MixinMatchOrders.sol#L426-543
Trail_of_Bits,0x-protocol,Lack of eventsforcritical operations,not_swc,,,
Trail_of_Bits,0x-protocol,Lack of validation in the makerAssetData and takerAssetData leadsto unexpected behavior,not_swc,,,
Trail_of_Bits,0x-protocol,Transferswith zero fee amountscan log arbitrary data in their feeAssetData,not_swc,,,
Trail_of_Bits,0x-protocol,MultiSigWallet does notcheck contract existence before call,not_swc,,,
Trail_of_Bits,0x-protocol,Specification-Code mismatch for AssetProxyOwner timelock period,not_swc,,,
Trail_of_Bits,0x-protocol,Rounding division errorscan accumulate over partial fills,Integer Overflow and Underflow,Line Level,57,https://github.com/0xProject/0x-monorepo/blob/abd479dc68fa75719647db261130418725fd40d5/contracts/exchange-libs/contracts/src/LibMath.sol#L57
Trail_of_Bits,0x-protocol,The Cobb–Douglasfunction is not properly documented and revertswith valid parameters,not_swc,,,
Trail_of_Bits,0x-protocol,Unclear documentation on howorder filling can fail,not_swc,,,
Trail_of_Bits,0x-protocol,"Potentialsingle point of failure for ""read-only-mode"" and ""catastrophic-failure-mode""",not_swc,,,
Trail_of_Bits,0x-protocol,ERC20 reverts during certain self-transfer,not_swc,,,
Trail_of_Bits,0x-protocol,_assertStakingPoolExists never returnstrue,not_swc,,,
Trail_of_Bits,0x-protocol,Callsto setParams may set invalid values and produce unexpected behavior in the staking contracts,not_swc,,,
Trail_of_Bits,0x-protocol,Malicious non-operator makercan decrease staking pool operatorshare,not_swc,,,
Trail_of_Bits,0x-protocol,Non-operator makerscan add or remove other makers,not_swc,,,
Trail_of_Bits,Opyn,Front-running a withdrawal operation can cause it to revert,Transaction Order Dependence,Line Level,256-263,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L256
Trail_of_Bits,Opyn,onERC721Received callback is never called when new tokens are minted or transferred,not_swc,,,
Trail_of_Bits,Opyn,Users can create vaults that cannot be liquidated,not_swc,,,
Trail_of_Bits,Opyn,Solidity compiler optimizations can be problematic,not_swc,,,
Trail_of_Bits,Opyn,Initialization function can be front-run,Transaction Order Dependence,Function Level,33-36,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/ShortPowerPerp.sol#L33-L36
Trail_of_Bits,Opyn,The computation of the normalization factor can fail,Integer Overflow and Underflow,Function Level,1102-1142,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol
Trail_of_Bits,Opyn,Lack of access controls allows anyone to deposit Uniswap tokens,Unprotected Ether Withdrawal,Function Level,344-351,https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L344-L351
Trail_of_Bits,Opyn,Users can disrupt the bookkeeping of the strategy when it is deployed,DoS with Failed Call,Function Level,"330-337,436-460","https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/core/Controller.sol#L330-L337, https://github.com/opynfinance/squeeth-monorepo/blob/427ba395545de44920206deaa4bcc217b3964952/packages/hardhat/contracts/strategy/CrabStrategy.sol#L436-L460"
Trail_of_Bits,Opyn-Gamma-Protocol,Contracts   used   as   dependencies   do   not   track   upstream   changes,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,TradeCallee   does   not   validate   trade   orders,Authorization through tx.origin,Line Level,64,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/external/callees/TradeCallee.sol#L64
Trail_of_Bits,Opyn-Gamma-Protocol,Controller   _call   function   lacks   a   return   statement,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Adverse   market   conditions   can   eliminate   liquidation   incentives,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,MarginCalculator   defines   events   but   never   emits   them,Presence of unused variables,Line Level,78-84,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L78-L84
Trail_of_Bits,Opyn-Gamma-Protocol,callRestricted   is   disabled   by   default,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Architecture   can   be   simplified,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,"Short,   long,   collateral,   and   vault   data   structures   may   be   sparse   “arrays”",not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Error-prone operate function change rates are fullyc alculated only during withdrawals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Stablecoin value is assumed to be constant,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Numerous   internal   and   external   assumptions,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,intToUint   returns   absolute   values,Integer Overflow and Underflow,Function Level,71-94,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/libs/FixedPointInt256.sol#L71-L94
Trail_of_Bits,Opyn-Gamma-Protocol,getProceed   returns   absolute   value   of   required   collateral,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,Non-ideal   handling   of   arithmetic,Integer Overflow and Underflow,Line Level,893-907,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L893-L907
Trail_of_Bits,Opyn-Gamma-Protocol,Unclear   configuration   values   standards,Integer Overflow and Underflow,Line Level,105,https://github.com/opynfinance/GammaProtocol/blob/9a75da2ad8beefdaa4caa97d17799b50552ca450/contracts/core/MarginCalculator.sol#L105
Trail_of_Bits,Opyn-Gamma-Protocol,Decimals   set   by   Yearn   pricer   do   not   reflect   changes   to   yToken   decimals,not_swc,,,
Trail_of_Bits,Opyn-Gamma-Protocol,yToken   exchange   rates   are   fully   calculated   only   during   withdrawals,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could indefinitely lock owner role,not_swc,,,
Trail_of_Bits,UniswapV3Core,Missing validation of _owner argument could lead to incorrect event emission,not_swc,,,
Trail_of_Bits,UniswapV3Core,Anyone could steal pool tokens’ earned interest,not_swc,,,
Trail_of_Bits,UniswapV3Core,Whitepaper contains incorrect equation,not_swc,,,
Trail_of_Bits,UniswapV3Core,Incorrect comparison enables swapping and token draining at no cost,Unprotected Ether Withdrawal,Line Level,502-671,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Unbound loop enables denial of service,DoS With Block Gas Limit,Line Level,544-619,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Front-running pool’s initialization can lead to draining of liquidity provider’s initial deposits,Transaction Order Dependence,Line Level,194-212,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/UniswapV3Pool.sol
Trail_of_Bits,UniswapV3Core,Swapping on zero liquidity allows for control of the pool’s price,not_swc,,,
Trail_of_Bits,UniswapV3Core,Failed transfer may be overlooked due to lack of contract existence check,Unchecked Call Return Value,Line Level,20,https://github.com/Uniswap/v3-core/blob/99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/libraries/TransferHelper.sol
Trail_of_Bits,UniswapV3Core,"getNextSqrtPriceFromInput|Output can return a value outside of MIN_SQRT_RATIO, MAX_SQRT_RATIO",not_swc,,,
